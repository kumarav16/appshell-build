{"version":3,"sources":["../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/bh-toggle.entry.js"],"names":["BhToggle","hostRef","registerInstance","this","bhEventChange","createEvent","isChecked","isDisabled","isError","value","emit","containerClasses","push","inputClasses","labelClasses","h","Host","class","join","type","name","checked","disabled","onChange","event","checkUpdate","target","label","style"],"mappings":"4MAIMA,EAAQ,WACZ,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GACvBE,KAAKC,cAAgBC,YAAYF,KAAM,gBAAiB,GAIxDA,KAAKG,WAAY,EAIjBH,KAAKI,YAAa,EAIlBJ,KAAKK,SAAU,CACjB,CA2BC,OA3BA,wCACD,SAAYC,GACVN,KAAKC,cAAcM,KAAKD,EAC1B,GAAC,oBACD,WAAS,WACDE,EAAmB,CAAC,2CACtBR,KAAKI,YACPI,EAAiBC,KAAK,wCAExB,IAAMC,EAAe,CAAC,oBAClBV,KAAKI,YACPM,EAAaD,KAAK,8BAEhBT,KAAKK,SACPK,EAAaD,KAAK,2BAEpB,IAAME,EAAe,CAAC,mBAAoB,2BAU1C,OATIX,KAAKI,WACPO,EAAaF,KAAK,8BAEXT,KAAKK,QACZM,EAAaF,KAAK,2BAGlBE,EAAaF,KAAK,+BAEZG,YAAEC,IAAM,CAAEC,MAAO,aAAeF,YAAE,QAAS,CAAEE,MAAON,EAAiBO,KAAK,MAAQH,YAAE,QAAS,CAAEE,MAAOJ,EAAaK,KAAK,KAAMC,KAAM,WAAYV,MAAON,KAAKM,MAAOW,KAAMjB,KAAKiB,KAAMC,QAASlB,KAAKG,UAAWgB,SAAUnB,KAAKI,WAAYgB,SAAU,SAACC,GAAY,EAAKC,YAAYD,EAAME,OAAOL,QAAU,IAAMN,YAAE,OAAQ,CAAEE,MAAO,sBAAwBd,KAAKwB,OAAUZ,YAAE,OAAQ,CAAEE,MAAOH,EAAaI,KAAK,MAAQf,KAAKwB,QACna,KAAC,EA3CW,GA6Cd3B,EAAS4B,MA/CW,2nG","file":"static/js/137.d73cf88e.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-c0304f12.js';\n\nconst bhToggleCss = \".bh-toggle{display:flex;flex-direction:row;align-items:flex-start;-webkit-touch-callout:none;-moz-tap-highlight-color:transparent;-webkit-tap-highlight-color:transparent}.bh-toggle__input-container{height:var(--toggle-container-height);display:flex;align-items:center;justify-content:center;position:relative}.bh-toggle__input{outline:none;-webkit-appearance:none;-moz-appearance:none;-o-appearance:none;appearance:none;padding:0;margin:0;background-color:var(--color-fill-control-unselected-supplemental);border-color:var(--color-fill-control-unselected-supplemental);width:var(--toggle-switch-width);height:var(--toggle-switch-height);border-radius:var(--toggle-switch-height);transition:inherit;border:none}@media (hover: hover){.bh-toggle__input,.bh-toggle__input-container{cursor:pointer}.bh-toggle__input-container--disabled,.bh-toggle__input--disabled{cursor:not-allowed}}.bh-toggle__slider{pointer-events:none;display:flex;align-items:center;justify-content:center;transition:inherit}.bh-toggle__slider::before{position:absolute;left:0px;content:'';height:var(--toggle-slider-height);width:var(--toggle-slider-width);border-radius:100%;background-color:var(--color-fill-common-secondary);transition:inherit;border-style:solid;border-color:var(--color-fill-control-unselected-supplemental);border-width:calc(\\r\\n\\t\\t(var(--toggle-switch-height) - var(--toggle-slider-height)) / 2\\r\\n\\t)}.bh-toggle__input:checked+.bh-toggle__slider::before{left:20px;border-color:var(--color-border-control-selected);background-color:var(--color-fill-common-secondary)}.bh-toggle__input--error+.bh-toggle__slider::before,.bh-toggle__input--error:checked+.bh-toggle__slider::before{background-color:var(--color-fill-common-secondary);border-color:var(--color-fill-control-error-supplemental)}.bh-toggle__input--disabled+.bh-toggle__slider::before,.bh-toggle__input--disabled.bh-toggle__input:checked+.bh-toggle__slider::before{background-color:var(--color-fill-control-disabled);border-color:var(--color-fill-control-disabled-supplemental)}.bh-toggle__input:checked{background-color:var(--color-fill-control-selected)}.bh-toggle__input--error,.bh-toggle__input--error:checked{background-color:var(--color-fill-control-error-supplemental)}.bh-toggle__input--disabled,.bh-toggle__input--disabled.bh-toggle__input:checked{background-color:var(--color-fill-control-disabled-supplemental);opacity:1}.bh-toggle__input:focus,.bh-toggle__input:checked.bh-toggle__input:focus{box-shadow:var(--effect-drop-shadow-focus-primary)}.bh-toggle__input:focus:not(:focus-visible),.bh-toggle__input:checked.bh-toggle__input:focus:not(:focus-visible){box-shadow:none}.bh-toggle__input--error:focus,.bh-toggle__input--error:focus.bh-toggle__input--error:checked{box-shadow:var(--effect-drop-shadow-focus-error)}.bh-toggle__input--error:focus:not(:focus-visible),.bh-toggle__input--error:focus:not(:focus-visible).bh-toggle__input--error:checked{box-shadow:none}.bh-toggle__label{display:flex;align-items:center;min-height:var(--toggle-container-height);color:var(--color-text-label-default)}.bh-toggle__label--disabled{color:var(--color-text-label-disabled-default)}.bh-toggle__label{margin-left:var(--spacing-margin-medium)}\";\n\nconst BhToggle = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.bhEventChange = createEvent(this, \"bhEventChange\", 7);\r\n    /**\r\n     * If true, the checkbox will be rendered intially, checked. This attribute determines the checkbox's value ('on'/'off')\r\n     */\r\n    this.isChecked = false;\r\n    /**\r\n     * Disabled buttons are grayed out and cannot be clicked\r\n     */\r\n    this.isDisabled = false;\r\n    /**\r\n     * Error buttons are grayed out and cannot be clicked\r\n     */\r\n    this.isError = false;\r\n  }\r\n  checkUpdate(value) {\r\n    this.bhEventChange.emit(value);\r\n  }\r\n  render() {\r\n    const containerClasses = ['bh-toggle__input-container motion--fast'];\r\n    if (this.isDisabled) {\r\n      containerClasses.push('bh-toggle__input-container--disabled');\r\n    }\r\n    const inputClasses = ['bh-toggle__input'];\r\n    if (this.isDisabled) {\r\n      inputClasses.push('bh-toggle__input--disabled');\r\n    }\r\n    if (this.isError) {\r\n      inputClasses.push('bh-toggle__input--error');\r\n    }\r\n    const labelClasses = ['bh-toggle__label', 'typography--body-medium'];\r\n    if (this.isDisabled) {\r\n      labelClasses.push('bh-toggle__label--disabled');\r\n    }\r\n    else if (this.isError) {\r\n      labelClasses.push('bh-toggle__label--error');\r\n    }\r\n    else {\r\n      labelClasses.push('typography--color-secondary');\r\n    }\r\n    return (h(Host, { class: 'bh-toggle' }, h(\"label\", { class: containerClasses.join(' ') }, h(\"input\", { class: inputClasses.join(' '), type: 'checkbox', value: this.value, name: this.name, checked: this.isChecked, disabled: this.isDisabled, onChange: (event) => { this.checkUpdate(event.target.checked); } }), h(\"span\", { class: 'bh-toggle__slider' }), this.label && (h(\"span\", { class: labelClasses.join(' ') }, this.label)))));\r\n  }\r\n};\r\nBhToggle.style = bhToggleCss;\n\nexport { BhToggle as bh_toggle };\n"],"sourceRoot":""}