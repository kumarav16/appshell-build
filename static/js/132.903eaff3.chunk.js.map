{"version":3,"sources":["../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/bh-progress-bar.entry.js"],"names":["BhProgressBar","hostRef","registerInstance","this","progressComplete","createEvent","mode","size","progress","automaticTimeout","isInAutoProgress","setTimeout","emit","h","Host","class","style","width","transitionDuration"],"mappings":"kNAIMA,EAAa,WACjB,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GACvBE,KAAKC,iBAAmBC,YAAYF,KAAM,mBAAoB,GAI9DA,KAAKG,KAAO,SAIZH,KAAKI,KAAO,SAIZJ,KAAKK,SAAW,EAIhBL,KAAKM,iBAAmB,IAExBN,KAAKO,kBAAmB,CAC1B,CAwCI,OAvCJ,2CAGA,WAAiB,WACG,cAAdP,KAAKG,OAETH,KAAKO,kBAAmB,EACxBP,KAAKK,SAAW,GAChBG,YAAW,WACT,EAAKD,kBAAmB,CAC1B,GAAGP,KAAKM,kBACV,GACA,mCAGA,WACMN,KAAKO,mBACPP,KAAKO,kBAAmB,GAC1BP,KAAKK,SAAW,GAClB,GACA,gCAGA,WACML,KAAKO,mBACPP,KAAKO,kBAAmB,GAC1BP,KAAKK,SAAW,CAClB,GACA,2BACA,WACML,KAAKK,UAAY,KACnBL,KAAKC,iBAAiBQ,MAE1B,GAAC,oBACD,WACE,OAAQC,YAAEC,IAAM,KAAMD,YAAE,MAAO,CAAEE,MAAO,yCAAF,OAA2CZ,KAAKI,OAAUM,YAAE,MAAO,CAAEE,MAAO,6CAAF,OAA+CZ,KAAKO,iBAAmB,cAAgB,IAAMM,MAAO,CAAEC,MAAO,GAAF,OAAKd,KAAKK,UAAY,IAAM,IAAML,KAAKK,SAAQ,KAAKU,mBAAoB,GAAF,OAAKf,KAAKO,iBAAmB,GAAH,OAAMP,KAAKM,iBAAgB,MAAO,QAC/V,IAAC,qBACD,WAAwB,MAAO,CAC7B,SAAY,CAAC,iBACZ,KAAC,EA9Da,GAgEnBT,EAAcgB,MAlEW,6Z","file":"static/js/132.903eaff3.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host } from './index-c0304f12.js';\n\nconst bhProgressBarCss = \".bh-progress-bar{width:100%;height:8px;position:relative;background-color:var(--color-fill-control-slider-background)}.bh-progress-bar.bh-progress-bar-size--large{height:12px}.bh-progress-bar.bh-progress-bar-size--medium{height:8px}.bh-progress-bar.bh-progress-bar-size--small{height:4px}.bh-progress-bar--indicator{height:100%;left:0;top:0;position:absolute;background-color:var(--color-fill-control-selected)}\";\n\nconst BhProgressBar = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.progressComplete = createEvent(this, \"progressComplete\", 7);\r\n    /**\r\n     * Progress bar mode to be either manual or automatic controlled. Valid options are \"manual\" | \"automatic\"\r\n     */\r\n    this.mode = 'manual';\r\n    /**\r\n     * Progress bar size - default value is \"medium\", valid options are \"large\" | \"medium\" | \"small\"\r\n     */\r\n    this.size = 'medium';\r\n    /**\r\n     * Progress bar indicator index from 0 - 100\r\n     */\r\n    this.progress = 0;\r\n    /**\r\n     * This option is valid only when the mode is set to \"automatic\" - the parameter defines the duration of auto-increment of the progress (ms)\r\n     */\r\n    this.automaticTimeout = 5000;\r\n    // States\r\n    this.isInAutoProgress = false;\r\n  }\r\n  /**\r\n   * Custom event to initiate the progress increment - only valid when the mode is set to \"automatic\"\r\n   */\r\n  beginIncrement() {\r\n    if (this.mode !== 'automatic')\r\n      return;\r\n    this.isInAutoProgress = true;\r\n    this.progress = 98;\r\n    setTimeout(() => {\r\n      this.isInAutoProgress = false;\r\n    }, this.automaticTimeout);\r\n  }\r\n  /**\r\n   * Custom event to set the progress to 100%.\r\n   */\r\n  progressCompleteEvent() {\r\n    if (this.isInAutoProgress)\r\n      this.isInAutoProgress = false;\r\n    this.progress = 100;\r\n  }\r\n  /**\r\n   * Custom event to set the progress to 0%.\r\n   */\r\n  progressResetEvent() {\r\n    if (this.isInAutoProgress)\r\n      this.isInAutoProgress = false;\r\n    this.progress = 0;\r\n  }\r\n  // Watchers\r\n  watchProgress() {\r\n    if (this.progress >= 100) {\r\n      this.progressComplete.emit();\r\n    }\r\n  }\r\n  render() {\r\n    return (h(Host, null, h(\"div\", { class: `bh-progress-bar bh-progress-bar-size--${this.size}` }, h(\"div\", { class: `bh-progress-bar--indicator motion--normal ${this.isInAutoProgress ? 'in-progress' : ''}`, style: { width: `${this.progress >= 100 ? 100 : this.progress}%`, transitionDuration: `${this.isInAutoProgress ? `${this.automaticTimeout}ms` : ''}` } }))));\r\n  }\r\n  static get watchers() { return {\r\n    \"progress\": [\"watchProgress\"]\r\n  }; }\r\n};\r\nBhProgressBar.style = bhProgressBarCss;\n\nexport { BhProgressBar as bh_progress_bar };\n"],"sourceRoot":""}