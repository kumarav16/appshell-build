{"version":3,"sources":["../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/iron-a11y-announcer-f1611fe3.js","../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/field-button-05bb7ace.js"],"names":["$_documentContainer","document","createElement","innerHTML","head","appendChild","content","$_documentContainer$1","$_documentContainer$2","registerStyles","css","moduleId","include","HOST_PROPS","default","accessible","PROP_TYPE","DEFAULT","ACCESSIBLE","TextFieldElement","html","pattern","type","String","title","ElementMixin","TextFieldMixin","subclass","this","shadowRoot","slotted","querySelector","_slottedTagName","focusElement","_createMethodObserver","e","preventInvalidInput","input","inputElement","value","length","checkValidity","setAttribute","_inputDebouncer","Debouncer","debounce","timeOut","after","removeAttribute","__fromClearButton","__userInput","target","_valueClearing","changeEvent","CustomEvent","detail","sourceEvent","bubbles","cancelable","dispatchEvent","newVal","oldVal","undefined","invalid","validate","label","_setOrToggleAttribute","helperText","errorMessage","slottedNodes","assignedNodes","flatten","_hasSlottedHelper","filter","node","nodeType","_slottedInput","_validateSlottedValue","_addInputListeners","_removeInputListeners","Object","keys","map","key","forEach","_propagateHostAttributes","attr","attributesValues","console","warn","attributeNames","index","name","required","minlength","maxlength","__forceCheckValidity","addEventListener","_boundOnInput","_boundOnChange","_boundOnBlur","_boundOnFocus","_boundOnPaste","_boundOnDrop","_boundOnBeforeInput","removeEventListener","_createConstraintsObserver","_onInput","bind","_onChange","_onBlur","_onFocus","_onPaste","_onDrop","_onBeforeInput","defaultInput","_onSlotChange","_onHelperSlotChange","$","clearButton","_onClearButtonClick","_onKeyDown","uniqueId","_uniqueId","_errorId","constructor","is","_labelId","_helperTextId","_inputId","__observeOffsetHeight","autoselect","select","setTimeout","setSelectionRange","preventDefault","focus","clear","inputEvent","Event","composed","keyCode","clearButtonVisible","dispatchChange","_enabledCharPattern","__shouldAcceptKey","event","metaKey","ctrlKey","__enabledCharRegExp","test","pastedText","clipboardData","window","getData","__enabledTextRegExp","draggedText","dataTransfer","data","RegExp","errorId","helperTextId","hasSlottedHelper","ids","push","join","toString","sizePropertyName","previousSizePropertyName","__observeOffsetHeightDebouncer","animationFrame","_dispatchIronResizeEventIfNeeded","offsetHeight","__dataValue","autocomplete","autocorrect","autocapitalize","Boolean","reflectToAttribute","observer","i18n","Number","placeholder","readonly","notify","ControlStateMixin","ThemableMixin","PolymerElement","customElements","define","p","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","FocusablesHelper","result","_collectTabbableNodes","_sortByTabIndex","element","call","isFocusable","_isVisible","tabIndex","getAttribute","Node","ELEMENT_NODE","children","_normalizedTabIndex","needsSort","localName","i","style","visibility","display","getComputedStyle","tabbables","len","pivot","Math","ceil","left","slice","right","_mergeSortByTabIndex","_hasLowerTabOrder","shift","concat","a","b","ati","max","bti","overlayContentCounter","overlayContentCache","processOverlayStyles","cssText","styledTemplate","textContent","ShadyCSS","prepareTemplate","klass","attachShadow","mode","importNode","styleElement","HTMLElement","OverlayElement","_boundMouseDownListener","_mouseDownListener","_boundMouseUpListener","_mouseUpListener","_boundOutsideClickListener","_outsideClickListener","_boundKeydownListener","_keydownListener","_observer","FlattenedNodesObserver","info","_setTemplateFromNodes","addedNodes","_boundIronOverlayCanceledListener","_ironOverlayCanceled","navigator","userAgent","_boundIosResizeListener","_detectIosNavbar","flush","backdrop","opened","innerHeight","landscape","innerWidth","clientHeight","documentElement","setProperty","nodes","template","evt","defaultPrevented","_mouseDownInside","composedPath","indexOf","overlay","_mouseUpInside","_last","close","focusTrap","_cycleTab","shiftKey","Array","from","wasOpened","_instance","_ensureTemplatized","__restoreFocusNode","_getActiveElement","_animatedOpening","afterNextRender","contains","_activeElement","activeElement","modeless","_addGlobalListeners","_animatedClosing","_removeGlobalListeners","hidden","hasAttribute","_flushAnimation","getPropertyValue","callback","handler","listener","parentNode","body","_attachOverlay","_enterModalState","finishOpening","_shouldAnimate","_enqueueAnimation","_placeholder","createComment","insertBefore","bringToFront","_exitModalState","restoreFocusOnClose","_deepContains","finishClosing","_detachOverlay","removeProperty","removeChild","__attachedInstances","pop","pointerEvents","_previousDocumentPointerEvents","el","instances","_contentNodes","disconnect","_originalContentPart","replaceChild","connect","instanceProps","_removeOldContent","_Templatizer","templatize","forwardHostProp","prop","root","childNodes","templateRoot","_templateRoot","getRootNode","isShady","nativeShadow","scopeCssText","querySelectorAll","reduce","styleInfo","ScopingShim","_styleInfoForNode","host","_getStyleRules","parsedCssText","replace","contentPart","createOverlayContent","id","className","unshift","oldTemplate","renderer","oldRenderer","owner","model","_removeNewRendererOrTemplate","_oldTemplate","_oldRenderer","Error","ownerOrModelChanged","_oldOwner","_oldModel","templateOrInstancePropsChanged","_oldInstanceProps","rendererChanged","openedChanged","_oldOpened","_stampOverlayTemplate","firstChild","render","elements","_getFocusableElements","_isFocused","increment","focusableElements","_focusedIndex","getTabbableNodes","active","n","doc","ownerDocument","zIndex","frontmost","o","__zIndex","parseFloat","Function","withBackdrop","sort","DirMixin","IronA11yAnnouncer","Polymer","_template","properties","timeout","_text","created","instance","_onIronAnnounce","announce","text","async","requestAvailability"],"mappings":"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","file":"static/js/59.606525e7.chunk.js","sourcesContent":["import { r as registerStyles, c as css, D as Debouncer, t as timeOut, e as animationFrame, E as ElementMixin, h as html, C as ControlStateMixin, T as ThemableMixin, P as PolymerElement, l as DirMixin, F as FlattenedNodesObserver, j as afterNextRender, k as templatize, p as Polymer } from './iron-resizable-behavior-b5089143.js';\nimport './field-button-05bb7ace.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-overlay\">\n  <template>\n    <style>\n      :host {\n        top: var(--lumo-space-m);\n        right: var(--lumo-space-m);\n        bottom: var(--lumo-space-m);\n        left: var(--lumo-space-m);\n        /* Workaround for Edge issue (only on Surface), where an overflowing vaadin-list-box inside vaadin-select-overlay makes the overlay transparent */\n        /* stylelint-disable-next-line */\n        outline: 0px solid transparent;\n      }\n\n      [part=\"overlay\"] {\n        background-color: var(--lumo-base-color);\n        background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n        border-radius: var(--lumo-border-radius-m);\n        box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-m);\n        color: var(--lumo-body-text-color);\n        font-family: var(--lumo-font-family);\n        font-size: var(--lumo-font-size-m);\n        font-weight: 400;\n        line-height: var(--lumo-line-height-m);\n        letter-spacing: 0;\n        text-transform: none;\n        -webkit-text-size-adjust: 100%;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      [part=\"content\"] {\n        padding: var(--lumo-space-xs);\n      }\n\n      [part=\"backdrop\"] {\n        background-color: var(--lumo-shade-20pct);\n        animation: 0.2s lumo-overlay-backdrop-enter both;\n        will-change: opacity;\n      }\n\n      @keyframes lumo-overlay-backdrop-enter {\n        0% {\n          opacity: 0;\n        }\n      }\n\n      :host([closing]) [part=\"backdrop\"] {\n        animation: 0.2s lumo-overlay-backdrop-exit both;\n      }\n\n      @keyframes lumo-overlay-backdrop-exit {\n        100% {\n          opacity: 0;\n        }\n      }\n\n      @keyframes lumo-overlay-dummy-animation {\n        0% { opacity: 1; }\n        100% { opacity: 1; }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\nconst $_documentContainer$1 = document.createElement('template');\n\n$_documentContainer$1.innerHTML = `<dom-module id=\"lumo-menu-overlay-core\">\n  <template>\n    <style>\n      :host([opening]),\n      :host([closing]) {\n        animation: 0.14s lumo-overlay-dummy-animation;\n      }\n\n      [part=\"overlay\"] {\n        will-change: opacity, transform;\n      }\n\n      :host([opening]) [part=\"overlay\"] {\n        animation: 0.1s lumo-menu-overlay-enter ease-out both;\n      }\n\n      @keyframes lumo-menu-overlay-enter {\n        0% {\n          opacity: 0;\n          transform: translateY(-4px);\n        }\n      }\n\n      :host([closing]) [part=\"overlay\"] {\n        animation: 0.1s lumo-menu-overlay-exit both;\n      }\n\n      @keyframes lumo-menu-overlay-exit {\n        100% {\n          opacity: 0;\n        }\n      }\n    </style>\n  </template>\n</dom-module><dom-module id=\"lumo-menu-overlay\">\n  <template>\n    <style include=\"lumo-overlay lumo-menu-overlay-core\">\n      /* Small viewport (bottom sheet) styles */\n      /* Use direct media queries instead of the state attributes (\\`[phone]\\` and \\`[fullscreen]\\`) provided by the elements */\n      @media (max-width: 420px), (max-height: 420px) {\n        :host {\n          top: 0 !important;\n          right: 0 !important;\n          bottom: var(--vaadin-overlay-viewport-bottom, 0) !important;\n          left: 0 !important;\n          align-items: stretch !important;\n          justify-content: flex-end !important;\n        }\n\n        [part=\"overlay\"] {\n          max-height: 50vh;\n          width: 100vw;\n          border-radius: 0;\n          box-shadow: var(--lumo-box-shadow-xl);\n        }\n\n        /* The content part scrolls instead of the overlay part, because of the gradient fade-out */\n        [part=\"content\"] {\n          padding: 30px var(--lumo-space-m);\n          max-height: inherit;\n          box-sizing: border-box;\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          -webkit-mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n          mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n        }\n\n        [part=\"backdrop\"] {\n          display: block;\n        }\n\n        /* Animations */\n\n        :host([opening]) [part=\"overlay\"] {\n          animation: 0.2s lumo-mobile-menu-overlay-enter cubic-bezier(.215, .61, .355, 1) both;\n        }\n\n        :host([closing]),\n        :host([closing]) [part=\"backdrop\"] {\n          animation-delay: 0.14s;\n        }\n\n        :host([closing]) [part=\"overlay\"] {\n          animation: 0.14s 0.14s lumo-mobile-menu-overlay-exit cubic-bezier(.55, .055, .675, .19) both;\n        }\n      }\n\n      @keyframes lumo-mobile-menu-overlay-enter {\n        0% {\n          transform: translateY(150%);\n        }\n      }\n\n      @keyframes lumo-mobile-menu-overlay-exit {\n        100% {\n          transform: translateY(150%);\n        }\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer$1.content);\n\nconst $_documentContainer$2 = document.createElement('template');\n\n$_documentContainer$2.innerHTML = `<dom-module id=\"lumo-required-field\">\n  <template>\n    <style>\n      [part=\"label\"] {\n        align-self: flex-start;\n        color: var(--lumo-secondary-text-color);\n        font-weight: 500;\n        font-size: var(--lumo-font-size-s);\n        margin-left: calc(var(--lumo-border-radius-m) / 4);\n        transition: color 0.2s;\n        line-height: 1;\n        padding-bottom: 0.5em;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        position: relative;\n        max-width: 100%;\n        box-sizing: border-box;\n      }\n\n      :host([has-label])::before {\n        margin-top: calc(var(--lumo-font-size-s) * 1.5);\n      }\n\n      :host([has-label]) {\n        padding-top: var(--lumo-space-m);\n      }\n\n      :host([required]) [part=\"label\"] {\n        padding-right: 1em;\n      }\n\n      [part=\"label\"]::after {\n        content: var(--lumo-required-field-indicator, \"•\");\n        transition: opacity 0.2s;\n        opacity: 0;\n        color: var(--lumo-primary-text-color);\n        position: absolute;\n        right: 0;\n        width: 1em;\n        text-align: center;\n      }\n\n      :host([required]:not([has-value])) [part=\"label\"]::after {\n        opacity: 1;\n      }\n\n      :host([invalid]) [part=\"label\"]::after {\n        color: var(--lumo-error-text-color);\n      }\n\n      [part=\"error-message\"] {\n        margin-left: calc(var(--lumo-border-radius-m) / 4);\n        font-size: var(--lumo-font-size-xs);\n        line-height: var(--lumo-line-height-xs);\n        color: var(--lumo-error-text-color);\n        will-change: max-height;\n        transition: 0.4s max-height;\n        max-height: 5em;\n      }\n\n      /* Margin that doesn’t reserve space when there’s no error message */\n      [part=\"error-message\"]:not(:empty)::before,\n      [part=\"error-message\"]:not(:empty)::after {\n        content: \"\";\n        display: block;\n        height: 0.4em;\n      }\n\n      :host(:not([invalid])) [part=\"error-message\"] {\n        max-height: 0;\n        overflow: hidden;\n      }\n\n      /* RTL specific styles */\n\n      :host([dir=\"rtl\"]) [part=\"label\"] {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-border-radius-m) / 4);\n      }\n\n      :host([required][dir=\"rtl\"]) [part=\"label\"] {\n        padding-left: 1em;\n        padding-right: 0;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"label\"]::after {\n        right: auto;\n        left: 0;\n      }\n\n      :host([dir=\"rtl\"]) [part=\"error-message\"] {\n        margin-left: 0;\n        margin-right: calc(var(--lumo-border-radius-m) / 4);\n      }\n\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer$2.content);\n\nregisterStyles(\n  'vaadin-text-field',\n  css`\n    :host {\n      --lumo-text-field-size: var(--lumo-size-m);\n      color: var(--lumo-body-text-color);\n      font-size: var(--lumo-font-size-m);\n      font-family: var(--lumo-font-family);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      padding: var(--lumo-space-xs) 0;\n    }\n\n    :host::before {\n      height: var(--lumo-text-field-size);\n      box-sizing: border-box;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    :host([focused]:not([readonly])) [part='label'] {\n      color: var(--lumo-primary-text-color);\n    }\n\n    :host([has-helper]) [part='helper-text']::before {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    [part='helper-text'],\n    [part='helper-text'] ::slotted(*) {\n      display: block;\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-xs);\n      line-height: var(--lumo-line-height-xs);\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\n      transition: color 0.2s;\n    }\n\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea),\n    [part='input-field'] ::slotted([part='value']) {\n      cursor: inherit;\n      min-height: var(--lumo-text-field-size);\n      padding: 0 0.25em;\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\n      mask-image: var(--_lumo-text-field-overflow-mask-image);\n    }\n\n    [part='value']:focus,\n    :host([focused]) [part='input-field'] ::slotted(input),\n    :host([focused]) [part='input-field'] ::slotted(textarea) {\n      -webkit-mask-image: none;\n      mask-image: none;\n    }\n\n    [part='value']::placeholder {\n      color: inherit;\n      transition: opacity 0.175s 0.1s;\n      opacity: 0.5;\n    }\n\n    [part='input-field'] {\n      border-radius: var(--lumo-border-radius);\n      background-color: var(--lumo-contrast-10pct);\n      padding: 0 calc(0.375em + var(--lumo-border-radius) / 4 - 1px);\n      font-weight: 500;\n      line-height: 1;\n      position: relative;\n      cursor: text;\n      box-sizing: border-box;\n    }\n\n    /* Used for hover and activation effects */\n    [part='input-field']::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      border-radius: inherit;\n      pointer-events: none;\n      background-color: var(--lumo-contrast-50pct);\n      opacity: 0;\n      transition: transform 0.15s, opacity 0.2s;\n      transform-origin: 100% 0;\n    }\n\n    /* Hover */\n\n    :host(:hover:not([readonly]):not([focused])) [part='label'],\n    :host(:hover:not([readonly])) [part='helper-text'],\n    :host(:hover:not([readonly])) [part='helper-text'] ::slotted(*) {\n      color: var(--lumo-body-text-color);\n    }\n\n    :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0.1;\n    }\n\n    /* Touch device adjustment */\n    @media (pointer: coarse) {\n      :host(:hover:not([readonly]):not([focused])) [part='label'] {\n        color: var(--lumo-secondary-text-color);\n      }\n\n      :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n        opacity: 0;\n      }\n\n      :host(:active:not([readonly]):not([focused])) [part='input-field']::after {\n        opacity: 0.2;\n      }\n    }\n\n    /* Trigger when not focusing using the keyboard */\n    :host([focused]:not([focus-ring]):not([readonly])) [part='input-field']::after {\n      transform: scaleX(0);\n      transition-duration: 0.15s, 1s;\n    }\n\n    /* Focus-ring */\n\n    :host([focus-ring]) [part='input-field'] {\n      box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    /* Read-only and disabled */\n    :host([readonly]) [part='value']::placeholder,\n    :host([disabled]) [part='value']::placeholder {\n      opacity: 0;\n    }\n\n    /* Read-only */\n\n    :host([readonly]) [part='input-field'] {\n      color: var(--lumo-secondary-text-color);\n      background-color: transparent;\n      cursor: default;\n    }\n\n    :host([readonly]) [part='input-field']::after {\n      background-color: transparent;\n      opacity: 1;\n      border: 1px dashed var(--lumo-contrast-30pct);\n    }\n\n    /* Disabled style */\n\n    :host([disabled]) {\n      pointer-events: none;\n    }\n\n    :host([disabled]) [part='input-field'] {\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    :host([disabled]) [part='label'],\n    :host([disabled]) [part='helper-text'],\n    :host([disabled]) [part='value'],\n    :host([disabled]) [part='input-field'] ::slotted(*) {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    /* Invalid style */\n\n    :host([invalid]) [part='input-field'] {\n      background-color: var(--lumo-error-color-10pct);\n    }\n\n    :host([invalid]) [part='input-field']::after {\n      background-color: var(--lumo-error-color-50pct);\n    }\n\n    :host([invalid][focus-ring]) [part='input-field'] {\n      box-shadow: 0 0 0 2px var(--lumo-error-color-50pct);\n    }\n\n    :host([input-prevented]) [part='input-field'] {\n      color: var(--lumo-error-text-color);\n    }\n\n    /* Small theme */\n\n    :host([theme~='small']) {\n      font-size: var(--lumo-font-size-s);\n      --lumo-text-field-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='small'][has-label]) [part='label'] {\n      font-size: var(--lumo-font-size-xs);\n    }\n\n    :host([theme~='small'][has-label]) [part='error-message'] {\n      font-size: var(--lumo-font-size-xxs);\n    }\n\n    /* Text align */\n\n    :host([theme~='align-left']) [part='value'] {\n      text-align: left;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center']) [part='value'] {\n      text-align: center;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right']) [part='value'] {\n      text-align: right;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n    /* helper-text position */\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n      display: none;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n      content: '';\n      display: block;\n      height: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='label'] {\n      order: 0;\n      padding-bottom: 0.4em;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n      order: 1;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='input-field'] {\n      order: 2;\n    }\n\n    :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n      order: 3;\n    }\n\n    /* Slotted content */\n\n    [part='input-field'] ::slotted(:not([part]):not(iron-icon):not(input):not(textarea)) {\n      color: var(--lumo-secondary-text-color);\n      font-weight: 400;\n    }\n\n    /* Slotted icons */\n\n    [part='input-field'] ::slotted(iron-icon) {\n      color: var(--lumo-contrast-60pct);\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    [part='input-field'] ::slotted(iron-icon[icon^='vaadin:']) {\n      padding: 0.25em;\n      box-sizing: border-box !important;\n    }\n\n    [part='clear-button']::before {\n      content: var(--lumo-icons-cross);\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='input-field']::after {\n      transform-origin: 0% 0;\n    }\n\n    :host([dir='rtl']) [part='value'],\n    :host([dir='rtl']) [part='input-field'] ::slotted(input),\n    :host([dir='rtl']) [part='input-field'] ::slotted(textarea) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent, #000 1.25em);\n    }\n\n    :host([dir='rtl']) [part='value']:focus,\n    :host([focused][dir='rtl']) [part='input-field'] ::slotted(input),\n    :host([focused][dir='rtl']) [part='input-field'] ::slotted(textarea) {\n      -webkit-mask-image: none;\n      mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      :host([dir='rtl']) [part='value'],\n      :host([dir='rtl']) [part='input-field'] ::slotted(input),\n      :host([dir='rtl']) [part='input-field'] ::slotted(textarea),\n      :host([dir='rtl']) [part='input-field'] ::slotted([part='value']) {\n        mask-image: var(--_lumo-text-field-overflow-mask-image);\n      }\n    }\n\n    :host([theme~='align-left'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right'][dir='rtl']) [part='value'] {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right'][dir='rtl']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left'][dir='rtl']) [part='value'] {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n  `,\n  { moduleId: 'lumo-text-field', include: ['lumo-required-field', 'lumo-field-button'] }\n);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nregisterStyles(\n  '',\n  css`\n    :host {\n      display: inline-flex;\n      outline: none;\n    }\n\n    :host::before {\n      content: '\\\\2003';\n      width: 0;\n      display: inline-block;\n      /* Size and position this element on the same vertical position as the input-field element\n          to make vertical align for the host element work as expected */\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    .vaadin-text-field-container,\n    .vaadin-text-area-container {\n      display: flex;\n      flex-direction: column;\n      min-width: 100%;\n      max-width: 100%;\n      width: var(--vaadin-text-field-default-width, 12em);\n    }\n\n    [part='label']:empty {\n      display: none;\n    }\n\n    [part='input-field'] {\n      display: flex;\n      align-items: center;\n      flex: auto;\n    }\n\n    .vaadin-text-field-container [part='input-field'] {\n      flex-grow: 0;\n    }\n\n    /* Reset the native input styles */\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea) {\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      outline: none;\n      margin: 0;\n      padding: 0;\n      border: 0;\n      border-radius: 0;\n      min-width: 0;\n      font: inherit;\n      font-size: 1em;\n      line-height: normal;\n      color: inherit;\n      background-color: transparent;\n      /* Disable default invalid style in Firefox */\n      box-shadow: none;\n    }\n\n    [part='input-field'] ::slotted(*) {\n      flex: none;\n    }\n\n    [part='value'],\n    [part='input-field'] ::slotted(input),\n    [part='input-field'] ::slotted(textarea),\n    [part='input-field'] ::slotted([part='value']) {\n      flex: auto;\n      white-space: nowrap;\n      overflow: hidden;\n      width: 100%;\n      height: 100%;\n    }\n\n    [part='input-field'] ::slotted(textarea) {\n      resize: none;\n    }\n\n    [part='clear-button'] {\n      display: none;\n      cursor: default;\n    }\n\n    [part='clear-button']::before {\n      content: '✕';\n    }\n\n    :host([clear-button-visible][has-value]:not([disabled]):not([readonly])) [part='clear-button'] {\n      display: block;\n    }\n  `,\n  { moduleId: 'vaadin-text-field-shared-styles' }\n);\n\nconst HOST_PROPS = {\n  default: [\n    'autofocus',\n    'pattern',\n    'autocapitalize',\n    'autocorrect',\n    'maxlength',\n    'minlength',\n    'name',\n    'placeholder',\n    'autocomplete',\n    'title',\n    'disabled',\n    'readonly',\n    'required'\n  ],\n  accessible: ['invalid']\n};\n\nconst PROP_TYPE = {\n  DEFAULT: 'default',\n  ACCESSIBLE: 'accessible'\n};\n\n/**\n * @polymerMixin\n */\nconst TextFieldMixin = (subclass) =>\n  class VaadinTextFieldMixin extends subclass {\n    static get properties() {\n      return {\n        /**\n         * Whether the value of the control can be automatically completed by the browser.\n         * List of available options at:\n         * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n         */\n        autocomplete: {\n          type: String\n        },\n\n        /**\n         * This is a property supported by Safari that is used to control whether\n         * autocorrection should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * on: Enable autocorrection.\n         * off: Disable autocorrection.\n         * @type {!TextFieldAutoCorrect | undefined}\n         */\n        autocorrect: {\n          type: String\n        },\n\n        /**\n         * This is a property supported by Safari and Chrome that is used to control whether\n         * autocapitalization should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * characters: Characters capitalization.\n         * words: Words capitalization.\n         * sentences: Sentences capitalization.\n         * none: No capitalization.\n         * @type {!TextFieldAutoCapitalize | undefined}\n         */\n        autocapitalize: {\n          type: String\n        },\n\n        /**\n         * Specify that the value should be automatically selected when the field gains focus.\n         * @type {boolean}\n         */\n        autoselect: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * Set to true to display the clear icon which clears the input.\n         * @attr {boolean} clear-button-visible\n         * @type {boolean}\n         */\n        clearButtonVisible: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true\n        },\n\n        /**\n         * Error to show when the input value is invalid.\n         * @attr {string} error-message\n         * @type {string}\n         */\n        errorMessage: {\n          type: String,\n          value: '',\n          observer: '_errorMessageChanged'\n        },\n\n        /**\n         * Object with translated strings used for localization. Has\n         * the following structure and default values:\n         *\n         * ```\n         * {\n         *   // Translation of the clear icon button accessible label\n         *   clear: 'Clear'\n         * }\n         * ```\n         * @type {{clear: string}}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              clear: 'Clear'\n            };\n          }\n        },\n\n        /**\n         * String used for the label element.\n         * @type {string}\n         */\n        label: {\n          type: String,\n          value: '',\n          observer: '_labelChanged'\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         * @type {string | null}\n         */\n        helperText: {\n          type: String,\n          value: '',\n          observer: '_helperTextChanged'\n        },\n\n        /**\n         * Maximum number of characters (in Unicode code points) that the user can enter.\n         */\n        maxlength: {\n          type: Number\n        },\n\n        /**\n         * Minimum number of characters (in Unicode code points) that the user can enter.\n         */\n        minlength: {\n          type: Number\n        },\n\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        name: {\n          type: String\n        },\n\n        /**\n         * A hint to the user of what can be entered in the control.\n         */\n        placeholder: {\n          type: String\n        },\n\n        /**\n         * This attribute indicates that the user cannot modify the value of the control.\n         */\n        readonly: {\n          type: Boolean,\n          reflectToAttribute: true\n        },\n\n        /**\n         * Specifies that the user must fill in a value.\n         */\n        required: {\n          type: Boolean,\n          reflectToAttribute: true\n        },\n\n        /**\n         * The initial value of the control.\n         * It can be used for two-way data binding.\n         * @type {string}\n         */\n        value: {\n          type: String,\n          value: '',\n          observer: '_valueChanged',\n          notify: true\n        },\n\n        /**\n         * This property is set to true when the control value is invalid.\n         * @type {boolean}\n         */\n        invalid: {\n          type: Boolean,\n          reflectToAttribute: true,\n          notify: true,\n          value: false\n        },\n\n        /**\n         * When set to true, user is prevented from typing a value that\n         * conflicts with the given `pattern`.\n         * @attr {boolean} prevent-invalid-input\n         */\n        preventInvalidInput: {\n          type: Boolean\n        },\n\n        /**\n         * A pattern matched against individual characters the user inputs.\n         * When set, the field will prevent:\n         * - `keyDown` events if the entered key doesn't match `/^_enabledCharPattern$/`\n         * - `paste` events if the pasted text doesn't match `/^_enabledCharPattern*$/`\n         * - `drop` events if the dropped text doesn't match `/^_enabledCharPattern*$/`\n         *\n         * For example, to enable entering only numbers and minus signs,\n         * `_enabledCharPattern = \"[\\\\d-]\"`\n         * @protected\n         */\n        _enabledCharPattern: String,\n\n        /** @private */\n        _labelId: String,\n\n        /** @private */\n        _helperTextId: String,\n\n        /** @private */\n        _errorId: String,\n\n        /** @private */\n        _inputId: String,\n\n        /** @private */\n        _hasSlottedHelper: Boolean\n      };\n    }\n\n    static get observers() {\n      return [\n        '_hostPropsChanged(' + HOST_PROPS.default.join(', ') + ')',\n        '_hostAccessiblePropsChanged(' + HOST_PROPS.accessible.join(', ') + ')',\n        '_getActiveErrorId(invalid, errorMessage, _errorId, helperText, _helperTextId, _hasSlottedHelper)',\n        '_getActiveLabelId(label, _labelId, _inputId)',\n        '__observeOffsetHeight(errorMessage, invalid, label, helperText)',\n        '__enabledCharPatternChanged(_enabledCharPattern)'\n      ];\n    }\n\n    /**\n     * @return {HTMLElement | undefined}\n     * @protected\n     */\n    get focusElement() {\n      if (!this.shadowRoot) {\n        return undefined;\n      }\n      const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n      if (slotted) {\n        return slotted;\n      }\n      return this.shadowRoot.querySelector('[part=\"value\"]');\n    }\n\n    /**\n     * @return {HTMLElement | undefined}}\n     * @protected\n     */\n    get inputElement() {\n      return this.focusElement;\n    }\n\n    /**\n     * @return {string}\n     * @protected\n     */\n    get _slottedTagName() {\n      return 'input';\n    }\n\n    /** @protected */\n    _createConstraintsObserver() {\n      // This complex observer needs to be added dynamically here (instead of defining it above in the `get observers()`)\n      // so that it runs after complex observers of inheriting classes. Otherwise e.g. `_stepOrMinChanged()` observer of\n      // vaadin-number-field would run after this and the `min` and `step` properties would not yet be propagated to\n      // the `inputElement` when this runs.\n      this._createMethodObserver('_constraintsChanged(required, minlength, maxlength, pattern)');\n    }\n\n    /** @private */\n    _onInput(e) {\n      if (this.preventInvalidInput) {\n        const input = this.inputElement;\n        if (input.value.length > 0 && !this.checkValidity()) {\n          input.value = this.value || '';\n          // add input-prevented attribute for 200ms\n          this.setAttribute('input-prevented', '');\n          this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n          return;\n        }\n      }\n\n      if (!e.__fromClearButton) {\n        this.__userInput = true;\n      }\n\n      this.value = e.target.value;\n      this.__userInput = false;\n    }\n\n    /**\n     * @param {!Event} e\n     * @protected\n     */\n    _onChange(e) {\n      if (this._valueClearing) {\n        return;\n      }\n\n      // In the Shadow DOM, the `change` event is not leaked into the\n      // ancestor tree, so we must do this manually.\n      const changeEvent = new CustomEvent('change', {\n        detail: {\n          sourceEvent: e\n        },\n        bubbles: e.bubbles,\n        cancelable: e.cancelable\n      });\n      this.dispatchEvent(changeEvent);\n    }\n\n    /**\n     * @param {unknown} newVal\n     * @param {unknown} oldVal\n     * @protected\n     */\n    _valueChanged(newVal, oldVal) {\n      // setting initial value to empty string, skip validation\n      if (newVal === '' && oldVal === undefined) {\n        return;\n      }\n\n      if (newVal !== '' && newVal != null) {\n        this.setAttribute('has-value', '');\n      } else {\n        this.removeAttribute('has-value');\n      }\n\n      if (this.__userInput) {\n        return;\n      } else if (newVal !== undefined) {\n        this.inputElement.value = newVal;\n      } else {\n        this.value = this.inputElement.value = '';\n      }\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /** @private */\n    _labelChanged(label) {\n      this._setOrToggleAttribute('has-label', !!label, this);\n    }\n\n    /** @private */\n    _helperTextChanged(helperText) {\n      this._setOrToggleAttribute('has-helper', !!helperText, this);\n    }\n\n    /** @private */\n    _errorMessageChanged(errorMessage) {\n      this._setOrToggleAttribute('has-error-message', !!errorMessage, this);\n    }\n\n    /** @private */\n    _onHelperSlotChange() {\n      const slottedNodes = this.shadowRoot.querySelector(`[name=\"helper\"]`).assignedNodes({ flatten: true });\n      // Only has slotted helper if not a text node\n      // Text nodes are added by the helperText prop and not the helper slot\n      // The filter is added due to shady DOM triggering this callback on helperText prop change\n      this._hasSlottedHelper = slottedNodes.filter((node) => node.nodeType !== 3).length;\n\n      if (this._hasSlottedHelper) {\n        this.setAttribute('has-helper', 'slotted');\n      } else if (this.helperText === '' || this.helperText === null) {\n        this.removeAttribute('has-helper');\n      }\n    }\n\n    /** @private */\n    _onSlotChange() {\n      const slotted = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n\n      if (this.value) {\n        this.inputElement.value = this.value;\n        this.validate();\n      }\n\n      if (slotted && !this._slottedInput) {\n        this._validateSlottedValue(slotted);\n        this._addInputListeners(slotted);\n        this._slottedInput = slotted;\n      } else if (!slotted && this._slottedInput) {\n        this._removeInputListeners(this._slottedInput);\n        this._slottedInput = undefined;\n      }\n\n      Object.keys(PROP_TYPE)\n        .map((key) => PROP_TYPE[key])\n        .forEach((type) =>\n          this._propagateHostAttributes(\n            HOST_PROPS[type].map((attr) => this[attr]),\n            type\n          )\n        );\n    }\n\n    /** @private */\n    _hostPropsChanged(...attributesValues) {\n      this._propagateHostAttributes(attributesValues, PROP_TYPE.DEFAULT);\n    }\n\n    /** @private */\n    _hostAccessiblePropsChanged(...attributesValues) {\n      this._propagateHostAttributes(attributesValues, PROP_TYPE.ACCESSIBLE);\n    }\n\n    /** @private */\n    _validateSlottedValue(slotted) {\n      if (slotted.value !== this.value) {\n        console.warn('Please define value on the vaadin-text-field component!');\n        slotted.value = '';\n      }\n    }\n\n    /** @private */\n    _propagateHostAttributes(attributesValues, type) {\n      const input = this.inputElement;\n      const attributeNames = HOST_PROPS[type];\n\n      if (type === PROP_TYPE.ACCESSIBLE) {\n        attributeNames.forEach((attr, index) => {\n          this._setOrToggleAttribute(attr, attributesValues[index], input);\n          this._setOrToggleAttribute(`aria-${attr}`, attributesValues[index] ? 'true' : false, input);\n        });\n      } else {\n        attributeNames.forEach((attr, index) => {\n          this._setOrToggleAttribute(attr, attributesValues[index], input);\n        });\n      }\n    }\n\n    /** @private */\n    _setOrToggleAttribute(name, value, node) {\n      if (!name || !node) {\n        return;\n      }\n\n      if (value) {\n        node.setAttribute(name, typeof value === 'boolean' ? '' : value);\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n\n    /**\n     * @param {boolean | undefined} required\n     * @param {number | undefined} minlength\n     * @param {number | undefined} maxlength\n     * @param {string | undefined} maxlength\n     * @protected\n     */\n    _constraintsChanged(required, minlength, maxlength, pattern) {\n      if (!this.invalid) {\n        return;\n      }\n\n      if (!required && !minlength && !maxlength && !pattern) {\n        this.invalid = false;\n      } else {\n        this.validate();\n      }\n    }\n\n    /**\n     * Returns true if the current input value satisfies all constraints (if any)\n     * @return {boolean}\n     */\n    checkValidity() {\n      // Note (Yuriy): `__forceCheckValidity` is used in containing components (i.e. `vaadin-date-picker`) in order\n      // to force the checkValidity instead of returning the previous invalid state.\n      if (this.required || this.pattern || this.maxlength || this.minlength || this.__forceCheckValidity) {\n        return this.inputElement.checkValidity();\n      } else {\n        return !this.invalid;\n      }\n    }\n\n    /** @private */\n    _addInputListeners(node) {\n      node.addEventListener('input', this._boundOnInput);\n      node.addEventListener('change', this._boundOnChange);\n      node.addEventListener('blur', this._boundOnBlur);\n      node.addEventListener('focus', this._boundOnFocus);\n      node.addEventListener('paste', this._boundOnPaste);\n      node.addEventListener('drop', this._boundOnDrop);\n      node.addEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /** @private */\n    _removeInputListeners(node) {\n      node.removeEventListener('input', this._boundOnInput);\n      node.removeEventListener('change', this._boundOnChange);\n      node.removeEventListener('blur', this._boundOnBlur);\n      node.removeEventListener('focus', this._boundOnFocus);\n      node.removeEventListener('paste', this._boundOnPaste);\n      node.removeEventListener('drop', this._boundOnDrop);\n      node.removeEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._createConstraintsObserver();\n\n      this._boundOnInput = this._onInput.bind(this);\n      this._boundOnChange = this._onChange.bind(this);\n      this._boundOnBlur = this._onBlur.bind(this);\n      this._boundOnFocus = this._onFocus.bind(this);\n      this._boundOnPaste = this._onPaste.bind(this);\n      this._boundOnDrop = this._onDrop.bind(this);\n      this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n\n      const defaultInput = this.shadowRoot.querySelector('[part=\"value\"]');\n      this._slottedInput = this.querySelector(`${this._slottedTagName}[slot=\"${this._slottedTagName}\"]`);\n      this._addInputListeners(defaultInput);\n      if (this._slottedInput) {\n        this._addInputListeners(this._slottedInput);\n      }\n\n      this.shadowRoot\n        .querySelector('[name=\"input\"], [name=\"textarea\"]')\n        .addEventListener('slotchange', this._onSlotChange.bind(this));\n\n      this._onHelperSlotChange();\n      this.shadowRoot\n        .querySelector('[name=\"helper\"]')\n        .addEventListener('slotchange', this._onHelperSlotChange.bind(this));\n\n      this.$.clearButton.addEventListener('mousedown', () => (this._valueClearing = true));\n      this.$.clearButton.addEventListener('mouseleave', () => (this._valueClearing = false));\n      this.$.clearButton.addEventListener('click', this._onClearButtonClick.bind(this));\n      this.addEventListener('keydown', this._onKeyDown.bind(this));\n\n      var uniqueId = (TextFieldMixin._uniqueId = 1 + TextFieldMixin._uniqueId || 0);\n      this._errorId = `${this.constructor.is}-error-${uniqueId}`;\n      this._labelId = `${this.constructor.is}-label-${uniqueId}`;\n      this._helperTextId = `${this.constructor.is}-helper-${uniqueId}`;\n      this._inputId = `${this.constructor.is}-input-${uniqueId}`;\n\n      // Lumo theme defines a max-height transition for the \"error-message\"\n      // part on invalid state change.\n      this.shadowRoot.querySelector('[part=\"error-message\"]').addEventListener('transitionend', () => {\n        this.__observeOffsetHeight();\n      });\n    }\n\n    /**\n     * Returns true if `value` is valid.\n     *\n     * @return {boolean} True if the value is valid.\n     */\n    validate() {\n      return !(this.invalid = !this.checkValidity());\n    }\n\n    clear() {\n      this.value = '';\n    }\n\n    /** @private */\n    _onBlur() {\n      this.validate();\n    }\n\n    /** @private */\n    _onFocus() {\n      if (this.autoselect) {\n        this.inputElement.select();\n        // iOS 9 workaround: https://stackoverflow.com/a/7436574\n        setTimeout(() => {\n          try {\n            this.inputElement.setSelectionRange(0, 9999);\n          } catch (e) {\n            // The workaround may cause errors on different input types.\n            // Needs to be suppressed. See https://github.com/vaadin/flow/issues/6070\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _onClearButtonClick(e) {\n      e.preventDefault();\n      // NOTE(yuriy): This line won't affect focus on the host. Cannot be properly tested.\n      this.inputElement.focus();\n      this.clear();\n      this._valueClearing = false;\n      const inputEvent = new Event('input', { bubbles: true, composed: true });\n      inputEvent.__fromClearButton = true;\n      const changeEvent = new Event('change', { bubbles: !this._slottedInput });\n      changeEvent.__fromClearButton = true;\n      this.inputElement.dispatchEvent(inputEvent);\n      this.inputElement.dispatchEvent(changeEvent);\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onKeyDown(e) {\n      if (e.keyCode === 27 && this.clearButtonVisible) {\n        const dispatchChange = !!this.value;\n        this.clear();\n        dispatchChange && this.inputElement.dispatchEvent(new Event('change', { bubbles: !this._slottedInput }));\n      }\n\n      if (this._enabledCharPattern && !this.__shouldAcceptKey(e)) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    __shouldAcceptKey(event) {\n      return (\n        event.metaKey ||\n        event.ctrlKey ||\n        !event.key || // allow typing anything if event.key is not supported\n        event.key.length !== 1 || // allow \"Backspace\", \"ArrowLeft\" etc.\n        this.__enabledCharRegExp.test(event.key)\n      );\n    }\n\n    /** @private */\n    _onPaste(e) {\n      if (this._enabledCharPattern) {\n        const pastedText = (e.clipboardData || window.clipboardData).getData('text');\n        if (!this.__enabledTextRegExp.test(pastedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this._enabledCharPattern) {\n        const draggedText = e.dataTransfer.getData('text');\n        if (!this.__enabledTextRegExp.test(draggedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onBeforeInput(e) {\n      // The `beforeinput` event covers all the cases for `_enabledCharPattern`: keyboard, pasting and dropping,\n      // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n      // because it seems to be the only way to detect and prevent specific keys on mobile devices. See issue #429.\n      if (this._enabledCharPattern && e.data && !this.__enabledTextRegExp.test(e.data)) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    __enabledCharPatternChanged(_enabledCharPattern) {\n      this.__enabledCharRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '$');\n      this.__enabledTextRegExp = _enabledCharPattern && new RegExp('^' + _enabledCharPattern + '*$');\n    }\n\n    /** @private */\n    _getActiveErrorId(invalid, errorMessage, errorId, helperText, helperTextId, hasSlottedHelper) {\n      const ids = [];\n      if (helperText || hasSlottedHelper) {\n        ids.push(helperTextId);\n      }\n      if (errorMessage && invalid) {\n        ids.push(errorId);\n      }\n      this._setOrToggleAttribute('aria-describedby', ids.join(' '), this.focusElement);\n    }\n\n    /** @private */\n    _getActiveLabelId(label, _labelId, _inputId) {\n      let ids = _inputId;\n      if (label) {\n        ids = `${_labelId} ${_inputId}`;\n      }\n      this.focusElement.setAttribute('aria-labelledby', ids);\n    }\n\n    /** @private */\n    _getErrorMessageAriaHidden(invalid, errorMessage, errorId) {\n      return (!(errorMessage && invalid ? errorId : undefined)).toString();\n    }\n\n    /** @private */\n    _dispatchIronResizeEventIfNeeded(sizePropertyName, value) {\n      const previousSizePropertyName = '__previous' + sizePropertyName;\n      if (this[previousSizePropertyName] !== undefined && this[previousSizePropertyName] !== value) {\n        this.dispatchEvent(new CustomEvent('iron-resize', { bubbles: true, composed: true }));\n      }\n\n      this[previousSizePropertyName] = value;\n    }\n\n    /** @private */\n    __observeOffsetHeight() {\n      this.__observeOffsetHeightDebouncer = Debouncer.debounce(\n        this.__observeOffsetHeightDebouncer,\n        animationFrame,\n        () => {\n          this._dispatchIronResizeEventIfNeeded('Height', this.offsetHeight);\n        }\n      );\n    }\n\n    // Workaround for https://github.com/Polymer/polymer/issues/5259\n    get __data() {\n      return this.__dataValue || {};\n    }\n\n    set __data(value) {\n      this.__dataValue = value;\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the value is changed by the user: on every typing keystroke,\n     * and the value is cleared using the clear button.\n     *\n     * @event input\n     */\n\n    /**\n     * Fired when the size of the element changes.\n     *\n     * @event iron-resize\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * `<vaadin-text-field>` is a Web Component for text field control in forms.\n *\n * ```html\n * <vaadin-text-field label=\"First Name\">\n * </vaadin-text-field>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-field>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-field label=\"Email address\">\n *   <div slot=\"prefix\">Sent to:</div>\n *   <div slot=\"suffix\">@vaadin.com</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property | Description | Default\n * ----------------|-------------|-------------\n * `--vaadin-text-field-default-width` | Set the default width of the input field | `12em`\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label element\n * `input-field` | The element that wraps prefix, value and suffix\n * `value` | The text value element inside the `input-field` element\n * `error-message` | The error message element\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `disabled` | Set to a disabled text field | :host\n * `has-value` | Set when the element has a value | :host\n * `has-label` | Set when the element has a label | :host\n * `has-helper` | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message | :host\n * `invalid` | Set when the element is invalid | :host\n * `input-prevented` | Temporarily set when invalid input is prevented | :host\n * `focused` | Set when the element is focused | :host\n * `focus-ring` | Set when the element is keyboard focused | :host\n * `readonly` | Set to a readonly text field | :host\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes TextFieldMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass TextFieldElement extends ElementMixin(TextFieldMixin(ControlStateMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style include=\"vaadin-text-field-shared-styles\"></style>\n\n      <div class=\"vaadin-text-field-container\">\n        <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n        <div part=\"input-field\" id=\"[[_inputId]]\">\n          <slot name=\"prefix\"></slot>\n\n          <slot name=\"input\">\n            <input part=\"value\" />\n          </slot>\n\n          <div part=\"clear-button\" id=\"clearButton\" role=\"button\" aria-label$=\"[[i18n.clear]]\"></div>\n          <slot name=\"suffix\"></slot>\n        </div>\n\n        <div part=\"helper-text\" on-click=\"focus\" id=\"[[_helperTextId]]\">\n          <slot name=\"helper\">[[helperText]]</slot>\n        </div>\n\n        <div\n          part=\"error-message\"\n          id=\"[[_errorId]]\"\n          aria-live=\"assertive\"\n          aria-hidden$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\"\n          >[[errorMessage]]</div\n        >\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-text-field';\n  }\n\n  static get version() {\n    return '3.0.2';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * A regular expression that the value is checked against.\n       * The pattern must match the entire value, not just some subset.\n       */\n      pattern: {\n        type: String\n      },\n\n      /**\n       * The text usually displayed in a tooltip popup when the mouse is over the field.\n       * @type {string}\n       */\n      title: {\n        type: String\n      }\n    };\n  }\n}\n\ncustomElements.define(TextFieldElement.is, TextFieldElement);\n\nconst p = Element.prototype;\nconst matches = p.matches || p.matchesSelector || p.mozMatchesSelector ||\n  p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n\n/**\n * `Polymer.IronFocusablesHelper` relies on some Polymer-specific legacy API,\n * especially the `root` property which does not exist for native shadow DOM.\n * That's why we have this helper here.\n * See https://github.com/PolymerElements/iron-overlay-behavior/issues/282\n */\nclass FocusablesHelper {\n\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the children,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  static getTabbableNodes(node) {\n    const result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    const needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return this._sortByTabIndex(result);\n    }\n    return result;\n  }\n\n  /**\n   * Returns if a element is focusable.\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   */\n  static isFocusable(element) {\n    // From http://stackoverflow.com/a/1600194/4228703:\n    // There isn't a definite list, it's up to the browser. The only\n    // standard we have is DOM Level 2 HTML\n    // https://www.w3.org/TR/DOM-Level-2-HTML/html.html, according to which the\n    // only elements that have a focus() method are HTMLInputElement,\n    // HTMLSelectElement, HTMLTextAreaElement and HTMLAnchorElement. This\n    // notably omits HTMLButtonElement and HTMLAreaElement. Referring to these\n    // tests with tabbables in different browsers\n    // http://allyjs.io/data-tables/focusable.html\n\n    // Elements that cannot be focused if they have [disabled] attribute.\n    if (matches.call(element, 'input, select, textarea, button, object')) {\n      return matches.call(element, ':not([disabled])');\n    }\n    // Elements that can be focused even if they have [disabled] attribute.\n    return matches.call(element, 'a[href], area[href], iframe, [tabindex], [contentEditable]');\n  }\n\n  /**\n   * Returns if a element is tabbable. To be tabbable, a element must be\n   * focusable, visible, and with a tabindex !== -1.\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   */\n  static isTabbable(element) {\n    return this.isFocusable(element) &&\n        matches.call(element, ':not([tabindex=\"-1\"])') &&\n        this._isVisible(element);\n  }\n\n  /**\n   * Returns the normalized element tabindex. If not focusable, returns -1.\n   * It checks for the attribute \"tabindex\" instead of the element property\n   * `tabIndex` since browsers assign different values to it.\n   * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n   * @param {!HTMLElement} element\n   * @return {!number}\n   * @private\n   */\n  static _normalizedTabIndex(element) {\n    if (this.isFocusable(element)) {\n      const tabIndex = element.getAttribute('tabindex') || 0;\n      return Number(tabIndex);\n    }\n    return -1;\n  }\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result` if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  static _collectTabbableNodes(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (node.nodeType !== Node.ELEMENT_NODE || !this._isVisible(node)) {\n      return false;\n    }\n    const element = /** @type {!HTMLElement} */ (node);\n    const tabIndex = this._normalizedTabIndex(element);\n    let needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distribution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distribution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    let children;\n    if (element.localName === 'slot') {\n      children = element.assignedNodes({flatten: true});\n    } else {\n      // Use shadow root if possible, will check for distributed nodes.\n      children = (element.shadowRoot || element).children;\n    }\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        // Ensure method is always invoked to collect tabbable children.\n        needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n      }\n    }\n    return needsSort;\n  }\n\n  /**\n   * Returns false if the element has `visibility: hidden` or `display: none`\n   * @param {!HTMLElement} element\n   * @return {boolean}\n   * @private\n   */\n  static _isVisible(element) {\n    // Check inline style first to save a re-flow. If looks good, check also\n    // computed style.\n    let style = element.style;\n    if (style.visibility !== 'hidden' && style.display !== 'none') {\n      style = window.getComputedStyle(element);\n      return (style.visibility !== 'hidden' && style.display !== 'none');\n    }\n    return false;\n  }\n\n  /**\n   * Sorts an array of tabbable elements by tabindex. Returns a new array.\n   * @param {!Array<!HTMLElement>} tabbables\n   * @return {!Array<!HTMLElement>}\n   * @private\n   */\n  static _sortByTabIndex(tabbables) {\n    // Implement a merge sort as Array.prototype.sort does a non-stable sort\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n    const len = tabbables.length;\n    if (len < 2) {\n      return tabbables;\n    }\n    const pivot = Math.ceil(len / 2);\n    const left = this._sortByTabIndex(tabbables.slice(0, pivot));\n    const right = this._sortByTabIndex(tabbables.slice(pivot));\n    return this._mergeSortByTabIndex(left, right);\n  }\n\n  /**\n   * Merge sort iterator, merges the two arrays into one, sorted by tab index.\n   * @param {!Array<!HTMLElement>} left\n   * @param {!Array<!HTMLElement>} right\n   * @return {!Array<!HTMLElement>}\n   * @private\n   */\n  static _mergeSortByTabIndex(left, right) {\n    const result = [];\n    while ((left.length > 0) && (right.length > 0)) {\n      if (this._hasLowerTabOrder(left[0], right[0])) {\n        result.push(right.shift());\n      } else {\n        result.push(left.shift());\n      }\n    }\n\n    return result.concat(left, right);\n  }\n\n  /**\n   * Returns if element `a` has lower tab order compared to element `b`\n   * (both elements are assumed to be focusable and tabbable).\n   * Elements with tabindex = 0 have lower tab order compared to elements\n   * with tabindex > 0.\n   * If both have same tabindex, it returns false.\n   * @param {!HTMLElement} a\n   * @param {!HTMLElement} b\n   * @return {boolean}\n   * @private\n   */\n  static _hasLowerTabOrder(a, b) {\n    // Normalize tabIndexes\n    // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n    const ati = Math.max(a.tabIndex, 0);\n    const bti = Math.max(b.tabIndex, 0);\n    return (ati === 0 || bti === 0) ? bti > ati : ati > bti;\n  }\n}\n\n/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nlet overlayContentCounter = 0;\nconst overlayContentCache = {};\n\nconst createOverlayContent = (cssText) => {\n  const is = overlayContentCache[cssText] || processOverlayStyles(cssText);\n  return document.createElement(is);\n};\n\nconst processOverlayStyles = (cssText) => {\n  overlayContentCounter++;\n  const is = `vaadin-overlay-content-${overlayContentCounter}`;\n\n  const styledTemplate = document.createElement('template');\n  const style = document.createElement('style');\n  style.textContent = ':host { display: block; }' + cssText;\n  styledTemplate.content.appendChild(style);\n\n  if (window.ShadyCSS) {\n    window.ShadyCSS.prepareTemplate(styledTemplate, is);\n  }\n\n  // NOTE(platosha): Have to use an awkward IIFE returning class here\n  // to prevent this class from showing up in analysis.json & API docs.\n  const klass = (() => /** @private */ class extends HTMLElement {\n    static get is() {\n      return is;\n    }\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({mode: 'open'});\n        this.shadowRoot.appendChild(document.importNode(styledTemplate.content, true));\n      }\n    }\n\n    connectedCallback() {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleElement(this);\n      }\n    }\n  })();\n\n  customElements.define(klass.is, klass);\n\n  overlayContentCache[cssText] = is;\n  return is;\n};\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.  You can also pass\n * custom `instanceProps` object using the `instanceProps` property.\n *\n * ```html\n * <vaadin-overlay>\n *   <template>Overlay content</template>\n * </vaadin-overlay>\n * ```\n *\n * **NOTE:** when using `instanceProps`: because of the Polymer limitation,\n * every template can only be templatized once, so it is important\n * to set `instanceProps` before the `template` is assigned to the overlay.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @extends PolymerElement\n * @mixes ThemableMixin\n * @demo demo/index.html\n */\nclass OverlayElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        z-index: 200;\n        position: fixed;\n\n        /*\n          Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part.\n        */\n\n        /*\n          Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport.\n        */\n        top: 0;\n        right: 0;\n        bottom: var(--vaadin-overlay-viewport-bottom);\n        left: 0;\n\n        /* Use flexbox alignment for the overlay part. */\n        display: flex;\n        flex-direction: column; /* makes dropdowns sizing easier */\n        /* Align to center by default. */\n        align-items: center;\n        justify-content: center;\n\n        /* Allow centering when max-width/max-height applies. */\n        margin: auto;\n\n        /* The host is not clickable, only the overlay part is. */\n        pointer-events: none;\n\n        /* Remove tap highlight on touch devices. */\n        -webkit-tap-highlight-color: transparent;\n\n        /* CSS API for host */\n        --vaadin-overlay-viewport-bottom: 0;\n      }\n\n      :host([hidden]),\n      :host(:not([opened]):not([closing])) {\n        display: none !important;\n      }\n\n      [part=\"overlay\"] {\n        -webkit-overflow-scrolling: touch;\n        overflow: auto;\n        pointer-events: auto;\n\n        /* Prevent overflowing the host in MSIE 11 */\n        max-width: 100%;\n        box-sizing: border-box;\n\n        -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n      }\n\n      [part=\"backdrop\"] {\n        z-index: -1;\n        content: \"\";\n        background: rgba(0, 0, 0, 0.5);\n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        pointer-events: auto;\n      }\n    </style>\n\n    <div id=\"backdrop\" part=\"backdrop\" hidden\\$=\"{{!withBackdrop}}\"></div>\n    <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n      <div part=\"content\" id=\"content\">\n        <slot></slot>\n      </div>\n    </div>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * Optional argument for `Polymer.Templatize.templatize`.\n       */\n      instanceProps: {\n        type: Object\n      },\n\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true\n      },\n\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn’t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false,\n      },\n\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean\n      },\n\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean\n      },\n\n      /** @private */\n      _instance: {\n        type: Object\n      },\n\n      /** @private */\n      _originalContentPart: Object,\n\n      /** @private */\n      _contentNodes: Array,\n\n      /** @private */\n      _oldOwner: Element,\n\n      /** @private */\n      _oldModel: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldInstanceProps: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _oldOpened: Boolean\n    };\n  }\n\n  static get observers() {\n    return [\n      '_templateOrRendererChanged(template, renderer, owner, model, instanceProps, opened)'\n    ];\n  }\n\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    this._observer = new FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n  }\n\n  ready() {\n    super.ready();\n\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    if (!this.opened) {\n      return;\n    }\n\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n\n    const landscape = innerWidth > innerHeight;\n\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', clientHeight - innerHeight + 'px');\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.filter(node => node.localName && node.localName === 'template')[0] || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    var evt = new CustomEvent('vaadin-overlay-close', {bubbles: true, cancelable: true, detail: {sourceEvent: sourceEvent}});\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._boundIosResizeListener && window.removeEventListener('resize', this._boundIosResizeListener);\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().indexOf(this.$.overlay) !== -1 ||\n        this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {bubbles: true, cancelable: true, detail: {sourceEvent: event}});\n    this.dispatchEvent(evt);\n\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // TAB\n    if (event.key === 'Tab' && this.focusTrap && !event.defaultPrevented) {\n      // if only tab key is pressed, cycle forward, else cycle backwards.\n      this._cycleTab(event.shiftKey ? -1 : 1);\n\n      event.preventDefault();\n\n    // ESC\n    } else if (event.key === 'Escape' || event.key === 'Esc') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {bubbles: true, cancelable: true, detail: {sourceEvent: event}});\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n\n      afterNextRender(this, () => {\n        if (this.focusTrap && !this.contains(document._activeElement || document.activeElement)) {\n          this._cycleTab(0, 0);\n        }\n\n        const evt = new CustomEvent('vaadin-overlay-open', {bubbles: true});\n        this.dispatchEvent(evt);\n      });\n\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      this._animatedClosing();\n\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name != 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n\n    const finishOpening = () => {\n      document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n\n      this.removeAttribute('opening');\n    };\n\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', finishOpening);\n    } else {\n      finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      if (this.restoreFocusOnClose && this.__restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          this.__restoreFocusNode.focus();\n        }\n        this.__restoreFocusNode = null;\n      }\n\n      this.setAttribute('closing', '');\n\n      const finishClosing = () => {\n        document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n        this._detachOverlay();\n        this.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n        this.removeAttribute('closing');\n      };\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', finishClosing);\n      } else {\n        finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children)\n      .filter(el => el instanceof OverlayElement && !el.hasAttribute('closing'))\n      .sort((a, b) => (a.__zIndex - b.__zIndex) || 0);\n  }\n\n  /**\n   * returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === OverlayElement.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n    document.addEventListener('keydown', this._boundKeydownListener);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    OverlayElement.__attachedInstances.forEach(el => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n    document.removeEventListener('keydown', this._boundKeydownListener);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = OverlayElement.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while (el = instances.pop()) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n\n    this._observer.disconnect();\n\n    this._contentNodes.forEach(node => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n\n    this._observer.connect();\n\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {object} instanceProps\n   * @protected\n   */\n  _stampOverlayTemplate(template, instanceProps) {\n    this._removeOldContent();\n\n    if (!template._Templatizer) {\n      template._Templatizer = templatize(template, this, {\n        instanceProps: instanceProps,\n        forwardHostProp: function(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        }\n      });\n    }\n\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n    const _isScoped = templateRoot !== document;\n\n    if (_isScoped) {\n      const isShady = window.ShadyCSS && !window.ShadyCSS.nativeShadow;\n\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({mode: 'open'});\n      }\n\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style'))\n        .reduce((result, style) => result + style.textContent, '');\n\n      if (isShady) {\n        // NOTE(platosha): ShadyCSS removes <style>’s from templates, so\n        // we have to use these protected APIs to get their contents back\n        const styleInfo = window.ShadyCSS.ScopingShim\n          ._styleInfoForNode(templateRoot.host);\n        if (styleInfo) {\n          scopeCssText += styleInfo._getStyleRules().parsedCssText;\n          scopeCssText += '}';\n        }\n      }\n\n      // The overlay root’s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n\n      if (scopeCssText) {\n        if (isShady) {\n          // ShadyDOM: replace the <div part=\"content\"> with a generated\n          // styled custom element\n          const contentPart = createOverlayContent(scopeCssText);\n          contentPart.id = 'content';\n          contentPart.setAttribute('part', 'content');\n          this.$.content.parentNode.replaceChild(contentPart, this.$.content);\n          // NOTE(platosha): carry the style scope of the content part\n          contentPart.className = this.$.content.className;\n          this._originalContentPart = this.$.content;\n          this.$.content = contentPart;\n        } else {\n          // Shadow DOM: append a style to the content shadowRoot\n          const style = document.createElement('style');\n          style.textContent = scopeCssText;\n          this.$.content.shadowRoot.appendChild(style);\n          this._contentNodes.unshift(style);\n        }\n      }\n\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /**\n   * Manually invoke existing renderer.\n   */\n  render() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _templateOrRendererChanged(template, renderer, owner, model, instanceProps, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n\n    const ownerOrModelChanged = (this._oldOwner !== owner || this._oldModel !== model);\n    this._oldModel = model;\n    this._oldOwner = owner;\n\n    const templateOrInstancePropsChanged = (this._oldInstanceProps !== instanceProps || this._oldTemplate !== template);\n    this._oldInstanceProps = instanceProps;\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n\n    if (template && templateOrInstancePropsChanged) {\n      this._stampOverlayTemplate(template, instanceProps);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      this.content = this;\n\n      if (rendererChanged) {\n        while (this.content.firstChild) {\n          this.content.removeChild(this.content.firstChild);\n        }\n      }\n\n      if (opened) {\n        this.render();\n      }\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   * @protected\n   */\n  _isFocused(element) {\n    return element && element.getRootNode().activeElement === element;\n  }\n\n  /**\n   * @param {Element[]} elements\n   * @return {number}\n   * @protected\n   */\n  _focusedIndex(elements) {\n    elements = elements || this._getFocusableElements();\n    return elements.indexOf(elements.filter(this._isFocused).pop());\n  }\n\n  /**\n   * @param {number} increment\n   * @param {number | undefined} index\n   * @protected\n   */\n  _cycleTab(increment, index) {\n    const focusableElements = this._getFocusableElements();\n\n    if (index === undefined) {\n      index = this._focusedIndex(focusableElements);\n    }\n\n    index += increment;\n\n    // rollover to first item\n    if (index >= focusableElements.length) {\n      index = 0;\n    // go to last item\n    } else if (index < 0) {\n      index = focusableElements.length - 1;\n    }\n\n    focusableElements[index].focus();\n  }\n\n  /**\n   * @return {!Array<!HTMLElement>}\n   * @protected\n   */\n  _getFocusableElements() {\n    // collect all focusable elements\n    return FocusablesHelper.getTabbableNodes(this.$.overlay);\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    let active = document._activeElement || document.activeElement;\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    // In IE 11, it can also be an object when operating in iframes\n    // or document.documentElement (when overlay closed on outside click).\n    // In these cases, default it to document.body.\n    if (!active || active === document.documentElement || active instanceof Element === false) {\n      active = document.body;\n    }\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = OverlayElement.__attachedInstances.filter(o => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\n\ncustomElements.define(OverlayElement.is, OverlayElement);\n\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\n\nExample:\n\n    Polymer({\n\n      is: 'x-chatty',\n\n      attached: function() {\n        // This will create the singleton element if it has not\n        // been created yet:\n        Polymer.IronA11yAnnouncer.requestAvailability();\n      }\n    });\n\nAfter the `iron-a11y-announcer` has been made available, elements can\nmake announces by firing bubbling `iron-announce` events.\n\nExample:\n\n    this.fire('iron-announce', {\n      text: 'This is an announcement!'\n    }, { bubbles: true });\n\nNote: announcements are only audible if you have a screen reader enabled.\n\n@demo demo/index.html\n*/\nconst IronA11yAnnouncer = Polymer({\n  /** @override */\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: fixed;\n        clip: rect(0px,0px,0px,0px);\n      }\n    </style>\n    <div aria-live$=\"[[mode]]\">[[_text]]</div>\n`,\n\n  is: 'iron-a11y-announcer',\n\n  properties: {\n\n    /**\n     * The value of mode is used to set the `aria-live` attribute\n     * for the element that will be announced. Valid values are: `off`,\n     * `polite` and `assertive`.\n     */\n    mode: {type: String, value: 'polite'},\n\n    /**\n     * The timeout on refreshing the announcement text. Larger timeouts are\n     * needed for certain screen readers to re-announce the same message.\n     */\n    timeout: {type: Number, value: 150},\n\n    _text: {type: String, value: ''},\n  },\n\n  /** @override */\n  created: function() {\n    if (!IronA11yAnnouncer.instance) {\n      IronA11yAnnouncer.instance = this;\n    }\n\n    document.addEventListener('iron-announce', this._onIronAnnounce.bind(this));\n  },\n\n  /**\n   * Cause a text string to be announced by screen readers.\n   *\n   * @param {string} text The text that should be announced.\n   */\n  announce: function(text) {\n    this._text = '';\n    this.async(function() {\n      this._text = text;\n    }, this.timeout);\n  },\n\n  _onIronAnnounce: function(event) {\n    if (event.detail && event.detail.text) {\n      this.announce(event.detail.text);\n    }\n  }\n});\n\nIronA11yAnnouncer.instance = null;\n\nIronA11yAnnouncer.requestAvailability = function() {\n  if (!IronA11yAnnouncer.instance) {\n    IronA11yAnnouncer.instance = document.createElement('iron-a11y-announcer');\n  }\n\n  if (document.body) {\n    document.body.appendChild(IronA11yAnnouncer.instance);\n  } else {\n    document.addEventListener('load', function() {\n      document.body.appendChild(IronA11yAnnouncer.instance);\n    });\n  }\n};\n\nexport { IronA11yAnnouncer as I, OverlayElement as O, TextFieldElement as T };\n","import './iron-resizable-behavior-b5089143.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `<dom-module id=\"lumo-field-button\">\n  <template>\n    <style>\n      [part\\$=\"button\"] {\n        flex: none;\n        width: 1em;\n        height: 1em;\n        line-height: 1;\n        font-size: var(--lumo-icon-size-m);\n        text-align: center;\n        color: var(--lumo-contrast-60pct);\n        transition: 0.2s color;\n        cursor: var(--lumo-clickable-cursor);\n      }\n\n      :host(:not([readonly])) [part\\$=\"button\"]:hover {\n        color: var(--lumo-contrast-90pct);\n      }\n\n      :host([disabled]) [part\\$=\"button\"],\n      :host([readonly]) [part\\$=\"button\"] {\n        color: var(--lumo-contrast-20pct);\n      }\n\n      [part\\$=\"button\"]::before {\n        font-family: \"lumo-icons\";\n        display: block;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n"],"sourceRoot":""}