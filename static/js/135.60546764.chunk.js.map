{"version":3,"sources":["../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/bh-spinner.entry.js"],"names":["BhSpinner","hostRef","registerInstance","this","position","size","offset","top","left","_offset","JSON","parse","h","Host","class","style"],"mappings":"6MAIMA,EAAS,WACb,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GAIvBE,KAAKC,SAAW,SAIhBD,KAAKE,KAAO,SAIZF,KAAKG,OAAS,CAAEC,IAAK,EAAGC,KAAM,EAChC,CAgBI,OAhBH,wCACD,WACEL,KAAKM,QAAkC,kBAAhBN,KAAKG,OACxBI,KAAKC,MAAMR,KAAKG,QAChBH,KAAKG,MACX,GAAC,+BACD,WACEH,KAAKM,QAAkC,kBAAhBN,KAAKG,OACxBI,KAAKC,MAAMR,KAAKG,QAChBH,KAAKG,MACX,GAAC,oBACD,WACE,OAAQM,YAAEC,IAAM,CAAEC,MAAO,cAAgBF,YAAE,MAAO,CAAEE,MAAO,yBAAF,OAA2BX,KAAKC,UAAYW,MAAyB,UAAlBZ,KAAKC,SAAuB,CAAEG,IAAK,GAAF,OAAKJ,KAAKM,QAAQF,IAAG,MAAMC,KAAM,GAAF,OAAKL,KAAKM,QAAQD,KAAI,OAAS,CAAC,GAAKI,YAAE,MAAO,CAAEE,MAAO,sCAAF,OAAwCX,KAAKE,SAChR,IAAC,qBACD,WAAwB,MAAO,CAC7B,OAAU,CAAC,eACV,KAAC,EA/BS,GAiCfL,EAAUe,MAnCW,+wC","file":"static/js/135.60546764.chunk.js","sourcesContent":["import { r as registerInstance, h, H as Host } from './index-c0304f12.js';\n\nconst bhSpinnerCss = \".bh-spinner-container--inline{position:relative;pointer-events:none}.bh-spinner-container--float{position:fixed;z-index:5000;display:flex;align-items:center;justify-content:center;top:0;left:0;width:100vw;height:100vh;pointer-events:none}.bh-spinner-circle{width:20px;height:20px}.bh-spinner-circle::after{content:\\\" \\\";display:block;width:16px;height:16px;border-radius:50%;border:2px solid var(--color-fill-control-selected);border-color:var(--color-fill-control-selected) transparent var(--color-fill-control-selected) transparent;animation:bh-spinner-keyframes 1.2s linear infinite}@keyframes bh-spinner-keyframes{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.bh-spinner-circle.bh-spinner-size--xlarge{width:84px;height:84px}.bh-spinner-circle.bh-spinner-size--xlarge::after{width:68px;height:68px;border-width:8px}.bh-spinner-circle.bh-spinner-size--large{width:52px;height:52px}.bh-spinner-circle.bh-spinner-size--large::after{width:42px;height:42px;border-width:5px}.bh-spinner-circle.bh-spinner-size--medium{width:20px;height:20px}.bh-spinner-circle.bh-spinner-size--medium::after{width:16px;height:16px;border-width:2px}.bh-spinner-circle.bh-spinner-size--small{width:12px;height:12px}.bh-spinner-circle.bh-spinner-size--small::after{width:10px;height:10px;border-width:1px}\";\n\nconst BhSpinner = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * Spinner position to be either inline (relative to parent dom element) or floating (position fixed above elements regardless scroll position). Valid options are \"inline\" | \"float\"\r\n     */\r\n    this.position = 'inline';\r\n    /**\r\n     * Spinner size - default value is \"medium\", valid options are \"xlarge\" | \"large\" | \"medium\" | \"small\"\r\n     */\r\n    this.size = 'medium';\r\n    /**\r\n     * This option works only when the position is set to \"float\" - sets a position offset of the spinner\r\n     */\r\n    this.offset = { top: 0, left: 0 };\r\n  }\r\n  watchOffset() {\r\n    this._offset = (typeof this.offset === 'string')\r\n      ? JSON.parse(this.offset)\r\n      : this.offset;\r\n  }\r\n  componentWillLoad() {\r\n    this._offset = (typeof this.offset === 'string')\r\n      ? JSON.parse(this.offset)\r\n      : this.offset;\r\n  }\r\n  render() {\r\n    return (h(Host, { class: \"bh-spinner\" }, h(\"div\", { class: `bh-spinner-container--${this.position}`, style: this.position === 'float' ? { top: `${this._offset.top}px`, left: `${this._offset.left}px` } : {} }, h(\"div\", { class: `bh-spinner-circle bh-spinner-size--${this.size}` }))));\r\n  }\r\n  static get watchers() { return {\r\n    \"offset\": [\"watchOffset\"]\r\n  }; }\r\n};\r\nBhSpinner.style = bhSpinnerCss;\n\nexport { BhSpinner as bh_spinner };\n"],"sourceRoot":""}