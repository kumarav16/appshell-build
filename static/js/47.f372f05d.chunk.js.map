{"version":3,"sources":["Constant.js","components/Breadcrumb/Breadcrumb.component.js"],"names":["BREADCRUMBEVENTSNAME","BreadcrumbItem","props","isFirst","index","isLast","length","isSingle","Link","className","classes","firstLink","link","href","onClick","icon","label","Typography","typography","BreadcrumbComponent","handleOptionClick","option","window","location","updateDropdown","event","options","getMenuItemsList","detail","menuItemId","defaultSystemIndex","findIndex","id","setState","selection","getPermitionMenuItemsAppId","appid","getData","find","rsname","updateBcItems","Constants","includes","eventName","bcItems","state","slice","splice","undefined","body","Array","isArray","push","subSytemList","selectedAppinfo","getSelectedAppInfo","handleChange","bind","document","addEventListener","this","removeEventListener","value","t","breadcrumb","Breadcrumbs","maxItems","separator","fontSize","color","map","bcItem","renderBreadcrumbItem","dropDownMenu","onChange","disabled","access","primaryText","i18Resources","displayTextId","name","preventDefault","itemClickHandler","payloadData","mode","payLoad","context","timeStamp","Date","now","origin","appname","parent","postMessage","JSON","stringify","eventType","payload","React","Component","withTranslation","withStyles","root","marginTop","height","fontFamily","fontWeight","lineHeight","letterSpacing","textTransform","margin","marginBottom","marginRight","marginLeft","width","float"],"mappings":"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","file":"static/js/47.f372f05d.chunk.js","sourcesContent":["export const PASSWORDPOLICYMESSAGE = \"The password does not comply with the password policy.\"\r\nexport const USERPROFILEDATA =[{\"name\": \"User Profile\",\"link\": \"/sds/\",\"icon\": \"speedrounded\"}]\r\nexport const BREADCRUMBEVENTSNAME = ['hierarchy.onNodeClickPath','map.onMarkerClick']\r\n","/*************************************************\r\n * BH Highly Confidential\r\n * Unpublished Copyright 2021. Baker Hughes.\r\n *\r\n * NOTICE:  All information contained herein is, and remains the property of Baker Hughes, and/or\r\n * its affiliates.  The intellectual and technical concepts contained herein are proprietary to Baker Hughes\r\n * and/or its affiliates and may be covered by patents, copyrights, and/or trade secrets.  Dissemination of this information or\r\n * reproduction of this material is strictly forbidden unless prior written permission is obtained from Baker Hughes.\r\n **************************************************/\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\nimport DropDownMenu from 'material-ui/DropDownMenu';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {getData} from '../../RbacData';\r\nimport * as Constants from '../../Constant'\r\n\r\nimport './Breadcrumb.component.css'\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    \"& > * + *\": {\r\n      marginTop: \"0px\",\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  breadcrumb: {\r\n    height: '20px',\r\n    marginTop: \"12px\",\r\n    fontSize: '14px',\r\n    fontFamily: \"'Noto Sans'\",\r\n    fontWeight: 'normal',\r\n    lineHeight: '20px',\r\n    letterSpacing: '0.05px',\r\n    // display: 'block',\r\n    // flex: 'none',\r\n    // flexGrow: '0',\r\n    // flexWrap: 'nowrap'\r\n    // order: '1'\r\n  },\r\n  firstLink: {\r\n    color: '#1A2321',\r\n    fontFamily: \"'Poppins'\",\r\n    fontSize: '14px',\r\n    lineHeight: '18px',\r\n    letterSpacing: '0.1px',\r\n    fontWeight: '600',\r\n    textTransform: 'uppercase',\r\n    margin: '0px 4px'\r\n  },\r\n  link: {\r\n    color: '#757575',\r\n    fontFamily: \"'Noto Sans'\",\r\n  },\r\n  typography: {\r\n    height: '20px',\r\n    fontSize: '14px',\r\n    fontFamily: \"'Noto Sans'\",\r\n    fontWeight: 'normal',\r\n    lineHeight: '20px',\r\n    letterSpacing: '0.05px',\r\n    color: '#1A2321'\r\n  },\r\n  icon: {\r\n    marginBottom: '-4px',\r\n    marginTop: \"0px\",\r\n    marginRight: \"4px\",\r\n    marginLeft: '36px',\r\n    width: 18,\r\n    height: 18,\r\n    color: '#1A2321'\r\n  },\r\n  dropDownMenu: {\r\n    float: \"right\",\r\n    marginTop: \"-40px\",\r\n  }\r\n});\r\n\r\nfunction BreadcrumbItem(props) {\r\n  const isFirst = props.index === 0;\r\n  const isLast = props.index === props.length - 1;\r\n  const isSingle = props.length === 1;\r\n  return (\r\n    <>\r\n      {\r\n        (!isLast || isSingle) ?\r\n          <Link className={isFirst ? props.classes.firstLink : props.classes.link} href=\"#\" onClick={props.onClick}>\r\n            {\r\n              isFirst &&\r\n              <PublicIcon className={props.classes.icon} />\r\n            }\r\n            {props.label}\r\n          </Link>\r\n          :\r\n          <Typography className={props.classes.typography}>\r\n            {props.label}\r\n          </Typography>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nclass BreadcrumbComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let items = [];\r\n    this.subSytemList = [];\r\n    const selectedAppinfo = window.getSelectedAppInfo();\r\n    this.options = selectedAppinfo ? window.getMenuItemsList(selectedAppinfo.menuItemId) : '';\r\n    let defaultSystemIndex = selectedAppinfo ? this.options.findIndex(option=> option.id === selectedAppinfo.id):0;\r\n    this.state = {\r\n      bcItems: items,\r\n      selection: defaultSystemIndex\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('shareContext', this.updateBcItems, false);\r\n    document.addEventListener('onAppChange',this.updateDropdown,false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('shareContext', this.updateBcItems);\r\n    document.removeEventListener('onAppChange',this.updateDropdown);\r\n  }\r\n  handleOptionClick = (option) => {\r\n    // const context = {\r\n    //   context: {\r\n    //     eventName: 'breadcrumb.dropDownSelection',\r\n    //     body: option,\r\n    //     timeStamp: Date.now(),\r\n    //     origin: window.location.origin // since being sent by AppShell or '#'\r\n    //   }\r\n    // };\r\n    // var payloadData = {\r\n    //   state: { mode: 'spa', detail: { payLoad: context.context } },\r\n    //   appname: option.id\r\n    // }\r\n    // window.parent.postMessage(JSON.stringify({ eventType: \"navigation\", payload: payloadData }));\r\n    window.location.href = \"#\"+option.link;\r\n  }\r\n  handleChange(event,index, value) {\r\n    //set selection to the value selected\r\n    this.setState({ selection: value });\r\n    this.handleOptionClick(this.options[value]);\r\n  }\r\n  updateDropdown= (event)=>{\r\n    this.options = window.getMenuItemsList(event.detail.menuItemId);\r\n    let defaultSystemIndex = this.options.findIndex(option=> option.id === event.detail.id);\r\n    this.setState({ selection: defaultSystemIndex });\r\n  }\r\n  getPermitionMenuItemsAppId = (appid)=>{\r\n    const permissionapplist= getData();\r\n    const microappPersmissonObject=permissionapplist.find(({rsname})=>rsname===appid)\r\n    return microappPersmissonObject;\r\n  }\r\n  render() {\r\n    const { classes,t } = this.props;\r\n    return (\r\n\r\n      <div className={classes.breadcrumb}>\r\n        <Breadcrumbs\r\n          maxItems={5}\r\n          separator={<NavigateNextIcon fontSize=\"small\" color=\"inherit\" />}\r\n          aria-label=\"breadcrumb\"\r\n          className={classes.breadcrumb}\r\n        >\r\n          {\r\n            this.state.bcItems.map((bcItem, index) => (\r\n              this.renderBreadcrumbItem(bcItem, index, classes, this.state.bcItems.length)\r\n            ))\r\n          }\r\n        </Breadcrumbs>\r\n        <MuiThemeProvider>\r\n          <div id=\"dropDownMenuBreadcrumb\" className={classes.dropDownMenu}>\r\n            {this.options && this.options.length > 1 && <DropDownMenu\r\n              value={this.state.selection}\r\n              onChange={this.handleChange}\r\n            >\r\n              {this.options.map((option, index) => {\r\n                return <MenuItem disabled={this.getPermitionMenuItemsAppId(option.id).access === \"disabled\" ? true : false} value={index} primaryText={(window.i18Resources!==\"\"? option.displayTextId ? t(option.displayTextId):t(option.id):option.name)} />\r\n                })}\r\n            </DropDownMenu>}\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderBreadcrumbItem(bcItem, index, classes, length) {\r\n    return (\r\n      <BreadcrumbItem key={index} index={index} length={length} label={bcItem.name} classes={classes}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          this.itemClickHandler(bcItem, index)\r\n        }\r\n        } />\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove items present after selected index.\r\n   * Share selected item as context to all frames/app's.\r\n   * @param {*} bcItem - selected item \r\n   * @param {*} index - index of selected item\r\n   */\r\n  itemClickHandler(bcItem, index) {\r\n    // write context\r\n    const context = {\r\n      context: {\r\n        eventName: 'breadcrumb.onItemClick',\r\n        body: bcItem,\r\n        timeStamp: Date.now(),\r\n        origin: window.location.origin // since being sent by AppShell or '#'\r\n      }\r\n    };\r\n    var payloadData = {\r\n      state: { mode: 'spa', detail: { payLoad: context.context } },\r\n      appname: ''\r\n    }\r\n    window.parent.postMessage(JSON.stringify({ eventType: \"navigation\", payload: payloadData }));\r\n\r\n    // remove items\r\n    const bcItems = this.state.bcItems.slice();\r\n    bcItems.splice(index + 1);// not interested in return value - the deleted items.\r\n    this.setState({\r\n      bcItems: bcItems\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update BC items as per incoming event data.\r\n   * if items.length==0 {just add incoming},\r\n   * if items.length==1 {just add incoming},\r\n   * if items.length>1 {remove all items from index=1 (i.e. retain 1st item) & add incoming}\r\n   * @param {*} event \r\n   */\r\n  updateBcItems = (event) => {\r\n    // Note: we can add contains check of onNodeClickPath thereby drive towards making generic. \r\n    /* istanbul ignore if*/\r\n    if (!(Constants.BREADCRUMBEVENTSNAME.includes(event.detail.eventName))) {\r\n      return;\r\n    }\r\n\r\n      const bcItems = this.state.bcItems.slice();\r\n      /* istanbul ignore if*/\r\n      if (bcItems.length > 1) {\r\n        bcItems.splice(1);// not interested in return value - the deleted items.\r\n      }\r\n      /* istanbul ignore else*/\r\n      if(event.detail.body !== undefined) {\r\n      if (Array.isArray(event.detail.body)) {\r\n        bcItems.push(...event.detail.body);\r\n      }\r\n      else {\r\n        bcItems.push(event.detail.body);\r\n      }\r\n   }\r\n\r\n    this.setState({\r\n      bcItems: bcItems\r\n    });\r\n  }\r\n}\r\n\r\nBreadcrumbComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withTranslation()(withStyles(styles)(BreadcrumbComponent));\r\n\r\n"],"sourceRoot":""}