{"version":3,"sources":["../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/bh-form-message.entry.js"],"names":["BhFormMessage","hostRef","registerInstance","this","isError","isDisabled","messageClasses","push","message","h","class","join","style"],"mappings":"kNAIMA,EAAa,WACjB,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GASvBE,KAAKC,SAAU,EASfD,KAAKE,YAAa,CACpB,CAeC,OAfA,mCACD,WACE,IAAMC,EAAiB,CAAC,0CAOxB,OANIH,KAAKC,SACPE,EAAeC,KAAK,0BAElBJ,KAAKE,YACPC,EAAeC,KAAK,6BAElBJ,KAAKK,QACCC,YAAE,MAAO,CAAEC,MAAOJ,EAAeK,KAAK,MAAQR,KAAKC,SAAWK,YAAE,IAAK,CAAEC,MAAO,gDAAkD,iBAAkBP,KAAKK,cAG/J,CAEJ,KAAC,EApCgB,GAsCnBR,EAAcY,MAxCW,mV","file":"static/js/126.1052d4ec.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-c0304f12.js';\n\nconst bhFormMessageCss = \".bh-form-message{display:flex;cursor:default;color:var(--color-text-common-secondary)}.bh-form-message--error{color:var(--color-text-label-error)}.bh-form-message--disabled{color:var(--color-text-label-disabled-default)}.bh-form-message .bh-form-message__icon{margin-right:var(--spacing-margin-xxsmall);line-height:inherit;color:inherit}\";\n\nconst BhFormMessage = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * isError\r\n     * Error messages are red with an alert icon\r\n     * DOM Attribute: error\r\n     * Usage: <bh-form-message error />\r\n     * Default: false\r\n     * Optional\r\n     */\r\n    this.isError = false;\r\n    /**\r\n     * isDisabled\r\n     * Disabled messages are grayed out\r\n     * DOM Attribute: disabled\r\n     * Usage: <bh-form-message disabled />\r\n     * Default: false\r\n     * Optional\r\n     */\r\n    this.isDisabled = false;\r\n  }\r\n  render() {\r\n    const messageClasses = ['bh-form-message typography--body-small'];\r\n    if (this.isError) {\r\n      messageClasses.push('bh-form-message--error');\r\n    }\r\n    if (this.isDisabled) {\r\n      messageClasses.push('bh-form-message--disabled');\r\n    }\r\n    if (this.message) {\r\n      return (h(\"div\", { class: messageClasses.join(\" \") }, this.isError && h(\"i\", { class: \"typography--icon-small bh-form-message__icon\" }, \"error_outline\"), this.message));\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n  }\r\n};\r\nBhFormMessage.style = bhFormMessageCss;\n\nexport { BhFormMessage as bh_form_message };\n"],"sourceRoot":""}