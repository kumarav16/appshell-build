{"version":3,"sources":["components/BhNotification/index.js","../../src/components.ts","components/BhNotification/BhNotification.js"],"names":["applyPolyfills","then","defineCustomElements","BhA","BhNotification","props","getNotificationDataCall","notificationData","formattedData","restructureNotificationData","tabLoadData","state","activeTab","key","array","orderedArray","_","orderBy","today","moment","cloneDeep","map","item","category","isEmpty","getCategoryTab","createdDateTime","diff","categoryGroup","hours","recentTimeLimit","config","timeSettings","recent","Date","arr","comp","resultArr","keyValue","selectedFilterValue","removedId","selFilterState","filter","filterOptions","tabNotificationData","i","value","filterCriteria","includes","id","groupByRes","groupBy","result","Object","keys","notificationGroup","notificationList","getNotificationRow","setState","renderNotificationComp","onTabSelect","tab","inputArray","arrAfterRemovedObj","removalFlag","cloneOriginalNotificationData","detail","onFilterMenu","filterMenu","selFilter","filterOptionsTmp","opt","selected","onRemove","row","removalIdArray","push","handleCustomEvent","type","markNotificationRead","softDelete","updateErrorId","t","className","notification","header","title","description","message","createdTime","status","position","theme","size","getIconBasedOnType","onClick","icon","dismissible","marginLeft","marginRight","marginTop","marginBottom","mailId","createdBy","split","first","last","image","false","firstname","lastname","color","getIconColor","iconOptionsArr","icons","iconOptions","customTypeObj","find","defaultIconObj","iconObj","iconName","iconColor","onViewAllSelect","viewAllObj","data","isNoResponse","context","navigationObject","get","payloadData","mode","payLoad","appname","window","parent","postMessage","JSON","stringify","eventType","payload","getOtherScenariosScreens","notificationErrorScreen","align","source","tabList","tabMenu","tabs","tabOptions","slice","this","prevProps","isEqual","items","notificationArr","filterData","inputArr","commonObjects","intersectionBy","configTemp","viewAll","isOpen","requestAdvNotification","i18TabList","label","slot","width","onBhEventClose","event","text","noUnderline","href","target","disabled","small","onBhEventSelected","activeKey","selectedValue","ellipsis","Component"],"mappings":"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","file":"static/js/17.2df8eb9c.chunk.js","sourcesContent":["import { applyPolyfills, defineCustomElements } from '@baker-hughes-central-design/ui-toolkit/loader';\r\nimport './BhNotification.css'\r\n\r\n\r\napplyPolyfills().then(() => {\r\n    defineCustomElements();\r\n  });\r\n\r\nexport { default } from './BhNotification';","/* eslint-disable */\r\n/* tslint:disable */\r\n/* auto-generated react proxies */\r\nimport { createReactComponent } from './react-component-lib';\r\nexport const BhA = /*@__PURE__*/ createReactComponent('bh-a');\r\nexport const BhAccordion = /*@__PURE__*/ createReactComponent('bh-accordion');\r\nexport const BhActionBar = /*@__PURE__*/ createReactComponent('bh-action-bar');\r\nexport const BhActionMenu = /*@__PURE__*/ createReactComponent('bh-action-menu');\r\nexport const BhAlert = /*@__PURE__*/ createReactComponent('bh-alert');\r\nexport const BhAlertItem = /*@__PURE__*/ createReactComponent('bh-alert-item');\r\nexport const BhAppShell = /*@__PURE__*/ createReactComponent('bh-app-shell');\r\nexport const BhAppShellMenu = /*@__PURE__*/ createReactComponent('bh-app-shell-menu');\r\nexport const BhAvatar = /*@__PURE__*/ createReactComponent('bh-avatar');\r\nexport const BhAvatarGroup = /*@__PURE__*/ createReactComponent('bh-avatar-group');\r\nexport const BhBadge = /*@__PURE__*/ createReactComponent('bh-badge');\r\nexport const BhBarChart = /*@__PURE__*/ createReactComponent('bh-bar-chart');\r\nexport const BhBreadcrumbs = /*@__PURE__*/ createReactComponent('bh-breadcrumbs');\r\nexport const BhButton = /*@__PURE__*/ createReactComponent('bh-button');\r\nexport const BhButtonDropdown = /*@__PURE__*/ createReactComponent('bh-button-dropdown');\r\nexport const BhButtonGroup = /*@__PURE__*/ createReactComponent('bh-button-group');\r\nexport const BhButtonTabs = /*@__PURE__*/ createReactComponent('bh-button-tabs');\r\nexport const BhCard = /*@__PURE__*/ createReactComponent('bh-card');\r\nexport const BhCheckbox = /*@__PURE__*/ createReactComponent('bh-checkbox');\r\nexport const BhChip = /*@__PURE__*/ createReactComponent('bh-chip');\r\nexport const BhChipGroup = /*@__PURE__*/ createReactComponent('bh-chip-group');\r\nexport const BhContent = /*@__PURE__*/ createReactComponent('bh-content');\r\nexport const BhDataTable = /*@__PURE__*/ createReactComponent('bh-data-table');\r\nexport const BhDatePicker = /*@__PURE__*/ createReactComponent('bh-date-picker');\r\nexport const BhDateRangePicker = /*@__PURE__*/ createReactComponent('bh-date-range-picker');\r\nexport const BhDateTimePicker = /*@__PURE__*/ createReactComponent('bh-date-time-picker');\r\nexport const BhDialog = /*@__PURE__*/ createReactComponent('bh-dialog');\r\nexport const BhDivider = /*@__PURE__*/ createReactComponent('bh-divider');\r\nexport const BhDonutChart = /*@__PURE__*/ createReactComponent('bh-donut-chart');\r\nexport const BhDropdown = /*@__PURE__*/ createReactComponent('bh-dropdown');\r\nexport const BhError = /*@__PURE__*/ createReactComponent('bh-error');\r\nexport const BhFooter = /*@__PURE__*/ createReactComponent('bh-footer');\r\nexport const BhFormMessage = /*@__PURE__*/ createReactComponent('bh-form-message');\r\nexport const BhHeader = /*@__PURE__*/ createReactComponent('bh-header');\r\nexport const BhIcon = /*@__PURE__*/ createReactComponent('bh-icon');\r\nexport const BhIllustration = /*@__PURE__*/ createReactComponent('bh-illustration');\r\nexport const BhIncrementer = /*@__PURE__*/ createReactComponent('bh-incrementer');\r\nexport const BhInlineDropdown = /*@__PURE__*/ createReactComponent('bh-inline-dropdown');\r\nexport const BhKpi = /*@__PURE__*/ createReactComponent('bh-kpi');\r\nexport const BhLineChart = /*@__PURE__*/ createReactComponent('bh-line-chart');\r\nexport const BhList = /*@__PURE__*/ createReactComponent('bh-list');\r\nexport const BhMenu = /*@__PURE__*/ createReactComponent('bh-menu');\r\nexport const BhMenuItem = /*@__PURE__*/ createReactComponent('bh-menu-item');\r\nexport const BhMobileMenu = /*@__PURE__*/ createReactComponent('bh-mobile-menu');\r\nexport const BhModal = /*@__PURE__*/ createReactComponent('bh-modal');\r\nexport const BhNavMenu = /*@__PURE__*/ createReactComponent('bh-nav-menu');\r\nexport const BhPagination = /*@__PURE__*/ createReactComponent('bh-pagination');\r\nexport const BhPanel = /*@__PURE__*/ createReactComponent('bh-panel');\r\nexport const BhProgressBar = /*@__PURE__*/ createReactComponent('bh-progress-bar');\r\nexport const BhRadioButton = /*@__PURE__*/ createReactComponent('bh-radio-button');\r\nexport const BhScatterChart = /*@__PURE__*/ createReactComponent('bh-scatter-chart');\r\nexport const BhSearch = /*@__PURE__*/ createReactComponent('bh-search');\r\nexport const BhSelectionGroup = /*@__PURE__*/ createReactComponent('bh-selection-group');\r\nexport const BhSettingsMenu = /*@__PURE__*/ createReactComponent('bh-settings-menu');\r\nexport const BhSlider = /*@__PURE__*/ createReactComponent('bh-slider');\r\nexport const BhSpinner = /*@__PURE__*/ createReactComponent('bh-spinner');\r\nexport const BhStatusIndicator = /*@__PURE__*/ createReactComponent('bh-status-indicator');\r\nexport const BhStepper = /*@__PURE__*/ createReactComponent('bh-stepper');\r\nexport const BhSystemAlertItem = /*@__PURE__*/ createReactComponent('bh-system-alert-item');\r\nexport const BhTabs = /*@__PURE__*/ createReactComponent('bh-tabs');\r\nexport const BhTabularList = /*@__PURE__*/ createReactComponent('bh-tabular-list');\r\nexport const BhTextArea = /*@__PURE__*/ createReactComponent('bh-text-area');\r\nexport const BhTextInput = /*@__PURE__*/ createReactComponent('bh-text-input');\r\nexport const BhTimePicker = /*@__PURE__*/ createReactComponent('bh-time-picker');\r\nexport const BhTimeZonePicker = /*@__PURE__*/ createReactComponent('bh-time-zone-picker');\r\nexport const BhTitleWrapper = /*@__PURE__*/ createReactComponent('bh-title-wrapper');\r\nexport const BhToggle = /*@__PURE__*/ createReactComponent('bh-toggle');\r\nexport const BhTokenDemo = /*@__PURE__*/ createReactComponent('bh-token-demo');\r\nexport const BhTooltip = /*@__PURE__*/ createReactComponent('bh-tooltip');\r\nexport const BhTree = /*@__PURE__*/ createReactComponent('bh-tree');\r\nexport const BhTypeAhead = /*@__PURE__*/ createReactComponent('bh-type-ahead');\r\nexport const BhUploader = /*@__PURE__*/ createReactComponent('bh-uploader');\r\nexport const BhVerticalMenu = /*@__PURE__*/ createReactComponent('bh-vertical-menu');\r\n//# sourceMappingURL=components.js.map","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport \"./BhNotification.css\";\r\nimport { BhButtonTabs, BhActionMenu, BhPanel, BhIcon, BhDivider, BhStatusIndicator, BhAvatar, BhSpinner, BhA, BhIllustration, BhAlertItem } from\r\n  '@baker-hughes-central-design/ui-toolkit-react/dist/components';\r\n\r\n\r\nclass BhNotification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabList: [],\r\n      activeTab: props.config.tabMenu && props.config.tabs && props.config.tabs.tabOptions ? props.config.tabs.tabOptions.slice(0, 3)[0] :\r\n        props.config.tabMenu ? { \"label\": \"Recent\", \"key\": \"recent\" } : {},\r\n      filterOptions: [],\r\n      selectedFilterValue: {},\r\n      notificationData: [],\r\n      renderNotificationComp: \"\",\r\n      cloneOriginalNotificationData: [],\r\n      arrAfterRemovedObj: [],\r\n      removalFlag: false\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    return {\r\n      cloneOriginalNotificationData: props.data.items,\r\n      filterOptions: props.config.filter && props.config.filter.filterOptions ? props.config.filter.filterOptions : [],\r\n      tabList: props.config.tabMenu && props.config.tabs && props.config.tabs.tabOptions ? props.config.tabs.tabOptions.slice(0, 3) :\r\n        props.config.tabMenu ? [{ \"label\": \"Recent\", \"key\": \"recent\" }, { \"label\": \"Earlier\", \"key\": \"earlier\" }] : []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNotificationDataCall(this.state.cloneOriginalNotificationData);\r\n    this.setState({\r\n      selectedFilterValue: this.props.config.filter && this.props.config.filter.filterOptions ? this.props.config.filter.filterOptions[0] : \"\"\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!_.isEqual(prevProps.data.items, this.props.data.items) || !_.isEqual(prevProps.config.updateErrorId, this.props.config.updateErrorId)) {\r\n      const { arrAfterRemovedObj } = this.state;\r\n      let removedId = !_.isEmpty(this.props.config.removedId) ? [...this.props.config.removedId] : [];\r\n\r\n      let notificationArr = this.props.data && this.props.data.items ? this.props.data.items : []\r\n\r\n      let filterData = _.filter(notificationArr, i => !_.isEmpty(removedId) && !_.includes(removedId, i.id));\r\n      let inputArr = !_.isEmpty(filterData) ? filterData : notificationArr;\r\n      let commonObjects = _.intersectionBy(notificationArr, arrAfterRemovedObj, \"id\");\r\n\r\n      this.setState({ arrAfterRemovedObj: commonObjects });\r\n      this.getNotificationDataCall(inputArr);\r\n    }\r\n  }\r\n\r\n  getNotificationDataCall = (notificationData = []) => {\r\n    let formattedData = this.restructureNotificationData(notificationData);\r\n    this.tabLoadData(formattedData, this.state.activeTab.key);\r\n  }\r\n\r\n  restructureNotificationData = (array) => {\r\n    let orderedArray = _.orderBy(array, [\"createdDateTime\"], [\"desc\"]);\r\n    let today = moment();\r\n    let alteredResponse = orderedArray && _.cloneDeep(orderedArray).map((item) => {\r\n      item.category = !_.isEmpty(item.category) ? item.category : this.getCategoryTab(item.createdDateTime);\r\n\r\n      let category = today.diff(item.createdDateTime, 'days');\r\n      if (category !== 0) {\r\n        item.createdDateTime = `${category} days ago`;\r\n        item.categoryGroup = `${category} days ago`;\r\n      } else {\r\n        let hours = today.diff(item.createdDateTime, 'hour');\r\n        item.createdDateTime = `${hours}h ago`;\r\n        item.categoryGroup = \"Today\";\r\n      }\r\n      return item\r\n    });\r\n    return alteredResponse;\r\n  }\r\n\r\n  getCategoryTab = (createdDateTime) => {\r\n    let recentTimeLimit = this.props.config && this.props.config.timeSettings && this.props.config.timeSettings.recent ? this.props.config.timeSettings.recent : 86400000;\r\n\r\n    let catValue;\r\n    let today = new Date();\r\n    let rowDateTime = new Date(createdDateTime);\r\n    let rangeMilliseconds = today - rowDateTime;\r\n\r\n    if (rangeMilliseconds <= recentTimeLimit) {\r\n      catValue = \"recent\"\r\n    } else {\r\n      catValue = \"earlier\"\r\n    }\r\n    return catValue;\r\n  }\r\n\r\n  tabLoadData = (arr, keyValue = \"\") => {\r\n    const { selectedFilterValue } = this.state;\r\n    let removedId = !_.isEmpty(this.props.config.removedId) ? [...this.props.config.removedId] : [];\r\n\r\n    let selFilterState = !_.isEmpty(selectedFilterValue) ? selectedFilterValue :\r\n      this.props.config.filter && this.props.config.filter.filterOptions ? this.props.config.filter.filterOptions[0] : \"\";\r\n    let tabNotificationData = [];\r\n    let comp, resultArr;\r\n\r\n    if (keyValue !== \"\") {\r\n      tabNotificationData = _.filter(arr, i => i.category === keyValue);\r\n    } else {\r\n      tabNotificationData = arr;\r\n    }\r\n\r\n    if (selFilterState.value !== \"all\") {\r\n      resultArr = !_.isEmpty(removedId) ? _.filter(tabNotificationData, item => item.filterCriteria === selFilterState.value && !_.includes(removedId, item.id)) :\r\n        _.filter(tabNotificationData, item => item.filterCriteria === selFilterState.value);\r\n    } else {\r\n      resultArr = !_.isEmpty(removedId) ? _.filter(tabNotificationData, item => !_.includes(removedId, item.id)) : tabNotificationData;\r\n    }\r\n\r\n    let groupByRes = _.groupBy(resultArr, \"categoryGroup\");\r\n    let result = Object.keys(groupByRes).map(function (key) {\r\n      return { notificationGroup: key, notificationList: groupByRes[key] };\r\n    });\r\n\r\n    comp = _.isEmpty(result) ? <div></div> : result.map(item => {\r\n      return this.getNotificationRow(item)\r\n    });\r\n    this.setState({ notificationData: result, renderNotificationComp: comp });\r\n  }\r\n\r\n  onTabSelect = (tab) => {\r\n    let inputArray = !_.isEmpty(this.state.arrAfterRemovedObj) || this.state.removalFlag ? this.state.arrAfterRemovedObj : this.state.cloneOriginalNotificationData;\r\n    let formattedData = this.restructureNotificationData(inputArray);\r\n    this.tabLoadData(formattedData, tab.detail.key);\r\n    this.setState({ activeTab: tab.detail });\r\n  }\r\n\r\n  onFilterMenu = (filterMenu) => {\r\n    const { filterOptions } = this.state;\r\n    let removedId = !_.isEmpty(this.props.config.removedId) ? [...this.props.config.removedId] : [];\r\n\r\n    let selFilter = filterMenu.detail;\r\n    let filterOptionsTmp = filterOptions.map(opt => {\r\n      if (opt.value === selFilter.value) {\r\n        opt.selected = true;\r\n        return opt;\r\n      } else {\r\n        opt.selected = false;\r\n        return opt;\r\n      }\r\n    });\r\n\r\n    let inputArray = !_.isEmpty(this.state.arrAfterRemovedObj) || this.state.removalFlag ? this.state.arrAfterRemovedObj : this.state.cloneOriginalNotificationData;\r\n    let formattedData = this.restructureNotificationData(inputArray);\r\n    let result;\r\n\r\n    if (filterMenu.detail.value !== \"all\") {\r\n      result = !_.isEmpty(removedId) ? _.filter(formattedData, item => item.filterCriteria === filterMenu.detail.value && !_.includes(removedId, item.id)) :\r\n        _.filter(formattedData, item => item.filterCriteria === filterMenu.detail.value);\r\n    } else {\r\n      result = !_.isEmpty(removedId) ? _.filter(formattedData, item => !_.includes(removedId, item.id)) : formattedData;\r\n    }\r\n\r\n    this.setState({ filterOptions: filterOptionsTmp, selectedFilterValue: selFilter });\r\n    this.tabLoadData(result, this.state.activeTab.key);\r\n  }\r\n\r\n  onRemove = (row) => {\r\n    const { cloneOriginalNotificationData, arrAfterRemovedObj, activeTab, removalFlag } = this.state;\r\n\r\n    let removalIdArray = !_.isEmpty(this.props.config.removedId) ? [...this.props.config.removedId] : [];\r\n    removalIdArray.push(row.id);\r\n\r\n    let inputArray = !_.isEmpty(arrAfterRemovedObj) || removalFlag ? arrAfterRemovedObj : cloneOriginalNotificationData;\r\n    let result = _.filter(inputArray, i => !_.isEmpty(removalIdArray) && !_.includes(removalIdArray, i.id));\r\n    let formattedData = this.restructureNotificationData(result);\r\n    this.tabLoadData(formattedData, activeTab.key);\r\n    this.setState({ arrAfterRemovedObj: result, removalFlag: true });\r\n    //To maintain removed data\r\n    this.props.handleCustomEvent({ type: \"onCloseClick\", removedId: removalIdArray });\r\n    //To update it as read notification\r\n    this.props.markNotificationRead(row, \"onCloseClick\");\r\n  }\r\n\r\n  getNotificationRow = (item) => {\r\n    const { softDelete, updateErrorId } = this.props.config;\r\n    const { t } = this.props;\r\n    if (item !== \"\" && item.notificationGroup !== \"\" && !_.isEmpty(item.notificationList)) {\r\n      return (\r\n        <div className=\"notif--group\">\r\n          <p className=\"typography--label-small text-color-secondary notif--date\">{item.notificationGroup}</p>\r\n          {\r\n            item.notificationList.map(notification => {\r\n              let header = !_.isEmpty(notification.title) ? notification.title : \"\";\r\n              let description = !_.isEmpty(notification.message) ? notification.message : \"\";\r\n              let createdTime = !_.isEmpty(notification.createdDateTime) && notification.createdDateTime;\r\n\r\n              return (\r\n                <>\r\n                  <div id={notification.id} className=\"notif--container motion--normal\">\r\n                    <div className=\"notif--status\">\r\n                      <div className=\"statusIndicator\">\r\n                        {\r\n                          notification.status === false &&\r\n                          <BhStatusIndicator className=\"notif--status-indicator\" position=\"standalone\" theme=\"accent\" size=\"xsmall\" />\r\n                        }\r\n                      </div>\r\n                      <div className=\"notiTypeIcon\">\r\n                        {\r\n                          this.getIconBasedOnType(notification)\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"notificationContent\" onClick={() => this.props.markNotificationRead(notification, \"onContentClick\")}>\r\n                      <p className=\"typography--body-small-semi-bold text-color-primary notif-title\">{header}</p>\r\n                      <p className=\"typography--body-small text-color-secondary notif--description\">{description}</p>\r\n                      <p className=\"typography--body-small text-color-secondary\">{createdTime}</p>\r\n                    </div>\r\n                    {\r\n                      softDelete &&\r\n                      <BhIcon className=\"closeIcon\" icon=\"close\" size=\"small\" onClick={() => this.onRemove(notification)} />\r\n                    }\r\n                  </div>\r\n                  {\r\n                    !_.isEmpty(updateErrorId) && updateErrorId === notification.id &&\r\n                    <div className=\"errorAlertItem\"><BhAlertItem type='context' status='critical'\r\n                      message={`<strong>${t(\"InternalServerError\")}.</strong> ${t(\"ErrorForRead\")}`} dismissible=\"false\" /></div>\r\n                  }\r\n                  <BhDivider marginLeft=\"medium\" marginRight=\"medium\" marginTop=\"none\" marginBottom=\"none\" />\r\n                </>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      )\r\n    } else {\r\n      return <div />\r\n    }\r\n  }\r\n\r\n  getIconBasedOnType = (notification) => {\r\n    let comp;\r\n    let type = !_.isEmpty(notification.type) ? notification.type : \"\";\r\n    if (type === \"User generated\") {\r\n      let mailId = !_.isEmpty(notification.createdBy) ? notification.createdBy.split(\"@\")[0].split(\".\") : \"\";\r\n      let first = !_.isEmpty(mailId) ? mailId[1] : \"\";\r\n      let last = !_.isEmpty(mailId) ? mailId[0] : \"\";\r\n      comp = <BhAvatar type=\"primary\" size=\"xsmall\" image=\"\" false firstname={first} lastname={last} />\r\n\r\n    } else if (_.includes(type, \"System\")) {\r\n      comp = <BhIcon icon=\"notification_important\" color={this.getIconColor(type)} size=\"xsmall\" />\r\n\r\n    } else {\r\n      const iconOptionsArr = this.props.config && this.props.config.icons && this.props.config.icons.iconOptions;\r\n      let customTypeObj = _.find(iconOptionsArr, i => i.value === type);\r\n      let defaultIconObj = _.find(iconOptionsArr, i => i.value === \"default\");\r\n      let iconObj = !_.isEmpty(customTypeObj) ? customTypeObj :\r\n        !_.isEmpty(defaultIconObj) ? defaultIconObj : {};\r\n      let iconName = !_.isEmpty(iconObj) && !_.isEmpty(iconObj.iconName) ? iconObj.iconName : \"\";\r\n      let iconColor = !_.isEmpty(iconObj) && !_.isEmpty(iconObj.color) ? iconObj.color : \"primary\";\r\n      comp = <BhIcon icon={iconName} color={iconColor} size=\"xsmall\" />\r\n\r\n    }\r\n    return comp;\r\n  }\r\n\r\n  getIconColor = (type) => {\r\n    let color;\r\n    if (type === \"System Warning\") {\r\n      color = `var(--color-fill-semantic-warning-default)`\r\n    } else if (type === \"System error\") {\r\n      color = `var(--color-fill-semantic-error-default)`\r\n    } else if (type === \"System Info\") {\r\n      color = `var(--color-fill-semantic-info-default)`\r\n    } else {\r\n      color = \"\";\r\n    }\r\n    return color;\r\n  }\r\n\r\n  onViewAllSelect = (viewAllObj) => {\r\n    const { data } = this.props;\r\n    if (data.isNoResponse) {\r\n      return\r\n    } else {\r\n      const context = {\r\n        navigationObject: _.get(viewAllObj, \"navigationObject\", {})\r\n      }\r\n      let payloadData = {\r\n        state: { mode: _.get(context, \"navigationObject.mode\", \"\"), detail: { payLoad: context.navigationObject } },\r\n        appname: _.get(context, \"navigationObject.appName\", \"\")\r\n      }\r\n      window.parent.postMessage(JSON.stringify({ eventType: \"navigation\", payload: payloadData }));\r\n    }\r\n  };\r\n\r\n  getOtherScenariosScreens = () => {\r\n    const { notificationErrorScreen } = this.props.config;\r\n    const { data, t } = this.props;\r\n    let comp;\r\n    if (notificationErrorScreen) {\r\n      comp = <div align=\"center\" className=\"errorScreen\">\r\n        <BhIllustration className=\"serverError\" source='CouldNotComplete' title={`${t(\"Error\")} !`} description={t(\"InternalServerError\")} />\r\n        <div className=\"errorContent\">\r\n          <p>{t(\"AdvanceNotifiErr1\")}</p>\r\n          <p>{t(\"AdvanceNotifiErr2\")}</p>\r\n        </div>\r\n      </div>\r\n    } else if (data.isNoResponse) {\r\n      comp = <div align=\"center\">\r\n        <BhIllustration className=\"noYet\" source='EmptyBox' title={t(\"NoNotifiYet\")} />\r\n      </div>\r\n    } else {\r\n      comp = comp = <div align=\"center\">\r\n        <BhIllustration className=\"noRecent\" source='EmptyBox' title={t(\"NoRecentNotification\")} />\r\n      </div>\r\n    }\r\n    return comp;\r\n  }\r\n\r\n  render() {\r\n    const { tabList, filterOptions, renderNotificationComp } = this.state;\r\n    const configTemp = this.props.config;\r\n    const { filter, tabMenu, viewAll, isOpen, requestAdvNotification } = configTemp;\r\n    const { data, t } = this.props;\r\n    let i18TabList = tabList.map(item => { return { ...item, \"label\": t(`${item.label}`) } });\r\n    return (\r\n      <div id='advanceNotification'>\r\n        <BhPanel\r\n          slot=\"bh-panel\"\r\n          width=\"medium\"\r\n          header={t(\"Notifications\")}\r\n          id=\"chart-comp--panel\"\r\n          isOpen={isOpen}\r\n          onBhEventClose={(event) => this.props.handleCustomEvent(event)}\r\n        >\r\n          {\r\n            !_.isEmpty(viewAll) &&\r\n            <BhA\r\n              className=\"notiViewAll typography--body-medium\"\r\n              type=\"primary\"\r\n              text={t(\"ViewAll\")}\r\n              noUnderline\r\n              href=\"#\"\r\n              onClick={() => this.onViewAllSelect(viewAll)}\r\n              target=\"_parent\"\r\n              left-icon=\"visibility\"\r\n              disabled={data.isNoResponse ? true : false}>\r\n            </BhA>\r\n          }\r\n          <div className=\"notif--header\">\r\n            <div className={tabMenu ? \"\" : \"hideTab\"}>\r\n              {\r\n                tabMenu &&\r\n                <BhButtonTabs\r\n                  className=\"notificationTabs\"\r\n                  small\r\n                  id=\"notificationButtonTabs\"\r\n                  onBhEventSelected={(event) => this.onTabSelect(event)}\r\n                  items={JSON.stringify(i18TabList)}\r\n                  activeKey={!_.isEmpty(this.state.activeTab) ? this.state.activeTab.key : \"\"}>\r\n                </BhButtonTabs>\r\n              }\r\n            </div>\r\n            <div className=\"notif--header-buttons\">\r\n              {\r\n                !_.isEmpty(filter) &&\r\n                <BhActionMenu\r\n                  className=\"notiActionMenu\"\r\n                  menu-items={filterOptions}\r\n                  onBhEventSelected={(event) => this.onFilterMenu(event)}\r\n                  selectedValue={!_.isEmpty(this.state.selectedFilterValue) ? this.state.selectedFilterValue.value : \"\"}\r\n                  width=\"small\"\r\n                  icon-override=\"more_vert\"\r\n                  ellipsis=\"true\">\r\n                </BhActionMenu>\r\n              }\r\n            </div>\r\n          </div>\r\n          <div id=\"panel--content\">\r\n            {requestAdvNotification ? <BhSpinner size=\"large\" className=\"panelSpinner\"></BhSpinner> :\r\n              _.isEmpty(data.items) ? this.getOtherScenariosScreens() : renderNotificationComp}\r\n          </div>\r\n        </BhPanel>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BhNotification;\r\n\r\nBhNotification.propTypes = {\r\n  config: PropTypes.object,\r\n  data: PropTypes.object,\r\n  markNotificationRead: PropTypes.func,\r\n  handleCustomEvent: PropTypes.func,\r\n}\r\n"],"sourceRoot":""}