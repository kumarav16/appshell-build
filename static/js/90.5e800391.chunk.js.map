{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/set.js","../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/vaadin-grid.styles-556b22c5.js","../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/bh-tree.entry.js","../node_modules/@baker-hughes-central-design/ui-toolkit/dist/esm/iron-scroll-target-behavior-5bd912f7.js"],"names":["target","property","value","receiver","Reflect","set","desc","base","superPropBase","Object","getOwnPropertyDescriptor","call","writable","defineProperty","_set","isStrict","TypeError","registerStyles","css","moduleId","CheckboxElement","this","checked","_storedName","name","setAttribute","_nativeCheckbox","shadowRoot","querySelector","addEventListener","_handleClick","bind","_addActiveListeners","attrName","getAttribute","_updateLabelAttribute","label","assignedNodes","firstElementChild","_isAssignedNodesEmpty","removeAttribute","nodes","length","nodeType","Node","TEXT_NODE","textContent","trim","indeterminate","Boolean","_addEventListenerToNode","e","__interactionsAllowed","keyCode","preventDefault","_toggleChecked","disabled","localName","composedPath","dispatchEvent","CustomEvent","composed","bubbles","html","type","notify","observer","reflectToAttribute","String","ElementMixin","ControlStateMixin","ThemableMixin","GestureEventListeners","PolymerElement","customElements","define","is","IOS","navigator","userAgent","match","IOS_TOUCH_SCROLLING","PolymerIronList","Class","behaviors","IronResizableBehavior","IronScrollTargetBehavior","_ratio","_scrollerPaddingTop","_scrollPosition","_physicalSize","_physicalAverage","_physicalAverageCount","_physicalTop","_virtualCount","_estScrollHeight","_scrollHeight","_viewportHeight","_viewportWidth","_physicalItems","_physicalSizes","_firstVisibleIndexVal","_lastVisibleIndexVal","_maxPages","_focusedVirtualIndex","_templateCost","_physicalBottom","_scrollBottom","_virtualEnd","_virtualStart","_physicalCount","_hiddenContentSize","_maxScrollTop","_scrollOffset","_maxVirtualStart","Math","max","val","_clamp","_virtualStartVal","_physicalStart","_physicalStartVal","_physicalEnd","_physicalCountVal","_optPhysicalSize","Infinity","_isVisible","offsetWidth","offsetHeight","firstVisibleIndex","idx","physicalOffset","_iterateItems","pidx","vidx","lastVisibleIndex","attached","_debounce","_render","animationFrame","listen","detached","unlisten","updateViewportBoundaries","styles","window","getComputedStyle","scrollTarget","parseInt","_isRTL","direction","$","items","_scrollTargetHeight","_scrollHandler","scrollTop","min","_scrollTop","delta","isScrollingDown","abs","idxAdjustment","round","floor","_update","_getReusables","physicalTop","indexes","_increasePoolIfNeeded","microTask","fromTop","ith","offsetContent","physicalItemHeight","idxs","protectedOffsetContent","virtualStart","virtualEnd","physicalCount","top","bottom","scrollBottom","push","itemSet","movingUp","_assignModels","_updateMetrics","pop","_positionItems","_updateScrollerSize","_isClientFull","count","nextIncrease","ts","performance","now","apply","_createPool","i","_isIndexRendered","_getPhysicalIndex","idlePeriod","isAttached","_itemsChanged","change","path","_physicalIndexForKey","_resetScrollPosition","fn","rtn","arguments","_computeVidx","flush","newPhysicalSize","oldPhysicalSize","prevAvgCount","prevPhysicalAvg","_adjustScrollPosition","y","translate3d","deltaHeight","pos","forceUpdate","style","height","scrollToIndex","currentTopItem","currentVirtualItem","targetOffsetTop","hiddenContentSize","_resetAverage","_resizeHandler","toggleScrollListener","v","cb","asyncModule","_debouncers","Debouncer","debounce","enqueueDebouncer","ScrollerElement","index","_warnPrivateAPIAccess","_scrollingToIndex","_effectiveSize","table","scrollHeight","_accessIronListAPI","_adjustVirtualIndexOffset","_vidxOffset","row","Array","from","children","filter","child","headerOffset","getBoundingClientRect","header","size","fvi","fviOffset","_firstVisibleIndex","isArray","_scrollToIndex","_focusedItemIndex","_itemsFocusable","contains","activeElement","cellIndex","parentElement","indexOf","focus","requestAnimationFrame","__updateFooterPositioning","rePosition","isNaN","transform","_canPopulate","_initialPoolCreated","_debounceIncreasePool","remainingPhysicalSize","estimatedMissingRowCount","ceil","__reorderChildNodes","childNodes","reduce","inOrder","current","currentIndex","array","sort","row1","row2","forEach","appendChild","fragment","document","createDocumentFragment","physicalItems","_createScrollerRows","inst","_getRowTarget","content","slot","afterNextRender","notifyResize","el","_toggleAttribute","_updateScrollerItem","oldOffset","_afterScroll","_noScale","scale","offset","maxOffset","_warnPrivateAPIAccessAsyncEnabled","returnValue","_debouncerWarnPrivateAPIAccess","apiName","console","warn","Number","isFocusable","parentNode","isFocusableElement","querySelectorAll","element","ItemCache","grid","parentCache","parentItem","itemCaches","effectiveSize","pendingRequests","keys","isLoading","getCacheAndIndex","cache","scaledIndex","_isExpanded","prev","curr","subCache","updateSize","_loadPage","thisLevelIndex","expandedIndex","GridTemplatizer","_instanceProps","detailsOpened","item","selected","expanded","level","_ensureTemplatized","instance","_TemplateClass","addInstance","_templateInstances","notifyPath","splice","templatize","template","instanceProps","parentModel","forwardHostProp","prop","_forwardParentProp","notifyInstanceProp","originalProp","_grid","_itemsEqual","_item","cell","_instance","itemPrefix","itemsIndex","slice","gridCallback","_parentPathValues","t","addedCount","keyName","dataHost","timeouts","DropMode","DropLocation","GridColumnElement","width","flexGrow","renderer","Function","autoWidth","_bodyTemplate","_cells","_templateObserver","FlattenedNodesObserver","_headerTemplate","_prepareHeaderTemplate","_footerTemplate","_prepareFooterTemplate","_prepareBodyTemplate","templatizer","callback","_allCells","_content","_findHostGrid","removeChild","_gridValue","undefined","test","assignedSlot","concat","_emptyCells","_headerCell","_footerCell","_prepareTemplatizer","_findTemplate","headerRenderer","__runRenderer","footerRenderer","model","args","cells","hidden","Error","__getRowModel","_renderer","_template","innerHTML","createInstance","root","setProperties","__setColumnTemplateOrRenderer","headerTemplate","headerCell","footerTemplate","footerCell","__updateHeaderFooterRowVisibility","footer","getFlattenedNodes","node","classList","_selectFirstTemplate","_rootDataHost","_columnPropChanged","order","__forceReflow","frozen","_frozenCellsChanged","lastFrozen","_lastFrozen","bodyTemplate","hasHeaderText","__setTextContent","owner","get","_generateHeader","substr","lastIndexOf","replace","toLowerCase","toUpperCase","bool","hasAttribute","reorderStatus","resizable","existingHandle","handle","createElement","textAlign","textAlignFallback","_previousHidden","_debouncerHiddenChanged","_renderColumnTree","_columnTree","_updateLastFrozen","_resetKeyboardNavigation","parent","_order","_reorderStatus","DirMixin","TOUCH_DEVICE","createEvent","GridElement","_onAnimationEnd","recalculateColumnWidths","oldValue","newValue","__isRTL","_updateScrollerMeasurements","clientHeight","_recalculateColumnWidthOnceLoadingFinished","_cache","__hasRowsWithClientHeight","cols","col","_origFlexGrow","_currentWidth","c","cellWidth","_getColumns","_recalculateColumnWidths","rows","_updateRow","isConnected","beforeNextRender","_updateFirstAndLastColumn","tagName","slotName","_contentIndex","cellContent","id","chrome","mouseUpListener","getRootNode","removeEventListener","setTimeout","columns","section","isColumnRow","noNotify","contentsFragment","_vacant","column","_createCell","_rowDetailsTemplate","rowDetailsRenderer","_detailsCells","detailsCell","_configureDetailsCell","_a11ySetRowDetailsCell","_column","_updateFirstAndLastColumnForRow","visibleRowCells","_preventScrollerRotatingCellFocus","_a11yUpdateRowRowindex","_getItem","columnTree","headerRow","footerRow","sizer","_a11yUpdateHeaderRows","_a11yUpdateFooterRows","_firefox","paddingBottom","heightByRows","_ios","CSS","supports","minHeight","maxHeight","scroller","_a11yUpdateRowSelected","_a11yUpdateRowLevel","_isDetailsOpened","_toggleDetailsCell","_generateCellClassNames","_filterDragAndDrop","__detailsOpened__","__selected__","__level__","__expanded__","_debouncerUpdateHeights","timeOut","after","_updateDetailsCellHeights","animationName","stopPropagation","__itemsReceived","__scrollToPendingIndex","webkitOverflowScrolling","_getIndexLevel","_isSelected","_renderHeaderAndFooter","_debouncerForceReflow","overflow","_safari","MSStream","platform","maxTouchPoints","_android","_touchDevice","superClass","_updateItem","ensureSubCacheForScaledIndex","_getPageForIndex","expandItem","collapseItem","itemIdPath","__expandedKeys","has","getItemId","__cacheExpandedKeys","expandedItems","Set","add","_getItemIndexInArray","_hasData","page","dataProvider","_setLoading","params","pageSize","sortOrders","_mapSorters","filters","_mapFilters","currentItems","map","itemIndex","_debouncerApplyCachedData","getItemForIndex","_setPendingProperty","oldPageSize","clearCache","oldDataProvider","_ensureFirstPageLoaded","_debouncerCheckSize","_checkSize","item1","item2","result","__pendingScrollToIndex","loading","readOnly","DataProviderMixin","splices","_arrayDataProvider","opts","_filters","_checkPaths","_filter","_sorters","_multiSort","start","end","arrayToCheck","action","parentProperty","Base","a","b","_compare","p","n","toString","_normalizeEmptyValue","filterValueLowercase","ArrayDataProviderMixin","_addNodeObserver","_isColumnElement","_getChildColumns","_hasColumnGroups","_flattenColumnGroups","_getColumnTree","_arrayEquals","_observer","info","rowDetailsTemplate","addedNodes","hasColumnElements","nodeCollection","removedNodes","allRemovedCells","flatMap","filterNotConnected","__removeSorters","__removeFilters","_updateColumnTree","_debouncerCheckImports","_checkImports","arr1","arr2","l","elementName","ELEMENT_NODE","DynamicColumnsMixin","_onClick","_activateItem","detail","clickedItem","activeItem","defaultPrevented","_isFocusable","ActiveItemMixin","_scrollLineHeight","_getScrollLineHeight","fontSize","display","body","_scrollPageHeight","outerscroller","_onWheel","_rowWithFocusedElement","__mouseDown","__pendingReorder","_reorderRows","ctrlKey","_hasScrolledAncestor","deltaX","deltaY","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","_wheelAnimationFrame","_deltaYAcc","_debouncerWheelAnimationFrame","momentum","_canScroll","scrollLeft","_hasResidualMomentum","_ignoreNewWheel","_debouncerIgnoreNewWheel","_previousMomentum","scrollWidth","_scrollingFrame","_debounceScrolling","cancelAnimationFrame","_translateStationaryElements","_scheduleScrolling","_updateOverflow","clientWidth","_debounceOverflow","adjustedVirtualStart","targetRow","targetPhysicalIndex","insertBefore","_debouncerCacheElements","_frozenCells","prototype","__scrollerMetrics","columnsRow","_scrollLeft","leftOffset","topOffset","footerOffset","_useSticky","offsetTop","_getTranslate","x","__getNormalizedScrollLeft","frozenCellTransform","Element","ScrollMixin","selectedItems","selectItem","deselectItem","SelectionMixin","_onSorterChanged","sorter","__updateSorter","__applySorters","sortersToRemove","multiSort","__updateSortOrders","_removeArrayItem","unshift","otherSorters","s","JSON","stringify","_previousSorters","_a11yUpdateSorters","SortMixin","_a11yUpdateRowDetailsOpened","detailsOpenedItems","changeRecord","detailsHidden","hiddenChanged","removeProperty","setProperty","openItemDetails","closeItemDetails","RowDetailsMixin","_onKeyDown","_onKeyUp","_onFocusIn","_onFocusOut","_onCellFocusIn","_onCellFocusOut","_isMousedown","focusable","oldFocusable","keyGroup","key","_detectInteracting","indexOfChildElement","visibleItemsCount","_lastVisibleIndex","dx","dy","activeCell","columnIndex","isRowDetails","_elementMatches","activeRow","activeRowGroup","maxRowIndex","rowIndex","dstRowIndex","dstIsRowDetails","dstItem","_focusedColumnOrder","dstColumns","dstSortedColumnOrders","maxOrderedColumnIndex","orderedColumnIndex","dstOrderedColumnIndex","_ensureScrolledToIndex","dstColumnIndex","acc","dstRow","dstCell","_scrollHorizontallyToCell","dstRect","footerTop","headerBottom","tableIndex","rowGroup","wantInteracting","localTarget","localTargetIsTextInput","_parseEventPath","focusTarget","srcElement","step","tabOrder","_headerFocusable","_footerFocusable","focusexit","_predictFocusStepTarget","shiftKey","itemsFocusTarget","focusedItemRow","wasNavigating","click","rootTarget","_activeRowGroup","_detectFocusedItemIndex","some","_navigatingIsHidden","columnTreeLevel","firstVisibleIndexRow","dstCellRect","dstCellIndex","tableRect","leftBoundary","left","rightBoundary","right","query","matches","KeyboardNavigationMixin","bodyColumns","_a11yGetHeaderRowCount","_a11yGetFooterRowCount","colspan","asc","A11yMixin","_filterChanged","__addFilter","__applyFilters","filtersToRemove","FilterMixin","addListener","_onTrackEvent","_reorderGhost","_onTouchStart","_onTouchMove","_onTouchEnd","_onContextMenu","_startTouchReorderTimeout","_onTrackStart","touches","clientX","clientY","_draggedColumn","clearTimeout","_onTrackEnd","state","_onTrack","columnReorderingAllowed","_cellFromPoint","childElementCount","_setSiblingsReorderStatus","_updateGhost","visibility","_updateGhostPosition","_autoScroller","targetCell","targetColumn","_getTargetColumn","_isSwapAllowed","_isSwappableByPosition","_swapColumnOrders","_lastDragClientX","_getColumnsInOrder","elementFromPoint","eventClientX","eventClientY","ghostRect","targetLeft","targetTop","_left","_top","ghost","innerText","propertyName","_orderBaseScope","status","sibling","rightDiff","leftDiff","async","column1","column2","differentColumns","sameParent","sameFrozen","sourceCellRect","targetRect","draggedColumn","candidate","ColumnReorderingMixin","_onHeaderTrack","_childColumns","columnRowCells","minWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","marginLeft","marginRight","maxWidth","resizedColumn","ColumnResizingMixin","event","context","assign","EventContextMixin","_onDragStart","_onDragEnd","_onDragOver","_onDragLeave","_onDrop","dropMode","rowsDraggable","exec","rowRect","dataTransfer","setDragImage","__getViewportRows","dragFilter","setData","__formatDefaultTransferData","updateStyles","draggedItems","setDragData","data","setDraggedItemsCount","originalEvent","_clearDragStyles","_dropLocation","_dragOverItem","__dndAutoScroll","dropAbove","__dndAutoScrolling","topDiff","__dndAutoScrollThreshold","bottomDiff","scrollTopDelta","dragData","types","getData","cancelable","dropTargetItem","dropLocation","join","filterDragAndDrop","dragDisabled","dropDisabled","dropFilter","DragAndDropMixin","generateCellClassNames","__generatedClasses","className","remove","cellClassNameGenerator","split","StylingMixin","CreateDomModules","options","DomModule","DomModuleCheckbox","$_documentContainer","head","GridTreeToggleElement","leaf","GridTreeColumnElement","itemHasChildrenPath","BhTree","hostRef","registerInstance","bhEventSelected","parseData","_payload","payload","parse","flattenedArray","flattenNestedData","_option","option","flatArray","payloadData","flattenObject","uid","parentuid","newItemToReturn","curItemId","link","hasChildren","topLevelItemId","datum","getElementById","DomModuleTreeCol","m","CreateDomModules$1","el__grid","_a","_b","_c","_d","topLevel","childItems","childItem","h","Host","class","ref","el__container","gridtype","theme","spacing","onClick","getEventContext","emit","properties","HTMLElement","_defaultScrollTarget","observers","_shouldHaveListener","_scrollTargetChanged","_oldScrollTarget","_toggleScrollListener","_doc","domHost","dom","ownerDocument","_isValidScrollTarget","documentElement","pageYOffset","pageXOffset","scrollTo","scroll","leftOrOptions","_scrollTargetWidth","innerWidth","innerHeight","yes","eventTarget","_boundScrollHandler"],"mappings":"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","file":"static/js/90.5e800391.chunk.js","sourcesContent":["import superPropBase from \"./superPropBase.js\";\nimport defineProperty from \"./defineProperty.js\";\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = superPropBase(target, property);\n      var desc;\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        defineProperty(receiver, property, value);\n      }\n      return true;\n    };\n  }\n  return set(target, property, value, receiver);\n}\nexport default function _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n  if (!s && isStrict) {\n    throw new TypeError('failed to set property');\n  }\n  return value;\n}","import { r as registerStyles, c as css, E as ElementMixin, C as ControlStateMixin, T as ThemableMixin, G as GestureEventListeners, P as PolymerElement, h as html, d as Class, I as IronResizableBehavior, e as animationFrame, m as microTask, i as idlePeriod, f as flush, D as Debouncer, g as enqueueDebouncer, j as afterNextRender, B as Base, b as addListener, t as timeOut, F as FlattenedNodesObserver, k as templatize, l as DirMixin, n as beforeNextRender } from './iron-resizable-behavior-b5089143.js';\nimport { I as IronScrollTargetBehavior } from './iron-scroll-target-behavior-5bd912f7.js';\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host {\n      -webkit-tap-highlight-color: transparent;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      cursor: default;\n      outline: none;\n    }\n\n    [part='label']:not([empty]) {\n      margin: 0.1875em 0.875em 0.1875em 0.375em;\n    }\n\n    [part='checkbox'] {\n      width: calc(1em + 2px);\n      height: calc(1em + 2px);\n      margin: 0.1875em;\n      position: relative;\n      border-radius: var(--lumo-border-radius-s);\n      background-color: var(--lumo-contrast-20pct);\n      transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), background-color 0.15s;\n      pointer-events: none;\n      line-height: 1.2;\n    }\n\n    :host([indeterminate]) [part='checkbox'],\n    :host([checked]) [part='checkbox'] {\n      background-color: var(--lumo-primary-color);\n    }\n\n    /* Needed to align the checkbox nicely on the baseline */\n    [part='checkbox']::before {\n      content: '\\\\2003';\n    }\n\n    /* Checkmark */\n    [part='checkbox']::after {\n      content: '';\n      display: inline-block;\n      width: 0;\n      height: 0;\n      border: 0 solid var(--lumo-primary-contrast-color);\n      border-width: 0.1875em 0 0 0.1875em;\n      box-sizing: border-box;\n      transform-origin: 0 0;\n      position: absolute;\n      top: 0.8125em;\n      left: 0.5em;\n      transform: scale(0.55) rotate(-135deg);\n      opacity: 0;\n    }\n\n    :host([checked]) [part='checkbox']::after {\n      opacity: 1;\n      width: 0.625em;\n      height: 1.0625em;\n    }\n\n    /* Indeterminate checkmark */\n    :host([indeterminate]) [part='checkbox']::after {\n      transform: none;\n      opacity: 1;\n      top: 45%;\n      height: 10%;\n      left: 22%;\n      right: 22%;\n      width: auto;\n      border: 0;\n      background-color: var(--lumo-primary-contrast-color);\n      transition: opacity 0.25s;\n    }\n\n    /* Focus ring */\n    :host([focus-ring]) [part='checkbox'] {\n      box-shadow: 0 0 0 3px var(--lumo-primary-color-50pct);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--lumo-disabled-text-color);\n    }\n\n    :host([disabled]) [part='label'] ::slotted(*) {\n      color: inherit;\n    }\n\n    :host([disabled]) [part='checkbox'] {\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    :host([disabled]) [part='checkbox']::after {\n      border-color: var(--lumo-contrast-30pct);\n    }\n\n    :host([indeterminate][disabled]) [part='checkbox']::after {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl']) [part='label']:not([empty]) {\n      margin: 0.1875em 0.375em 0.1875em 0.875em;\n    }\n\n    /* Transition the checkmark if activated with the mouse (disabled for grid select-all this way) */\n    :host(:hover) [part='checkbox']::after {\n      transition: width 0.1s, height 0.25s;\n    }\n\n    /* Used for activation \"halo\" */\n    [part='checkbox']::before {\n      color: transparent;\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n      border-radius: inherit;\n      background-color: inherit;\n      transform: scale(1.4);\n      opacity: 0;\n      transition: transform 0.1s, opacity 0.8s;\n    }\n\n    /* Hover */\n    :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* Disable hover for touch devices */\n    @media (pointer: coarse) {\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n    }\n\n    /* Active */\n    :host([active]) [part='checkbox'] {\n      transform: scale(0.9);\n      transition-duration: 0.05s;\n    }\n\n    :host([active][checked]) [part='checkbox'] {\n      transform: scale(1.1);\n    }\n\n    :host([active]:not([checked])) [part='checkbox']::before {\n      transition-duration: 0.01s, 0.01s;\n      transform: scale(0);\n      opacity: 0.4;\n    }\n  `,\n  { moduleId: 'lumo-checkbox' }\n);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * `<vaadin-checkbox>` is a Web Component for customized checkboxes.\n *\n * ```html\n * <vaadin-checkbox>\n *   Make my profile visible\n * </vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|----------------\n * `checkbox`        | The wrapper element for the native <input type=\"checkbox\">\n * `label`           | The wrapper element in which the component's children, namely the label, is slotted\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|--------------\n * `active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`   | Set when the checkbox is disabled. | `:host`\n * `focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`    | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n * `checked` | Set when the checkbox is checked. | `:host`\n * `empty` | Set when there is no label provided. | `label`\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\n * @fires {CustomEvent} indeterminate-changed - Fired when the `indeterminate` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ControlStateMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n */\nclass CheckboxElement extends ElementMixin(ControlStateMixin(ThemableMixin(GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        label {\n          display: inline-flex;\n          align-items: baseline;\n          outline: none;\n        }\n\n        [part='checkbox'] {\n          position: relative;\n          display: inline-block;\n          flex: none;\n        }\n\n        input[type='checkbox'] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          width: 100%;\n          height: 100%;\n          opacity: 0;\n          cursor: inherit;\n          margin: 0;\n        }\n\n        :host([disabled]) {\n          -webkit-tap-highlight-color: transparent;\n        }\n      </style>\n\n      <label>\n        <span part=\"checkbox\">\n          <input\n            type=\"checkbox\"\n            checked=\"{{checked::change}}\"\n            disabled$=\"[[disabled]]\"\n            indeterminate=\"{{indeterminate::change}}\"\n            role=\"presentation\"\n            tabindex=\"-1\"\n          />\n        </span>\n\n        <span part=\"label\">\n          <slot></slot>\n        </span>\n      </label>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get version() {\n    return '3.0.0';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is checked.\n       * @type {boolean}\n       */\n      checked: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        observer: '_checkedChanged',\n        reflectToAttribute: true\n      },\n\n      /**\n       * Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        observer: '_indeterminateChanged',\n        reflectToAttribute: true,\n        value: false\n      },\n\n      /**\n       * The value given to the data submitted with the checkbox's name to the server when the control is inside a form.\n       */\n      value: {\n        type: String,\n        value: 'on'\n      },\n\n      /** @private */\n      _nativeCheckbox: {\n        type: Object\n      }\n    };\n  }\n\n  constructor() {\n    super();\n  }\n\n  get name() {\n    return this.checked ? this._storedName : '';\n  }\n\n  set name(name) {\n    this._storedName = name;\n  }\n\n  ready() {\n    super.ready();\n\n    this.setAttribute('role', 'checkbox');\n\n    this._nativeCheckbox = this.shadowRoot.querySelector('input[type=\"checkbox\"]');\n\n    this.addEventListener('click', this._handleClick.bind(this));\n\n    this._addActiveListeners();\n\n    const attrName = this.getAttribute('name');\n    if (attrName) {\n      this.name = attrName;\n    }\n\n    this.shadowRoot\n      .querySelector('[part~=\"label\"]')\n      .querySelector('slot')\n      .addEventListener('slotchange', this._updateLabelAttribute.bind(this));\n\n    this._updateLabelAttribute();\n  }\n\n  /** @private */\n  _updateLabelAttribute() {\n    const label = this.shadowRoot.querySelector('[part~=\"label\"]');\n    const assignedNodes = label.firstElementChild.assignedNodes();\n    if (this._isAssignedNodesEmpty(assignedNodes)) {\n      label.setAttribute('empty', '');\n    } else {\n      label.removeAttribute('empty');\n    }\n  }\n\n  /** @private */\n  _isAssignedNodesEmpty(nodes) {\n    // The assigned nodes considered to be empty if there is no slotted content or only one empty text node\n    return (\n      nodes.length === 0 ||\n      (nodes.length == 1 && nodes[0].nodeType == Node.TEXT_NODE && nodes[0].textContent.trim() === '')\n    );\n  }\n\n  /** @private */\n  _checkedChanged(checked) {\n    if (this.indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', Boolean(checked));\n    }\n  }\n\n  /** @private */\n  _indeterminateChanged(indeterminate) {\n    if (indeterminate) {\n      this.setAttribute('aria-checked', 'mixed');\n    } else {\n      this.setAttribute('aria-checked', this.checked);\n    }\n  }\n\n  /** @private */\n  _addActiveListeners() {\n    // DOWN\n    this._addEventListenerToNode(this, 'down', (e) => {\n      if (this.__interactionsAllowed(e)) {\n        this.setAttribute('active', '');\n      }\n    });\n\n    // UP\n    this._addEventListenerToNode(this, 'up', () => this.removeAttribute('active'));\n\n    // KEYDOWN\n    this.addEventListener('keydown', (e) => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this.setAttribute('active', '');\n      }\n    });\n\n    // KEYUP\n    this.addEventListener('keyup', (e) => {\n      if (this.__interactionsAllowed(e) && e.keyCode === 32) {\n        e.preventDefault();\n        this._toggleChecked();\n        this.removeAttribute('active');\n\n        if (this.indeterminate) {\n          this.indeterminate = false;\n        }\n      }\n    });\n  }\n\n  /**\n   * @return {!HTMLInputElement}\n   * @protected\n   */\n  get focusElement() {\n    return this.shadowRoot.querySelector('input');\n  }\n\n  /**\n   * True if users' interactions (mouse or keyboard)\n   * should toggle the checkbox\n   */\n  __interactionsAllowed(e) {\n    if (this.disabled) {\n      return false;\n    }\n\n    // https://github.com/vaadin/vaadin-checkbox/issues/63\n    if (e.target.localName === 'a') {\n      return false;\n    }\n\n    return true;\n  }\n\n  /** @private */\n  _handleClick(e) {\n    if (this.__interactionsAllowed(e)) {\n      if (!this.indeterminate) {\n        if (e.composedPath()[0] !== this._nativeCheckbox) {\n          e.preventDefault();\n          this._toggleChecked();\n        }\n      } else {\n        /*\n         * Required for IE 11 and Edge.\n         * See issue here: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7344418/\n         */\n        this.indeterminate = false;\n        e.preventDefault();\n        this._toggleChecked();\n      }\n    }\n  }\n\n  /** @protected */\n  _toggleChecked() {\n    this.checked = !this.checked;\n    this.dispatchEvent(new CustomEvent('change', { composed: false, bubbles: true }));\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(CheckboxElement.is, CheckboxElement);\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    :host {\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-s);\n      color: var(--lumo-body-text-color);\n      background-color: var(--lumo-base-color);\n      box-sizing: border-box;\n      -webkit-text-size-adjust: 100%;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      /* For internal use only */\n      --_lumo-grid-border-color: var(--lumo-contrast-20pct);\n      --_lumo-grid-secondary-border-color: var(--lumo-contrast-10pct);\n      --_lumo-grid-border-width: 1px;\n      --_lumo-grid-selected-row-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* No (outer) border */\n\n    :host(:not([theme~='no-border'])) {\n      border: var(--_lumo-grid-border-width) solid var(--_lumo-grid-border-color);\n    }\n\n    /* Cell styles */\n\n    [part~='cell'] {\n      min-height: var(--lumo-size-m);\n      background-color: var(--lumo-base-color);\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      cursor: default;\n      padding: var(--lumo-space-xs) var(--lumo-space-m);\n    }\n\n    /* Apply row borders by default and introduce the \"no-row-borders\" variant */\n    :host(:not([theme~='no-row-borders'])) [part~='cell']:not([part~='details-cell']) {\n      border-top: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Hide first body row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      border-top: 0;\n      min-height: calc(var(--lumo-size-m) - var(--_lumo-grid-border-width));\n    }\n\n    /* Focus-ring */\n\n    [part~='cell']:focus {\n      outline: none;\n    }\n\n    :host([navigating]) [part~='cell']:focus::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    /* Drag and Drop styles */\n    :host([dragover])::after {\n      content: '';\n      position: absolute;\n      z-index: 100;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    [part~='row'][dragover] {\n      z-index: 100 !important;\n    }\n\n    [part~='row'][dragover] [part~='cell'] {\n      overflow: visible;\n    }\n\n    [part~='row'][dragover] [part~='cell']::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      height: calc(var(--_lumo-grid-border-width) + 2px);\n      pointer-events: none;\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    :host([theme~='no-row-borders']) [dragover] [part~='cell']::after {\n      height: 2px;\n    }\n\n    [part~='row'][dragover='below'] [part~='cell']::after {\n      top: 100%;\n      bottom: auto;\n      margin-top: -1px;\n    }\n\n    [part~='row'][dragover='above'] [part~='cell']::after {\n      top: auto;\n      bottom: 100%;\n      margin-bottom: -1px;\n    }\n\n    [part~='row'][details-opened][dragover='below'] [part~='cell']:not([part~='details-cell'])::after,\n    [part~='row'][details-opened][dragover='above'] [part~='details-cell']::after {\n      display: none;\n    }\n\n    [part~='row'][dragover][dragover='on-top'] [part~='cell']::after {\n      height: 100%;\n    }\n\n    [part~='row'][dragstart] {\n      /* Add bottom-space to the row so the drag number doesn't get clipped. Needed for IE/Edge */\n      border-bottom: 100px solid transparent;\n      z-index: 100 !important;\n      opacity: 0.9;\n    }\n\n    [part~='row'][dragstart] [part~='cell'] {\n      border: none !important;\n      box-shadow: none !important;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    [ios] [part~='row'][dragstart] [part~='cell'] {\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    #scroller:not([ios]) [part~='row'][dragstart]:not([dragstart=''])::after {\n      display: block;\n      position: absolute;\n      left: var(--_grid-drag-start-x);\n      top: var(--_grid-drag-start-y);\n      z-index: 100;\n      content: attr(dragstart);\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding: calc(var(--lumo-space-xs) * 0.8);\n      color: var(--lumo-error-contrast-color);\n      background-color: var(--lumo-error-color);\n      border-radius: var(--lumo-border-radius-m);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n      font-weight: 500;\n      text-transform: initial;\n      letter-spacing: initial;\n      min-width: calc(var(--lumo-size-s) * 0.7);\n      text-align: center;\n    }\n\n    /* Headers and footers */\n\n    [part~='header-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='reorder-ghost'] {\n      font-size: var(--lumo-font-size-s);\n      font-weight: 500;\n    }\n\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content) {\n      font-weight: 400;\n    }\n\n    [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-xl);\n    }\n\n    /* Header borders */\n\n    /* Hide first header row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='header-cell'] {\n      border-top: 0;\n    }\n\n    [part='row']:last-child [part~='header-cell'] {\n      border-bottom: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='top']) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Footer borders */\n\n    [part='row']:first-child [part~='footer-cell'] {\n      border-top: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='bottom']) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Column reordering */\n\n    :host([reordering]) [part~='cell'] {\n      background: linear-gradient(var(--lumo-shade-20pct), var(--lumo-shade-20pct)) var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='allowed'] {\n      background: var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='dragging'] {\n      background: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct)) var(--lumo-base-color);\n    }\n\n    [part~='reorder-ghost'] {\n      opacity: 0.85;\n      box-shadow: var(--lumo-box-shadow-s);\n      /* TODO Use the same styles as for the cell element (reorder-ghost copies styles from the cell element) */\n      padding: var(--lumo-space-s) var(--lumo-space-m) !important;\n    }\n\n    /* Column resizing */\n\n    [part='resize-handle'] {\n      width: 3px;\n      background-color: var(--lumo-primary-color-50pct);\n      opacity: 0;\n      transition: opacity 0.2s;\n    }\n\n    :host(:not([reordering])) *:not([column-resizing]) [part~='cell']:hover [part='resize-handle'],\n    [part='resize-handle']:active {\n      opacity: 1;\n      transition-delay: 0.15s;\n    }\n\n    /* Column borders */\n\n    :host([theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Frozen columns */\n\n    [last-frozen] {\n      border-right: var(--_lumo-grid-border-width) solid transparent;\n      overflow: hidden;\n    }\n\n    :host([overflow~='left']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-right-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Row stripes */\n\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='body-cell'],\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='details-cell'] {\n      background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n      background-repeat: repeat-x;\n    }\n\n    /* Selected row */\n\n    /* Raise the selected rows above unselected rows (so that box-shadow can cover unselected rows) */\n    :host(:not([reordering])) [part~='row'][selected] {\n      z-index: 1;\n    }\n\n    :host(:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\n      background-image: linear-gradient(var(--_lumo-grid-selected-row-color), var(--_lumo-grid-selected-row-color));\n      background-repeat: repeat;\n    }\n\n    /* Cover the border of an unselected row */\n    :host(:not([theme~='no-row-borders'])) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\n      box-shadow: 0 var(--_lumo-grid-border-width) 0 0 var(--_lumo-grid-selected-row-color);\n    }\n\n    /* Compact */\n\n    :host([theme~='compact']) [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-m);\n    }\n\n    :host([theme~='compact']) [part~='cell'] {\n      min-height: var(--lumo-size-s);\n    }\n\n    :host([theme~='compact']) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      min-height: calc(var(--lumo-size-s) - var(--_lumo-grid-border-width));\n    }\n\n    :host([theme~='compact']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      padding: var(--lumo-space-xs) var(--lumo-space-s);\n    }\n\n    /* Wrap cell contents */\n\n    :host([theme~='wrap-cell-content']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      white-space: normal;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    :host([dir='rtl'][theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    :host([dir='rtl']) [last-frozen] {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host([dir='rtl'][overflow~='right']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-left-color: var(--_lumo-grid-border-color);\n    }\n  `,\n  { moduleId: 'lumo-grid' }\n);\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host(.vaadin-grid-select-all-checkbox) {\n      font-size: var(--lumo-font-size-m);\n    }\n  `,\n  { moduleId: 'vaadin-grid-select-all-checkbox-lumo' }\n);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * @private\n */\nconst PolymerIronList = Class({\n  behaviors: [IronResizableBehavior, IronScrollTargetBehavior],\n\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is the same as `scrollTop`.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!TemplateInstanceBase>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The virtual index of the focused item.\n   */\n  _focusedVirtualIndex: -1,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    return Math.max(0, this._virtualCount - this._physicalCount);\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val = val % this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx =\n        this._iterateItems(function (pidx, vidx) {\n          physicalOffset += this._physicalSizes[pidx];\n\n          if (physicalOffset > this._scrollPosition) {\n            return vidx;\n          }\n        }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems(function (pidx, vidx) {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._physicalSizes[pidx];\n      });\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop;\n  },\n\n  attached: function () {\n    this._debounce('_render', this._render, animationFrame);\n    // `iron-resize` is fired when the list is attached if the event is added\n    // before attached causing unnecessary work.\n    this.listen(this, 'iron-resize', '_resizeHandler');\n  },\n\n  detached: function () {\n    this.unlisten(this, 'iron-resize', '_resizeHandler');\n  },\n\n  /**\n   * Invoke this method if you dynamically update the viewport's\n   * size or CSS padding.\n   *\n   * @method updateViewportBoundaries\n   */\n  updateViewportBoundaries: function () {\n    const styles = window.getComputedStyle(this);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.$.items.offsetWidth;\n    this._viewportHeight = this._scrollTargetHeight;\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function () {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta = delta - this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart = this._virtualStart + idxAdjustment;\n      this._physicalStart = this._physicalStart + idxAdjustment;\n      // Estimate new physical offset.\n      this._physicalTop = Math.floor(this._virtualStart) * this._physicalAverage;\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const { physicalTop, indexes } = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = physicalTop;\n        this._virtualStart = this._virtualStart + indexes.length;\n        this._physicalStart = this._physicalStart + indexes.length;\n      } else {\n        this._virtualStart = this._virtualStart - indexes.length;\n        this._physicalStart = this._physicalStart - indexes.length;\n      }\n      this._update(indexes, isScrollingDown ? null : indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function (fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    const scrollTop = this._scrollTop;\n    const scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._physicalSizes[ith];\n      offsetContent = offsetContent - physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top = top + physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top = top - physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return { indexes: idxs, physicalTop: top - this._scrollOffset };\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function (itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._physicalSizes[idx];\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull: function () {\n    return (\n      this._scrollBottom != 0 &&\n      this._physicalBottom - 1 >= this._scrollBottom &&\n      this._physicalTop <= this._scrollPosition\n    );\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function (count) {\n    const nextPhysicalCount = this._clamp(\n      this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT,\n      this._virtualCount - this._virtualStart\n    );\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount = this._physicalCount + delta;\n      // Update the physical start if it needs to preserve the model of the focused item.\n      // In this situation, the focused item is currently rendered and its model would\n      // have changed after increasing the pool if the physical start remained unchanged.\n      if (\n        this._physicalStart > this._physicalEnd &&\n        this._isIndexRendered(this._focusedVirtualIndex) &&\n        this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd\n      ) {\n        this._physicalStart = this._physicalStart + delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) ; else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)),\n        idlePeriod\n      );\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function () {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const { physicalTop, indexes } = this._getReusables(true);\n      this._physicalTop = physicalTop;\n      this._virtualStart = this._virtualStart + indexes.length;\n      this._physicalStart = this._physicalStart + indexes.length;\n      this._update(indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function (change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, animationFrame);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function (fn, itemSet) {\n    let pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function (pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function (itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    this._iterateItems(function (pidx) {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        (prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount\n      );\n    }\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function () {\n    this._adjustScrollPosition();\n\n    let y = this._physicalTop;\n\n    this._iterateItems(function (pidx) {\n      this.translate3d(0, y + 'px', 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function () {\n    const deltaHeight =\n      this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop = this._physicalTop - deltaHeight;\n      const scrollTop = this._scrollTop;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function (pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function (forceUpdate) {\n    this._estScrollHeight =\n      this._physicalBottom +\n      Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function (idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart) * this._physicalAverage;\n\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop = targetOffsetTop + this._physicalSizes[currentTopItem];\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem++;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function () {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function () {\n    this._debounce(\n      '_render',\n      function () {\n        // clear cached visible index.\n        this._firstVisibleIndexVal = null;\n        this._lastVisibleIndexVal = null;\n        // Skip the resize event on touch devices when the address bar slides up.\n        this.updateViewportBoundaries();\n        if (this._isVisible) {\n          // Reinstall the scroll event listener.\n          this.toggleScrollListener(true);\n          this._resetAverage();\n          this._render();\n        } else {\n          // Uninstall the scroll event listener.\n          this.toggleScrollListener(false);\n        }\n      },\n      animationFrame\n    );\n  },\n\n  _isIndexRendered: function (idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _getPhysicalIndex: function (vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp: function (v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function (name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  }\n});\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * This Element is used internally by vaadin-grid.\n *\n * @implements PolymerIronList\n * @extends HTMLElement\n */\nclass ScrollerElement extends PolymerIronList {\n  static get properties() {\n    return {\n      size: {\n        type: Number,\n        notify: true\n      },\n\n      /**\n       * @type {number}\n       * @protected\n       */\n      _vidxOffset: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n\n  static get observers() {\n    return ['_effectiveSizeChanged(_effectiveSize)'];\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._scrollHandler();\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} item\n   * @param {number} index\n   * @protected\n   */\n  _updateScrollerItem() {}\n\n  /** @protected */\n  _afterScroll() {}\n\n  /** @protected */\n  _getRowTarget() {}\n\n  /** @protected */\n  _createScrollerRows() {}\n\n  /** @protected */\n  _canPopulate() {}\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  scrollToIndex(index) {\n    this._warnPrivateAPIAccess('scrollToIndex');\n\n    this._scrollingToIndex = true;\n    index = Math.min(Math.max(index, 0), this._effectiveSize - 1);\n    this.$.table.scrollTop = (index / this._effectiveSize) * (this.$.table.scrollHeight - this.$.table.offsetHeight);\n    this._scrollHandler();\n\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(1000000);\n    }\n\n    this._accessIronListAPI(() => super.scrollToIndex(index - this._vidxOffset));\n    this._scrollHandler();\n\n    // Ensure scroll position\n    const row = Array.from(this.$.items.children).filter((child) => child.index === index)[0];\n    if (row) {\n      const headerOffset = row.getBoundingClientRect().top - this.$.header.getBoundingClientRect().bottom;\n      if (Math.abs(headerOffset) > 1) {\n        this.$.table.scrollTop += headerOffset;\n        this._scrollHandler();\n      }\n    }\n\n    this._scrollingToIndex = false;\n  }\n\n  /** @private */\n  _effectiveSizeChanged(size) {\n    let fvi; // first visible (adjusted) index\n    let fviOffset = 0;\n    this._iterateItems((pidx, vidx) => {\n      if (vidx === this._firstVisibleIndex) {\n        const row = this._physicalItems[pidx];\n        fvi = row.index;\n        fviOffset = row.getBoundingClientRect().top;\n      }\n    });\n\n    if (this.items && size < this.items.length) {\n      // Size was reduced, scroll to 0 first\n      this._scrollTop = 0;\n    }\n    if (!Array.isArray(this.items)) {\n      const maxVirtualItems = 100000;\n      this.items = { length: Math.min(size, maxVirtualItems) };\n    }\n\n    this._accessIronListAPI(() => super._itemsChanged({ path: 'items' }));\n\n    this._virtualCount = Math.min(this.items.length, size) || 0;\n\n    if (this._scrollTop === 0) {\n      this._accessIronListAPI(() => this._scrollToIndex(Math.min(size - 1, fvi)));\n      this._iterateItems((pidx) => {\n        const row = this._physicalItems[pidx];\n        if (row.index === fvi) {\n          this.$.table.scrollTop += Math.round(row.getBoundingClientRect().top - fviOffset);\n        }\n        // Restore keyboard focus to the right cell\n        if (\n          row.index === this._focusedItemIndex &&\n          this._itemsFocusable &&\n          this.$.items.contains(this.shadowRoot.activeElement)\n        ) {\n          const cellIndex = Array.from(this._itemsFocusable.parentElement.children).indexOf(this._itemsFocusable);\n          row.children[cellIndex].focus();\n        }\n      });\n    }\n    this._assignModels();\n    requestAnimationFrame(() => this._update());\n\n    this.__updateFooterPositioning();\n  }\n\n  /** @protected */\n  _positionItems() {\n    this._adjustScrollPosition();\n\n    let rePosition;\n    if (isNaN(this._physicalTop)) {\n      rePosition = true;\n      this._physicalTop = 0;\n    }\n\n    let y = this._physicalTop;\n    this._iterateItems((pidx) => {\n      this._physicalItems[pidx].style.transform = `translateY(${y}px)`;\n      y += this._physicalSizes[pidx];\n    });\n\n    if (rePosition) {\n      this._scrollToIndex(0);\n    }\n  }\n\n  /**\n   * @param {number} count\n   * @protected\n   */\n  _increasePoolIfNeeded(count) {\n    if ((count === 0 && this._scrollingToIndex) || !this._canPopulate() || !this._effectiveSize) {\n      return;\n    }\n\n    if (!this._initialPoolCreated) {\n      this._initialPoolCreated = true;\n      super._increasePoolIfNeeded(25);\n    } else if (this._optPhysicalSize !== Infinity) {\n      this._debounceIncreasePool = Debouncer.debounce(this._debounceIncreasePool, animationFrame, () => {\n        this._updateMetrics();\n        const remainingPhysicalSize = this._optPhysicalSize - this._physicalSize;\n        let estimatedMissingRowCount = Math.ceil(remainingPhysicalSize / this._physicalAverage);\n\n        if (this._physicalCount + estimatedMissingRowCount > this._effectiveSize) {\n          // Do not increase the physical item count above the this._effectiveSize\n          estimatedMissingRowCount = Math.max(0, this._effectiveSize - this._physicalCount);\n        }\n\n        if (this._physicalSize && estimatedMissingRowCount > 0 && this._optPhysicalSize !== Infinity) {\n          super._increasePoolIfNeeded(estimatedMissingRowCount);\n          // Ensure the rows are in order after increasing pool\n          this.__reorderChildNodes();\n        }\n      });\n    }\n  }\n\n  /** @private */\n  __reorderChildNodes() {\n    const childNodes = Array.from(this.$.items.childNodes);\n    const rowsInOrder = !!childNodes.reduce((inOrder, current, currentIndex, array) => {\n      if (currentIndex === 0 || array[currentIndex - 1].index === current.index - 1) {\n        return inOrder;\n      }\n    }, true);\n\n    if (!rowsInOrder) {\n      childNodes\n        .sort((row1, row2) => {\n          return row1.index - row2.index;\n        })\n        .forEach((row) => this.$.items.appendChild(row));\n    }\n  }\n\n  /** @private */\n  _createPool(size) {\n    const fragment = document.createDocumentFragment();\n    const physicalItems = this._createScrollerRows(size);\n\n    physicalItems.forEach((inst) => fragment.appendChild(inst));\n    this._getRowTarget().appendChild(fragment);\n\n    // Weird hack needed to get Safari to actually distribute slots\n    const content = this.querySelector('[slot]');\n    if (content) {\n      const slot = content.getAttribute('slot');\n      content.setAttribute('slot', 'foo-bar');\n      content.setAttribute('slot', slot);\n    }\n\n    afterNextRender(this, () => this.notifyResize());\n    return physicalItems;\n  }\n\n  /**\n   * Assigns the data models to a given set of items.\n   * @param {!Array<number>=} itemSet\n   * @protected\n   */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      this._toggleAttribute('hidden', vidx >= this._effectiveSize, el);\n      this._updateScrollerItem(el, vidx + (this._vidxOffset || 0));\n    }, itemSet);\n  }\n\n  /** @protected */\n  _scrollHandler() {\n    const delta = this.$.table.scrollTop - this._scrollPosition;\n    this._accessIronListAPI(super._scrollHandler);\n    const oldOffset = this._vidxOffset;\n    if (this._accessIronListAPI(() => this._maxScrollTop) && this._virtualCount < this._effectiveSize) {\n      this._adjustVirtualIndexOffset(delta);\n    } else {\n      this._vidxOffset = 0;\n    }\n    if (this._vidxOffset !== oldOffset) {\n      this._update();\n    }\n    this._afterScroll();\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (Math.abs(delta) > 10000) {\n      if (this._noScale) {\n        this._noScale = false;\n        return;\n      }\n      const scale = this.$.table.scrollTop / (this.$.table.scrollHeight - this.$.table.offsetHeight);\n      const offset = scale * this._effectiveSize;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset || 0;\n      const threshold = 1000;\n      const maxShift = 100;\n      // At start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n        }\n        this._noScale = true;\n      }\n      // At end\n      const maxOffset = this._effectiveSize - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n        }\n        this._noScale = true;\n      }\n    }\n  }\n\n  /** @private */\n  _accessIronListAPI(cb) {\n    this._warnPrivateAPIAccessAsyncEnabled = false;\n    const returnValue = cb.apply(this);\n    this._debouncerWarnPrivateAPIAccess = Debouncer.debounce(\n      this._debouncerWarnPrivateAPIAccess,\n      animationFrame,\n      () => (this._warnPrivateAPIAccessAsyncEnabled = true)\n    );\n    return returnValue;\n  }\n\n  /**\n   * Allow iron-list to access its APIs from debounced callbacks without warns\n   * @private\n   */\n  _debounceRender(cb, asyncModule) {\n    super._debounceRender(() => this._accessIronListAPI(cb), asyncModule);\n  }\n\n  /**\n   * Warn when iron-list APIs are being accessed directly\n   * @private\n   */\n  _warnPrivateAPIAccess(apiName) {\n    if (this._warnPrivateAPIAccessAsyncEnabled) {\n      console.warn(`Accessing private API (${apiName})!`);\n    }\n  }\n\n  /** @protected */\n  _render() {\n    this._accessIronListAPI(super._render);\n  }\n\n  /** @protected */\n  _itemsChanged() {\n    /* Ignore */\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _firstVisibleIndex() {\n    return this._accessIronListAPI(() => super.firstVisibleIndex);\n  }\n\n  /**\n   * @return {number}\n   * @protected\n   */\n  get _lastVisibleIndex() {\n    return this._accessIronListAPI(() => super.lastVisibleIndex);\n  }\n\n  /**\n   * @param {number} index\n   * @protected\n   */\n  _scrollToIndex(index) {\n    this._accessIronListAPI(() => this.scrollToIndex(index));\n  }\n\n  /** @private */\n  get firstVisibleIndex() {\n    this._warnPrivateAPIAccess('firstVisibleIndex');\n    return super.firstVisibleIndex;\n  }\n\n  /** @private */\n  set firstVisibleIndex(value) {\n    this._warnPrivateAPIAccess('firstVisibleIndex');\n    super.firstVisibleIndex = value;\n  }\n\n  /** @private */\n  get lastVisibleIndex() {\n    this._warnPrivateAPIAccess('lastVisibleIndex');\n    return super.lastVisibleIndex;\n  }\n\n  /** @private */\n  set lastVisibleIndex(value) {\n    this._warnPrivateAPIAccess('lastVisibleIndex');\n    super.lastVisibleIndex = value;\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    this._warnPrivateAPIAccess('updateViewportBoundaries');\n    super.updateViewportBoundaries.apply(this, arguments);\n  }\n\n  /** @protected */\n  _resizeHandler() {\n    super._resizeHandler();\n    flush();\n  }\n}\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst A11yMixin = (superClass) =>\n  class A11yMixin extends superClass {\n    static get observers() {\n      return ['_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'];\n    }\n\n    /** @private */\n    _a11yGetHeaderRowCount(_columnTree) {\n      return _columnTree.filter((level) =>\n        level.some((col) => col._headerTemplate || col.headerRenderer || col.path || col.header)\n      ).length;\n    }\n\n    /** @private */\n    _a11yGetFooterRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col._headerTemplate || col.headerRenderer)).length;\n    }\n\n    /** @private */\n    _a11yUpdateGridSize(size, _columnTree) {\n      if (size === undefined || _columnTree === undefined) {\n        return;\n      }\n\n      const bodyColumns = _columnTree[_columnTree.length - 1];\n      this.$.table.setAttribute(\n        'aria-rowcount',\n        size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree)\n      );\n      this.$.table.setAttribute('aria-colcount', (bodyColumns && bodyColumns.length) || 0);\n\n      this._a11yUpdateHeaderRows();\n      this._a11yUpdateFooterRows();\n    }\n\n    /** @protected */\n    _a11yUpdateHeaderRows() {\n      Array.from(this.$.header.children).forEach((headerRow, index) =>\n        headerRow.setAttribute('aria-rowindex', index + 1)\n      );\n    }\n\n    /** @protected */\n    _a11yUpdateFooterRows() {\n      Array.from(this.$.footer.children).forEach((footerRow, index) =>\n        footerRow.setAttribute('aria-rowindex', this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1)\n      );\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} index\n     * @protected\n     */\n    _a11yUpdateRowRowindex(row, index) {\n      row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} selected\n     * @protected\n     */\n    _a11yUpdateRowSelected(row, selected) {\n      // Jaws reads selection only for rows, NVDA only for cells\n      row.setAttribute('aria-selected', Boolean(selected));\n      Array.from(row.children).forEach((cell) => cell.setAttribute('aria-selected', Boolean(selected)));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} level\n     * @protected\n     */\n    _a11yUpdateRowLevel(row, level) {\n      row.setAttribute('aria-level', level + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} detailsOpened\n     * @protected\n     */\n    _a11yUpdateRowDetailsOpened(row, detailsOpened) {\n      Array.from(row.children).forEach((cell) => {\n        if (typeof detailsOpened === 'boolean') {\n          cell.setAttribute('aria-expanded', detailsOpened);\n        } else {\n          if (cell.hasAttribute('aria-expanded')) {\n            cell.removeAttribute('aria-expanded');\n          }\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!HTMLElement} detailsCell\n     * @protected\n     */\n    _a11ySetRowDetailsCell(row, detailsCell) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell !== detailsCell) {\n          cell.setAttribute('aria-controls', detailsCell.id);\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} colspan\n     * @protected\n     */\n    _a11yUpdateCellColspan(cell, colspan) {\n      cell.setAttribute('aria-colspan', Number(colspan));\n    }\n\n    /** @protected */\n    _a11yUpdateSorters() {\n      Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach((sorter) => {\n        let cellContent = sorter.parentNode;\n        while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n          cellContent = cellContent.parentNode;\n        }\n        if (cellContent && cellContent.assignedSlot) {\n          const cell = cellContent.assignedSlot.parentNode;\n          cell.setAttribute(\n            'aria-sort',\n            {\n              asc: 'ascending',\n              desc: 'descending'\n            }[String(sorter.direction)] || 'none'\n          );\n        }\n      });\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ActiveItemMixin = (superClass) =>\n  class ActiveItemMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The item user has last interacted with. Turns to `null` after user deactivates\n         * the item by re-interacting with the currently active item.\n         * @type {GridItem}\n         */\n        activeItem: {\n          type: Object,\n          notify: true,\n          value: null\n        }\n      };\n    }\n\n    ready() {\n      super.ready();\n\n      this.$.scroller.addEventListener('click', this._onClick.bind(this));\n      this.addEventListener('cell-activate', this._activateItem.bind(this));\n    }\n\n    /** @private */\n    _activateItem(e) {\n      const model = e.detail.model;\n      const clickedItem = model ? model.item : null;\n\n      if (clickedItem) {\n        this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n      }\n    }\n\n    /**\n     * We need to listen to click instead of tap because on mobile safari, the\n     * document.activeElement has not been updated (focus has not been shifted)\n     * yet at the point when tap event is being executed.\n     * @param {!MouseEvent} e\n     * @protected\n     */\n    _onClick(e) {\n      if (e.defaultPrevented) {\n        // Something has handled this click already, e. g., <vaadin-grid-sorter>\n        return;\n      }\n\n      const path = e.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n      if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n        return;\n      }\n      const cellContent = cell._content;\n\n      const activeElement = this.getRootNode().activeElement;\n      const cellContentHasFocus = cellContent.contains(activeElement);\n      if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n        this.dispatchEvent(\n          new CustomEvent('cell-activate', {\n            detail: {\n              model: this.__getRowModel(cell.parentElement)\n            }\n          })\n        );\n      }\n    }\n\n    /**\n     * @param {!Element} target\n     * @return {boolean}\n     * @protected\n     */\n    _isFocusable(target) {\n      return isFocusable(target);\n    }\n\n    /**\n     * Fired when the `activeItem` property changes.\n     *\n     * @event active-item-changed\n     */\n\n    /**\n     * Fired when the cell is activated with click or keyboard.\n     *\n     * @event cell-activate\n     */\n  };\n\n/**\n * @param {!Element} target\n * @return {boolean}\n * @protected\n */\nconst isFocusable = (target) => {\n  if (!target.parentNode) {\n    return false;\n  }\n  const focusables = Array.from(\n    target.parentNode.querySelectorAll(\n      '[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]'\n    )\n  ).filter((element) => element.getAttribute('part') !== 'cell body-cell');\n\n  const isFocusableElement = focusables.indexOf(target) !== -1;\n  return !target.disabled && isFocusableElement;\n};\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ArrayDataProviderMixin = (superClass) =>\n  class ArrayDataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing the items which will be stamped to the column template\n         * instances.\n         *\n         * @type {Array<!GridItem> | undefined}\n         */\n        items: Array\n      };\n    }\n\n    static get observers() {\n      return ['_itemsChanged(items, items.*, isAttached)'];\n    }\n\n    /** @private */\n    _itemsChanged(items, splices, isAttached) {\n      if (!isAttached) {\n        return;\n      }\n      if (!Array.isArray(items)) {\n        if (items === undefined || items === null) {\n          this.size = 0;\n        }\n        if (this.dataProvider === this._arrayDataProvider) {\n          this.dataProvider = undefined;\n        }\n        return;\n      }\n\n      this.size = items.length;\n      this.dataProvider = this.dataProvider || this._arrayDataProvider;\n      this.clearCache();\n      this._ensureFirstPageLoaded();\n    }\n\n    /**\n     * @param {GridDataProviderParams} opts\n     * @param {GridDataProviderCallback} cb\n     * @protected\n     */\n    _arrayDataProvider(opts, cb) {\n      let items = (Array.isArray(this.items) ? this.items : []).slice(0);\n\n      if (this._filters && this._checkPaths(this._filters, 'filtering', items)) {\n        items = this._filter(items);\n      }\n\n      this.size = items.length;\n\n      if (opts.sortOrders.length && this._checkPaths(this._sorters, 'sorting', items)) {\n        items = items.sort(this._multiSort.bind(this));\n      }\n\n      const start = opts.page * opts.pageSize;\n      const end = start + opts.pageSize;\n      const slice = items.slice(start, end);\n      cb(slice, items.length);\n    }\n\n    /**\n     * Check array of filters/sorters for paths validity, console.warn invalid items\n     * @param {!Array<!GridFilter | !GridSorter>} arrayToCheck The array of filters/sorters to check\n     * @param {string} action The name of action to include in warning (filtering, sorting)\n     * @param {!Array<!GridItem>} items\n     * @protected\n     */\n    _checkPaths(arrayToCheck, action, items) {\n      if (!items.length) {\n        return false;\n      }\n\n      let result = true;\n\n      for (let i in arrayToCheck) {\n        const path = arrayToCheck[i].path;\n\n        // skip simple paths\n        if (!path || path.indexOf('.') === -1) {\n          continue;\n        }\n\n        const parentProperty = path.replace(/\\.[^.]*$/, ''); // a.b.c -> a.b\n        if (Base.get(parentProperty, items[0]) === undefined) {\n          console.warn(`Path \"${path}\" used for ${action} does not exist in all of the items, ${action} is disabled.`);\n          result = false;\n        }\n      }\n\n      return result;\n    }\n\n    /**\n     * @param {unknown} a\n     * @param {unknown} b\n     * @return {number}\n     * @protected\n     */\n    _multiSort(a, b) {\n      return this._sorters\n        .map((sort) => {\n          if (sort.direction === 'asc') {\n            return this._compare(Base.get(sort.path, a), Base.get(sort.path, b));\n          } else if (sort.direction === 'desc') {\n            return this._compare(Base.get(sort.path, b), Base.get(sort.path, a));\n          }\n          return 0;\n        })\n        .reduce((p, n) => {\n          return p ? p : n;\n        }, 0);\n    }\n\n    /**\n     * @param {unknown} value\n     * @return {string}\n     * @protected\n     */\n    _normalizeEmptyValue(value) {\n      if ([undefined, null].indexOf(value) >= 0) {\n        return '';\n      } else if (isNaN(value)) {\n        return value.toString();\n      } else {\n        return value;\n      }\n    }\n\n    /**\n     * @param {unknown} a\n     * @param {unknown} b\n     * @return {number}\n     * @protected\n     */\n    _compare(a, b) {\n      a = this._normalizeEmptyValue(a);\n      b = this._normalizeEmptyValue(b);\n\n      if (a < b) {\n        return -1;\n      }\n      if (a > b) {\n        return 1;\n      }\n      return 0;\n    }\n\n    /**\n     * @param {!Array<!GridItem>} items\n     * @return {!Array<!GridItem>}\n     * @protected\n     */\n    _filter(items) {\n      return items.filter((item) => {\n        return (\n          this._filters.filter((filter) => {\n            const value = this._normalizeEmptyValue(Base.get(filter.path, item));\n            const filterValueLowercase = this._normalizeEmptyValue(filter.value).toString().toLowerCase();\n            return value.toString().toLowerCase().indexOf(filterValueLowercase) === -1;\n          }).length === 0\n        );\n      });\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ColumnResizingMixin = (superClass) =>\n  class ColumnResizingMixin extends GestureEventListeners(superClass) {\n    ready() {\n      super.ready();\n      const scroller = this.$.scroller;\n      addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n      // Disallow scrolling while resizing\n      scroller.addEventListener('touchmove', (e) => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n      // Disable contextmenu on any resize separator.\n      scroller.addEventListener(\n        'contextmenu',\n        (e) => e.target.getAttribute('part') == 'resize-handle' && e.preventDefault()\n      );\n\n      // Disable native cell focus when resizing\n      scroller.addEventListener(\n        'mousedown',\n        (e) => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault()\n      );\n    }\n\n    /** @private */\n    _onHeaderTrack(e) {\n      const handle = e.target;\n      if (handle.getAttribute('part') === 'resize-handle') {\n        const cell = handle.parentElement;\n        let column = cell._column;\n\n        this._toggleAttribute('column-resizing', true, this.$.scroller);\n\n        // Get the target column to resize\n        while (column.localName === 'vaadin-grid-column-group') {\n          column = Array.prototype.slice\n            .call(column._childColumns, 0)\n            .sort(function (a, b) {\n              return a._order - b._order;\n            })\n            .filter(function (column) {\n              return !column.hidden;\n            })\n            .pop();\n        }\n\n        const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n        const targetCell = columnRowCells.filter((cell) => cell._column === column)[0];\n        // Resize the target column\n        if (targetCell.offsetWidth) {\n          const style = window.getComputedStyle(targetCell);\n          const minWidth =\n            10 +\n            parseInt(style.paddingLeft) +\n            parseInt(style.paddingRight) +\n            parseInt(style.borderLeftWidth) +\n            parseInt(style.borderRightWidth) +\n            parseInt(style.marginLeft) +\n            parseInt(style.marginRight);\n          const maxWidth =\n            targetCell.offsetWidth +\n            (this.__isRTL\n              ? targetCell.getBoundingClientRect().left - e.detail.x\n              : e.detail.x - targetCell.getBoundingClientRect().right);\n          column.width = Math.max(minWidth, maxWidth) + 'px';\n          column.flexGrow = 0;\n        }\n        // Fix width and flex-grow for all preceding columns\n        columnRowCells\n          .sort(function (a, b) {\n            return a._column._order - b._column._order;\n          })\n          .forEach(function (cell, index, array) {\n            if (index < array.indexOf(targetCell)) {\n              cell._column.width = cell.offsetWidth + 'px';\n              cell._column.flexGrow = 0;\n            }\n          });\n\n        if (e.detail.state === 'end') {\n          this._toggleAttribute('column-resizing', false, this.$.scroller);\n          this.dispatchEvent(\n            new CustomEvent('column-resize', {\n              detail: { resizedColumn: column }\n            })\n          );\n        }\n\n        // Notify resize\n        this._resizeHandler();\n      }\n    }\n\n    /**\n     * Fired when a column in the grid is resized by the user.\n     *\n     * @event column-resize\n     * @param {Object} detail\n     * @param {Object} detail.resizedColumn the column that was resized\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @private\n */\nconst ItemCache = class ItemCache {\n  /**\n   * @param {!HTMLElement} grid\n   * @param {!ItemCache | undefined} parentCache\n   * @param {!GridItem | undefined} parentItem\n   */\n  constructor(grid, parentCache, parentItem) {\n    /** @type {!HTMLElement} */\n    this.grid = grid;\n    /** @type {!ItemCache | undefined} */\n    this.parentCache = parentCache;\n    /** @type {!GridItem | undefined} */\n    this.parentItem = parentItem;\n    /** @type {object} */\n    this.itemCaches = {};\n    /** @type {object} */\n    this.items = {};\n    /** @type {number} */\n    this.effectiveSize = 0;\n    /** @type {number} */\n    this.size = 0;\n    /** @type {object} */\n    this.pendingRequests = {};\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLoading() {\n    return Boolean(\n      Object.keys(this.pendingRequests).length ||\n        Object.keys(this.itemCaches).filter((index) => {\n          return this.itemCaches[index].isLoading();\n        })[0]\n    );\n  }\n\n  /**\n   * @param {number} index\n   * @return {!GridItem | undefined}\n   */\n  getItemForIndex(index) {\n    const { cache, scaledIndex } = this.getCacheAndIndex(index);\n    return cache.items[scaledIndex];\n  }\n\n  updateSize() {\n    this.effectiveSize =\n      !this.parentItem || this.grid._isExpanded(this.parentItem)\n        ? this.size +\n          Object.keys(this.itemCaches).reduce((prev, curr) => {\n            const subCache = this.itemCaches[curr];\n            subCache.updateSize();\n            return prev + subCache.effectiveSize;\n          }, 0)\n        : 0;\n  }\n\n  /**\n   * @param {number} scaledIndex\n   */\n  ensureSubCacheForScaledIndex(scaledIndex) {\n    if (!this.itemCaches[scaledIndex]) {\n      const subCache = new ItemCache(this.grid, this, this.items[scaledIndex]);\n      this.itemCaches[scaledIndex] = subCache;\n      this.grid._loadPage(0, subCache);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {{cache: !ItemCache, scaledIndex: number}}\n   */\n  getCacheAndIndex(index) {\n    let thisLevelIndex = index;\n    const keys = Object.keys(this.itemCaches);\n    for (let i = 0; i < keys.length; i++) {\n      const expandedIndex = Number(keys[i]);\n      const subCache = this.itemCaches[expandedIndex];\n      if (thisLevelIndex <= expandedIndex) {\n        return { cache: this, scaledIndex: thisLevelIndex };\n      } else if (thisLevelIndex <= expandedIndex + subCache.effectiveSize) {\n        return subCache.getCacheAndIndex(thisLevelIndex - expandedIndex - 1);\n      }\n      thisLevelIndex -= subCache.effectiveSize;\n    }\n    return { cache: this, scaledIndex: thisLevelIndex };\n  }\n};\n\n/**\n * @polymerMixin\n */\nconst DataProviderMixin = (superClass) =>\n  class DataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Number of items fetched at a time from the dataprovider.\n         * @attr {number} page-size\n         * @type {number}\n         */\n        pageSize: {\n          type: Number,\n          value: 50,\n          observer: '_pageSizeChanged'\n        },\n\n        /**\n         * Function that provides items lazily. Receives arguments `params`, `callback`\n         *\n         * `params.page` Requested page index\n         *\n         * `params.pageSize` Current page size\n         *\n         * `params.filters` Currently applied filters\n         *\n         * `params.sortOrders` Currently applied sorting orders\n         *\n         * `params.parentItem` When tree is used, and sublevel items\n         * are requested, reference to parent item of the requested sublevel.\n         * Otherwise `undefined`.\n         *\n         * `callback(items, size)` Callback function with arguments:\n         *   - `items` Current page of items\n         *   - `size` Total number of items. When tree sublevel items\n         *     are requested, total number of items in the requested sublevel.\n         *     Optional when tree is not used, required for tree.\n         *\n         * @type {GridDataProvider | null | undefined}\n         */\n        dataProvider: {\n          type: Object,\n          notify: true,\n          observer: '_dataProviderChanged'\n        },\n\n        /**\n         * `true` while data is being requested from the data provider.\n         */\n        loading: {\n          type: Boolean,\n          notify: true,\n          readOnly: true,\n          reflectToAttribute: true\n        },\n\n        /**\n         * @type {!ItemCache}\n         * @protected\n         */\n        _cache: {\n          type: Object,\n          value: function () {\n            const cache = new ItemCache(this);\n            return cache;\n          }\n        },\n\n        /**\n         * Path to an item sub-property that identifies the item.\n         * @attr {string} item-id-path\n         */\n        itemIdPath: {\n          type: String,\n          value: null\n        },\n\n        /**\n         * An array that contains the expanded items.\n         * @type {!Array<!GridItem>}\n         */\n        expandedItems: {\n          type: Object,\n          notify: true,\n          value: () => []\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_sizeChanged(size)', '_itemIdPathChanged(itemIdPath)', '_expandedItemsChanged(expandedItems.*)'];\n    }\n\n    /** @private */\n    _sizeChanged(size) {\n      const delta = size - this._cache.size;\n      this._cache.size += delta;\n      this._cache.effectiveSize += delta;\n      this._effectiveSize = this._cache.effectiveSize;\n      this._increasePoolIfNeeded(0);\n      this._debounceIncreasePool && this._debounceIncreasePool.flush();\n    }\n\n    /**\n     * @param {number} index\n     * @param {HTMLElement} el\n     * @protected\n     */\n    _getItem(index, el) {\n      if (index >= this._effectiveSize) {\n        return;\n      }\n\n      el.index = index;\n      const { cache, scaledIndex } = this._cache.getCacheAndIndex(index);\n      const item = cache.items[scaledIndex];\n      if (item) {\n        this._toggleAttribute('loading', false, el);\n        this._updateItem(el, item);\n        if (this._isExpanded(item)) {\n          cache.ensureSubCacheForScaledIndex(scaledIndex);\n        }\n      } else {\n        this._toggleAttribute('loading', true, el);\n        this._loadPage(this._getPageForIndex(scaledIndex), cache);\n      }\n    }\n\n    /** @private */\n    _expandedInstanceChangedCallback(inst, value) {\n      if (inst.item === undefined) {\n        return;\n      }\n      if (value) {\n        this.expandItem(inst.item);\n      } else {\n        this.collapseItem(inst.item);\n      }\n    }\n\n    /**\n     * Returns a value that identifies the item. Uses `itemIdPath` if available.\n     * Can be customized by overriding.\n     * @param {!GridItem} item\n     * @return {!GridItem | !unknown}\n     */\n    getItemId(item) {\n      return this.itemIdPath ? this.get(this.itemIdPath, item) : item;\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isExpanded(item) {\n      return this.__expandedKeys.has(this.getItemId(item));\n    }\n\n    /** @private */\n    _expandedItemsChanged() {\n      this.__cacheExpandedKeys();\n      this._cache.updateSize();\n      this._effectiveSize = this._cache.effectiveSize;\n      this._assignModels();\n    }\n\n    /** @private */\n    _itemIdPathChanged() {\n      this.__cacheExpandedKeys();\n    }\n\n    /** @private */\n    __cacheExpandedKeys() {\n      if (this.expandedItems) {\n        this.__expandedKeys = new Set();\n        this.expandedItems.forEach((item) => {\n          this.__expandedKeys.add(this.getItemId(item));\n        });\n      }\n    }\n\n    /**\n     * Expands the given item tree.\n     * @param {!GridItem} item\n     */\n    expandItem(item) {\n      if (!this._isExpanded(item)) {\n        this.push('expandedItems', item);\n      }\n    }\n\n    /**\n     * Collapses the given item tree.\n     * @param {!GridItem} item\n     */\n    collapseItem(item) {\n      if (this._isExpanded(item)) {\n        this.splice('expandedItems', this._getItemIndexInArray(item, this.expandedItems), 1);\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @protected\n     */\n    _getIndexLevel(index) {\n      let { cache } = this._cache.getCacheAndIndex(index);\n      let level = 0;\n      while (cache.parentCache) {\n        cache = cache.parentCache;\n        level++;\n      }\n      return level;\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    _canPopulate() {\n      return Boolean(this._hasData && this._columnTree);\n    }\n\n    /**\n     * @param {number} page\n     * @param {ItemCache} cache\n     * @protected\n     */\n    _loadPage(page, cache) {\n      // make sure same page isn't requested multiple times.\n      if (!cache.pendingRequests[page] && this.dataProvider) {\n        this._setLoading(true);\n        cache.pendingRequests[page] = true;\n        const params = {\n          page,\n          pageSize: this.pageSize,\n          sortOrders: this._mapSorters(),\n          filters: this._mapFilters(),\n          parentItem: cache.parentItem\n        };\n        this._debounceIncreasePool && this._debounceIncreasePool.flush();\n        this.dataProvider(params, (items, size) => {\n          if (size !== undefined) {\n            cache.size = size;\n          } else {\n            if (params.parentItem) {\n              cache.size = items.length;\n            }\n          }\n\n          const currentItems = Array.from(this.$.items.children).map((row) => row._item);\n\n          // Populate the cache with new items\n          items.forEach((item, itemsIndex) => {\n            const itemIndex = page * this.pageSize + itemsIndex;\n            cache.items[itemIndex] = item;\n            if (this._isExpanded(item) && currentItems.indexOf(item) > -1) {\n              // Force synchronous data request for expanded item sub-cache\n              cache.ensureSubCacheForScaledIndex(itemIndex);\n            }\n          });\n\n          this._hasData = true;\n\n          delete cache.pendingRequests[page];\n\n          this._debouncerApplyCachedData = Debouncer.debounce(this._debouncerApplyCachedData, timeOut.after(0), () => {\n            this._setLoading(false);\n            this._cache.updateSize();\n            this._effectiveSize = this._cache.effectiveSize;\n\n            Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .forEach((row) => {\n                const cachedItem = this._cache.getItemForIndex(row.index);\n                if (cachedItem) {\n                  this._getItem(row.index, row);\n                }\n              });\n\n            this._increasePoolIfNeeded(0);\n            this.__scrollToPendingIndex();\n          });\n\n          if (!this._cache.isLoading()) {\n            this._debouncerApplyCachedData.flush();\n          }\n\n          this.__itemsReceived();\n        });\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @private\n     */\n    _getPageForIndex(index) {\n      return Math.floor(index / this.pageSize);\n    }\n\n    /**\n     * Clears the cached pages and reloads data from dataprovider when needed.\n     */\n    clearCache() {\n      this._cache = new ItemCache(this);\n      Array.from(this.$.items.children).forEach((row) => {\n        Array.from(row.children).forEach((cell) => {\n          // Force data system to pick up subproperty changes\n          cell._instance && cell._instance._setPendingProperty('item', {}, false);\n        });\n      });\n      this._cache.size = this.size || 0;\n      this._cache.updateSize();\n      this._hasData = false;\n      this._assignModels();\n\n      if (!this._effectiveSize || !this._initialPoolCreated) {\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /** @private */\n    _pageSizeChanged(pageSize, oldPageSize) {\n      if (oldPageSize !== undefined && pageSize !== oldPageSize) {\n        this.clearCache();\n      }\n    }\n\n    /** @protected */\n    _checkSize() {\n      if (this.size === undefined && this._effectiveSize === 0) {\n        console.warn(\n          'The <vaadin-grid> needs the total number of items' +\n            ' in order to display rows. Set the total number of items' +\n            ' to the `size` property, or provide the total number of items' +\n            ' in the second argument of the `dataProvider`’s `callback` call.'\n        );\n      }\n    }\n\n    /** @private */\n    _dataProviderChanged(dataProvider, oldDataProvider) {\n      if (oldDataProvider !== undefined) {\n        this.clearCache();\n      }\n\n      if (dataProvider && this.items && this.items.length) {\n        // Fixes possibly invalid cached lastVisibleIndex value in <iron-list>\n        this._scrollToIndex(this._firstVisibleIndex);\n      }\n\n      this._ensureFirstPageLoaded();\n\n      this._debouncerCheckSize = Debouncer.debounce(\n        this._debouncerCheckSize,\n        timeOut.after(2000),\n        this._checkSize.bind(this)\n      );\n\n      this._scrollHandler();\n    }\n\n    /** @protected */\n    _ensureFirstPageLoaded() {\n      if (!this._hasData) {\n        // load data before adding rows to make sure they have content when\n        // rendered for the first time.\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /**\n     * @param {!GridItem} item1\n     * @param {!GridItem} item2\n     * @return {boolean}\n     * @protected\n     */\n    _itemsEqual(item1, item2) {\n      return this.getItemId(item1) === this.getItemId(item2);\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @param {!Array<!GridItem>} array\n     * @return {number}\n     * @protected\n     */\n    _getItemIndexInArray(item, array) {\n      let result = -1;\n      array.forEach((i, idx) => {\n        if (this._itemsEqual(i, item)) {\n          result = idx;\n        }\n      });\n      return result;\n    }\n\n    scrollToIndex(index) {\n      super.scrollToIndex(index);\n      if (!isNaN(index) && (this._cache.isLoading() || !this.clientHeight)) {\n        this.__pendingScrollToIndex = index;\n      }\n    }\n\n    __scrollToPendingIndex() {\n      if (this.__pendingScrollToIndex && this.$.items.children.length) {\n        const index = this.__pendingScrollToIndex;\n        delete this.__pendingScrollToIndex;\n\n        if (this._debounceIncreasePool) {\n          this._debounceIncreasePool.flush();\n        }\n\n        this.scrollToIndex(index);\n      }\n    }\n\n    /**\n     * Fired when the `expandedItems` property changes.\n     *\n     * @event expanded-items-changed\n     */\n\n    /**\n     * Fired when the `loading` property changes.\n     *\n     * @event loading-changed\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst DynamicColumnsMixin = (superClass) =>\n  class DynamicColumnsMixin extends superClass {\n    /** @protected */\n    ready() {\n      super.ready();\n      this._addNodeObserver();\n    }\n\n    /** @private */\n    _hasColumnGroups(columns) {\n      for (let i = 0; i < columns.length; i++) {\n        if (columns[i].localName === 'vaadin-grid-column-group') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * @param {!GridColumnGroupElement} el\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getChildColumns(el) {\n      return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n    }\n\n    /** @private */\n    _flattenColumnGroups(columns) {\n      return columns\n        .map((col) => {\n          if (col.localName === 'vaadin-grid-column-group') {\n            return this._getChildColumns(col);\n          } else {\n            return [col];\n          }\n        })\n        .reduce((prev, curr) => {\n          return prev.concat(curr);\n        }, []);\n    }\n\n    /** @private */\n    _getColumnTree() {\n      const rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n      const columnTree = [];\n\n      for (let c = rootColumns; ; ) {\n        columnTree.push(c);\n        if (!this._hasColumnGroups(c)) {\n          break;\n        }\n        c = this._flattenColumnGroups(c);\n      }\n\n      return columnTree;\n    }\n\n    /** @protected */\n    _updateColumnTree() {\n      const columnTree = this._getColumnTree();\n      if (!this._arrayEquals(columnTree, this._columnTree)) {\n        this._columnTree = columnTree;\n      }\n    }\n\n    /** @private */\n    _addNodeObserver() {\n      this._observer = new FlattenedNodesObserver(this, (info) => {\n        const rowDetailsTemplate = info.addedNodes.filter(\n          (n) => n.localName === 'template' && n.classList.contains('row-details')\n        )[0];\n        if (rowDetailsTemplate && this._rowDetailsTemplate !== rowDetailsTemplate) {\n          this._rowDetailsTemplate = rowDetailsTemplate;\n        }\n        const hasColumnElements = (nodeCollection) => nodeCollection.filter(this._isColumnElement).length > 0;\n        if (hasColumnElements(info.addedNodes) || hasColumnElements(info.removedNodes)) {\n          const allRemovedCells = info.removedNodes.flatMap((c) => c._allCells);\n          const filterNotConnected = (element) =>\n            allRemovedCells.filter((cell) => cell._content.contains(element)).length;\n\n          this.__removeSorters(this._sorters.filter(filterNotConnected));\n          this.__removeFilters(this._filters.filter(filterNotConnected));\n          this._updateColumnTree();\n        }\n\n        this._debouncerCheckImports = Debouncer.debounce(\n          this._debouncerCheckImports,\n          timeOut.after(2000),\n          this._checkImports.bind(this)\n        );\n\n        this._ensureFirstPageLoaded();\n      });\n    }\n\n    /** @private */\n    _arrayEquals(arr1, arr2) {\n      if (!arr1 || !arr2 || arr1.length != arr2.length) {\n        return false;\n      }\n\n      for (let i = 0, l = arr1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n          // recurse into the nested arrays\n          if (!this._arrayEquals(arr1[i], arr2[i])) {\n            return false;\n          }\n        } else if (arr1[i] != arr2[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /** @protected */\n    _checkImports() {\n      [\n        'vaadin-grid-column-group',\n        'vaadin-grid-filter',\n        'vaadin-grid-filter-column',\n        'vaadin-grid-tree-toggle',\n        'vaadin-grid-selection-column',\n        'vaadin-grid-sort-column',\n        'vaadin-grid-sorter'\n      ].forEach((elementName) => {\n        const element = this.querySelector(elementName);\n        if (element && !(element instanceof PolymerElement)) {\n          console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n        }\n      });\n    }\n\n    /** @protected */\n    _updateFirstAndLastColumn() {\n      Array.from(this.shadowRoot.querySelectorAll('tr')).forEach((row) => this._updateFirstAndLastColumnForRow(row));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _updateFirstAndLastColumnForRow(row) {\n      Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n        .sort((a, b) => {\n          return a._column._order - b._column._order;\n        })\n        .forEach((cell, cellIndex, children) => {\n          this._toggleAttribute('first-column', cellIndex === 0, cell);\n          this._toggleAttribute('last-column', cellIndex === children.length - 1, cell);\n        });\n    }\n\n    /**\n     * @param {!Node} node\n     * @return {boolean}\n     * @protected\n     */\n    _isColumnElement(node) {\n      return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst EventContextMixin = (superClass) =>\n  class EventContextMixin extends superClass {\n    /**\n     * Returns an object with context information about the event target:\n     * - `item`: the data object corresponding to the targeted row (not specified when targeting header or footer)\n     * - `column`: the column element corresponding to the targeted cell (not specified when targeting row details)\n     * - `section`: whether the event targeted the body, header, footer or details of the grid\n     *\n     * These additional properties are included when `item` is specified:\n     * - `index`: the index of the item\n     * - `selected`: the selected state of the item\n     * - `detailsOpened`: whether the row details are open for the item\n     * - `expanded`: the expanded state of the tree toggle\n     * - `level`: the tree hierarchy level\n     *\n     * The returned object is populated only when a grid cell, header, footer or row details is found in `event.composedPath()`.\n     * This means mostly mouse and keyboard events. If such a grid part is not found in the path, an empty object is returned.\n     * This may be the case eg. if the event is fired on the `<vaadin-grid>` element and not any deeper in the DOM, or if\n     * the event targets the empty part of the grid body.\n     *\n     * @param {!Event} event\n     * @return {GridEventContext | object}\n     */\n    getEventContext(event) {\n      const context = {};\n\n      const path = event.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n\n      if (!cell) {\n        return context;\n      }\n\n      context.section = ['body', 'header', 'footer', 'details'].filter(\n        (section) => cell.getAttribute('part').indexOf(section) > -1\n      )[0];\n\n      if (cell._column) {\n        context.column = cell._column;\n      }\n\n      if (context.section === 'body' || context.section === 'details') {\n        Object.assign(context, this.__getRowModel(cell.parentElement));\n      }\n\n      return context;\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst FilterMixin = (superClass) =>\n  class FilterMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _filters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('filter-changed', this._filterChanged.bind(this));\n    }\n\n    /** @private */\n    _filterChanged(e) {\n      e.stopPropagation();\n\n      this.__addFilter(e.target);\n      this.__applyFilters();\n    }\n\n    /** @private */\n    __removeFilters(filtersToRemove) {\n      if (filtersToRemove.length == 0) {\n        return;\n      }\n\n      this._filters = this._filters.filter((filter) => filtersToRemove.indexOf(filter) < 0);\n      this.__applyFilters();\n    }\n\n    /** @private */\n    __addFilter(filter) {\n      const filterIndex = this._filters.indexOf(filter);\n\n      if (filterIndex === -1) {\n        this._filters.push(filter);\n      }\n    }\n\n    /** @private */\n    __applyFilters() {\n      if (this.dataProvider && this.isAttached) {\n        this.clearCache();\n      }\n    }\n\n    /**\n     * @return {!Array<!GridFilter>}\n     * @protected\n     */\n    _mapFilters() {\n      return this._filters.map((filter) => {\n        return {\n          path: filter.path,\n          value: filter.value\n        };\n      });\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * `vaadin-grid-templatizer` is a helper element for the `vaadin-grid` that is preparing and\n * stamping instances of cells and columns templates\n *\n * @extends HTMLElement\n * @private\n */\nclass GridTemplatizer extends PolymerElement {\n  static get is() {\n    return 'vaadin-grid-templatizer';\n  }\n\n  static get properties() {\n    return {\n      dataHost: Object,\n\n      template: Object,\n\n      _templateInstances: {\n        type: Array,\n        value: function () {\n          return [];\n        }\n      },\n\n      _parentPathValues: {\n        value: function () {\n          return {};\n        }\n      },\n\n      _grid: Object\n    };\n  }\n\n  static get observers() {\n    return ['_templateInstancesChanged(_templateInstances.*, _parentPathValues.*)'];\n  }\n\n  constructor() {\n    super();\n\n    this._instanceProps = {\n      detailsOpened: true,\n      index: true,\n      item: true,\n      selected: true,\n      expanded: true,\n      level: true\n    };\n  }\n\n  createInstance() {\n    this._ensureTemplatized();\n    const instance = new this._TemplateClass({});\n    this.addInstance(instance);\n\n    return instance;\n  }\n\n  addInstance(instance) {\n    if (this._templateInstances.indexOf(instance) === -1) {\n      this._templateInstances.push(instance);\n      requestAnimationFrame(() => this.notifyPath('_templateInstances.*', this._templateInstances));\n    }\n  }\n\n  removeInstance(instance) {\n    const index = this._templateInstances.indexOf(instance);\n    this.splice('_templateInstances', index, 1);\n  }\n\n  _ensureTemplatized() {\n    if (!this._TemplateClass) {\n      this._TemplateClass = templatize(this.template, this, {\n        instanceProps: this._instanceProps,\n        parentModel: true,\n\n        forwardHostProp: function (prop, value) {\n          this._forwardParentProp(prop, value);\n\n          if (this._templateInstances) {\n            this._templateInstances.forEach((inst) => inst.notifyPath(prop, value));\n          }\n        },\n\n        notifyInstanceProp: function (inst, prop, value) {\n          if (prop === 'index' || prop === 'item') {\n            // We don’t need a change notification for these.\n            return;\n          }\n\n          const originalProp = `__${prop}__`;\n\n          // Notify for only user-action changes, not for scrolling updates. E. g.,\n          // if `detailsOpened` is different from `__detailsOpened__`, which was set during render.\n          if (inst[originalProp] === value) {\n            return;\n          }\n          inst[originalProp] = value;\n\n          const row = Array.from(this._grid.$.items.children).filter((row) =>\n            this._grid._itemsEqual(row._item, inst.item)\n          )[0];\n          if (row) {\n            Array.from(row.children).forEach((cell) => {\n              if (cell._instance) {\n                cell._instance[originalProp] = value;\n                cell._instance.notifyPath(prop, value);\n              }\n            });\n          }\n\n          const itemPrefix = 'item.';\n          if (Array.isArray(this._grid.items) && prop.indexOf(itemPrefix) === 0) {\n            const itemsIndex = this._grid.items.indexOf(inst.item);\n            const path = prop.slice(itemPrefix.length);\n            this._grid.notifyPath(`items.${itemsIndex}.${path}`, value);\n          }\n\n          const gridCallback = `_${prop}InstanceChangedCallback`;\n          if (this._grid && this._grid[gridCallback]) {\n            this._grid[gridCallback](inst, value);\n          }\n        }\n      });\n    }\n  }\n\n  _forwardParentProp(prop, value) {\n    this._parentPathValues[prop] = value;\n    this._templateInstances.forEach((inst) => inst.notifyPath(prop, value));\n  }\n\n  _templateInstancesChanged(t) {\n    let index, count;\n    if (t.path === '_templateInstances') {\n      // Iterate all instances\n      index = 0;\n      count = this._templateInstances.length;\n    } else if (t.path === '_templateInstances.splices') {\n      // Iterate only new instances\n      index = t.value.index;\n      count = t.value.addedCount;\n    } else {\n      return;\n    }\n    Object.keys(this._parentPathValues || {}).forEach((keyName) => {\n      for (let i = index; i < index + count; i++) {\n        this._templateInstances[i].set(keyName, this._parentPathValues[keyName]);\n      }\n    });\n  }\n}\n\ncustomElements.define(GridTemplatizer.is, GridTemplatizer);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst RowDetailsMixin = (superClass) =>\n  class RowDetailsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing references to items with open row details.\n         * @type {Array<GridItem> | null | undefined}\n         */\n        detailsOpenedItems: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _rowDetailsTemplate: Object,\n\n        /**\n         * Custom function for rendering the content of the row details.\n         * Receives three arguments:\n         *\n         * - `root` The row details content DOM element. Append your content to it.\n         * - `grid` The `<vaadin-grid>` element.\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *\n         * @type {GridRowDetailsRenderer | null | undefined}\n         */\n        rowDetailsRenderer: Function,\n\n        /**\n         * @type {!Array<!HTMLElement> | undefined}\n         * @protected\n         */\n        _detailsCells: {\n          type: Array\n        }\n      };\n    }\n\n    static get observers() {\n      return [\n        '_detailsOpenedItemsChanged(detailsOpenedItems.*, _rowDetailsTemplate, rowDetailsRenderer)',\n        '_rowDetailsTemplateOrRendererChanged(_rowDetailsTemplate, rowDetailsRenderer)'\n      ];\n    }\n\n    /** @private */\n    _rowDetailsTemplateOrRendererChanged(rowDetailsTemplate, rowDetailsRenderer) {\n      if (rowDetailsTemplate && rowDetailsRenderer) {\n        throw new Error('You should only use either a renderer or a template for row details');\n      }\n      if (rowDetailsTemplate || rowDetailsRenderer) {\n        if (rowDetailsTemplate && !rowDetailsTemplate.templatizer) {\n          const templatizer = new GridTemplatizer();\n          templatizer._grid = this;\n          templatizer.dataHost = this.dataHost;\n          templatizer.template = rowDetailsTemplate;\n          rowDetailsTemplate.templatizer = templatizer;\n        }\n\n        if (this._columnTree) {\n          // Only update the rows if the column tree has already been initialized\n          Array.from(this.$.items.children).forEach((row) => {\n            if (!row.querySelector('[part~=details-cell]')) {\n              this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n              this._a11yUpdateRowDetailsOpened(row, false);\n            }\n            // Clear any old template instances\n            delete row.querySelector('[part~=details-cell]')._instance;\n          });\n        }\n\n        if (this.detailsOpenedItems.length) {\n          Array.from(this.$.items.children).forEach(this._toggleDetailsCell, this);\n          this._update();\n        }\n      }\n    }\n\n    /** @private */\n    _detailsOpenedItemsChanged(changeRecord) {\n      if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n        // Let’s avoid duplicate work of both “.splices” and “.length” updates.\n        return;\n      }\n      Array.from(this.$.items.children).forEach((row) => {\n        this._toggleDetailsCell(row, row._item);\n        this._a11yUpdateRowDetailsOpened(row, this._isDetailsOpened(row._item));\n        this._toggleAttribute('details-opened', this._isDetailsOpened(row._item), row);\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @protected\n     */\n    _configureDetailsCell(cell) {\n      cell.setAttribute('part', 'cell details-cell');\n      // Freeze the details cell, so that it does not scroll horizontally\n      // with the normal cells. This way it looks less weird.\n      this._toggleAttribute('frozen', true, cell);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItem} item\n     * @protected\n     */\n    _toggleDetailsCell(row, item) {\n      const cell = row.querySelector('[part~=\"details-cell\"]');\n      if (!cell) {\n        return;\n      }\n      const detailsHidden = !this._isDetailsOpened(item);\n      const hiddenChanged = !!cell.hidden !== detailsHidden;\n\n      if ((!cell._instance && !cell._renderer) || cell.hidden !== detailsHidden) {\n        cell.hidden = detailsHidden;\n        if (detailsHidden) {\n          row.style.removeProperty('padding-bottom');\n        } else {\n          if (this.rowDetailsRenderer) {\n            cell._renderer = this.rowDetailsRenderer;\n            cell._renderer.call(this, cell._content, this, { index: row.index, item: item });\n          } else if (this._rowDetailsTemplate && !cell._instance) {\n            // Stamp the template\n            cell._instance = this._rowDetailsTemplate.templatizer.createInstance();\n            cell._content.innerHTML = '';\n            cell._content.appendChild(cell._instance.root);\n            this._updateItem(row, item);\n          }\n\n          flush();\n          row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n\n          requestAnimationFrame(() => this.notifyResize());\n        }\n      }\n      if (hiddenChanged) {\n        this._updateMetrics();\n        this._positionItems();\n      }\n    }\n\n    /** @protected */\n    _updateDetailsCellHeights() {\n      Array.from(this.$.items.querySelectorAll('[part~=\"details-cell\"]:not([hidden])')).forEach((cell) => {\n        cell.parentElement.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n      });\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isDetailsOpened(item) {\n      return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n    }\n\n    /**\n     * Open the details row of a given item.\n     * @param {!GridItem} item\n     */\n    openItemDetails(item) {\n      if (!this._isDetailsOpened(item)) {\n        this.push('detailsOpenedItems', item);\n      }\n    }\n\n    /**\n     * Close the details row of a given item.\n     * @param {!GridItem} item\n     */\n    closeItemDetails(item) {\n      if (this._isDetailsOpened(item)) {\n        this.splice('detailsOpenedItems', this._getItemIndexInArray(item, this.detailsOpenedItems), 1);\n      }\n    }\n\n    /** @private */\n    _detailsOpenedInstanceChangedCallback(instance, value) {\n      if (value) {\n        this.openItemDetails(instance.item);\n      } else {\n        this.closeItemDetails(instance.item);\n      }\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst timeouts = {\n  SCROLLING: 500,\n  IGNORE_WHEEL: 500\n};\n\n/**\n * @polymerMixin\n */\nconst ScrollMixin = (superClass) =>\n  class ScrollMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Cached array of frozen cells\n         * @private\n         */\n        _frozenCells: {\n          type: Array,\n          value: () => []\n        },\n\n        /** @private */\n        _rowWithFocusedElement: Element,\n\n        /** @private */\n        _deltaYAcc: {\n          type: Number,\n          value: 0\n        },\n\n        /** @private */\n        _useSticky: {\n          type: Boolean,\n          value:\n            window.CSS &&\n            window.CSS.supports &&\n            (window.CSS.supports('position', 'sticky') || window.CSS.supports('position', '-webkit-sticky'))\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_scrollViewportHeightUpdated(_viewportHeight)'];\n    }\n\n    /**\n     * Override (from iron-scroll-target-behavior) to avoid document scroll\n     * @private\n     */\n    set _scrollTop(top) {\n      this.$.table.scrollTop = top;\n    }\n\n    /** @private */\n    get _scrollTop() {\n      return this.$.table.scrollTop;\n    }\n\n    constructor() {\n      super();\n      this._scrollLineHeight = this._getScrollLineHeight();\n    }\n\n    /**\n     * @returns {Number|undefined} - The browser's default font-size in pixels\n     * @private\n     */\n    _getScrollLineHeight() {\n      const el = document.createElement('div');\n      el.style.fontSize = 'initial';\n      el.style.display = 'none';\n      document.body.appendChild(el);\n      const fontSize = window.getComputedStyle(el).fontSize;\n      document.body.removeChild(el);\n      return fontSize ? window.parseInt(fontSize) : undefined;\n    }\n\n    /** @private */\n    _scrollViewportHeightUpdated(_viewportHeight) {\n      this._scrollPageHeight =\n        _viewportHeight - this.$.header.clientHeight - this.$.footer.clientHeight - this._scrollLineHeight;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Preserve accessor to the legacy scrolling functionality\n      this.$.outerscroller = document.createElement('div');\n\n      this.scrollTarget = this.$.table;\n\n      this.addEventListener('wheel', this._onWheel);\n\n      this.$.items.addEventListener('focusin', (e) => {\n        const itemsIndex = e.composedPath().indexOf(this.$.items);\n        this._rowWithFocusedElement = e.composedPath()[itemsIndex - 1];\n      });\n      this.$.items.addEventListener('focusout', () => (this._rowWithFocusedElement = undefined));\n\n      // Reordering the physical rows cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => (this.__mouseDown = true));\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__pendingReorder = false;\n          setTimeout(() => this._reorderRows(), timeouts.SCROLLING);\n        }\n      });\n    }\n\n    /**\n     * Scroll to a specific row index in the virtual list. Note that the row index is\n     * not always the same for any particular item. For example, sorting/filtering/expanding\n     * or collapsing hierarchical items can affect the row index related to an item.\n     *\n     * @param {number} index Row index to scroll to\n     */\n    scrollToIndex(index) {\n      this._accessIronListAPI(() => super.scrollToIndex(index));\n    }\n\n    /** @private */\n    _onWheel(e) {\n      if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n        return;\n      }\n\n      const table = this.$.table;\n\n      let deltaY = e.deltaY;\n      if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        // Scrolling by \"lines of text\" instead of pixels\n        deltaY *= this._scrollLineHeight;\n      } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n        // Scrolling by \"pages\" instead of pixels\n        deltaY *= this._scrollPageHeight;\n      }\n\n      if (this._wheelAnimationFrame) {\n        // Skip new wheel events while one is being processed\n        this._deltaYAcc += deltaY;\n        e.preventDefault();\n        return;\n      }\n\n      deltaY += this._deltaYAcc;\n      this._deltaYAcc = 0;\n\n      this._wheelAnimationFrame = true;\n      this._debouncerWheelAnimationFrame = Debouncer.debounce(\n        this._debouncerWheelAnimationFrame,\n        animationFrame,\n        () => (this._wheelAnimationFrame = false)\n      );\n\n      const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n      if (this._canScroll(table, e.deltaX, deltaY)) {\n        e.preventDefault();\n        table.scrollTop += deltaY;\n        table.scrollLeft += e.deltaX;\n        this._scrollHandler();\n        this._hasResidualMomentum = true;\n\n        this._ignoreNewWheel = true;\n        this._debouncerIgnoreNewWheel = Debouncer.debounce(\n          this._debouncerIgnoreNewWheel,\n          timeOut.after(timeouts.IGNORE_WHEEL),\n          () => (this._ignoreNewWheel = false)\n        );\n      } else if ((this._hasResidualMomentum && momentum <= this._previousMomentum) || this._ignoreNewWheel) {\n        e.preventDefault();\n      } else if (momentum > this._previousMomentum) {\n        this._hasResidualMomentum = false;\n      }\n      this._previousMomentum = momentum;\n    }\n\n    /**\n     * Determines if the element has an ancestor prior to this\n     * cell content that handles the scroll delta\n     * @private\n     */\n    _hasScrolledAncestor(el, deltaX, deltaY) {\n      if (el.localName === 'vaadin-grid-cell-content') {\n        return false;\n      } else if (\n        this._canScroll(el, deltaX, deltaY) &&\n        ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1\n      ) {\n        return true;\n      } else if (el !== this && el.parentElement) {\n        return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n      }\n    }\n\n    /**\n     * Determines if the the given scroll deltas can be applied to the element\n     * (fully or partially)\n     * @private\n     */\n    _canScroll(el, deltaX, deltaY) {\n      return (\n        (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n        (deltaY < 0 && el.scrollTop > 0) ||\n        (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n        (deltaX < 0 && el.scrollLeft > 0)\n      );\n    }\n\n    /** @private */\n    _scheduleScrolling() {\n      if (!this._scrollingFrame) {\n        // Defer setting state attributes to avoid Edge hiccups\n        this._scrollingFrame = requestAnimationFrame(() => this._toggleAttribute('scrolling', true, this.$.scroller));\n      }\n      this._debounceScrolling = Debouncer.debounce(this._debounceScrolling, timeOut.after(timeouts.SCROLLING), () => {\n        cancelAnimationFrame(this._scrollingFrame);\n        delete this._scrollingFrame;\n        this._toggleAttribute('scrolling', false, this.$.scroller);\n        this._reorderRows();\n      });\n    }\n\n    /** @private */\n    _afterScroll() {\n      this._translateStationaryElements();\n\n      if (!this.hasAttribute('reordering')) {\n        this._scheduleScrolling();\n      }\n\n      this._updateOverflow();\n    }\n\n    /** @private */\n    _updateOverflow() {\n      // Set overflow styling attributes\n      let overflow = '';\n      const table = this.$.table;\n      if (table.scrollTop < table.scrollHeight - table.clientHeight) {\n        overflow += ' bottom';\n      }\n\n      if (table.scrollTop > 0) {\n        overflow += ' top';\n      }\n\n      if (table.scrollLeft < table.scrollWidth - table.clientWidth) {\n        overflow += ' right';\n      }\n\n      if (table.scrollLeft > 0) {\n        overflow += ' left';\n      }\n\n      this._debounceOverflow = Debouncer.debounce(this._debounceOverflow, animationFrame, () => {\n        const value = overflow.trim();\n        if (value.length > 0 && this.getAttribute('overflow') !== value) {\n          this.setAttribute('overflow', value);\n        } else if (value.length == 0 && this.hasAttribute('overflow')) {\n          this.removeAttribute('overflow');\n        }\n      });\n    }\n\n    /**\n     * Correct order needed for preserving correct tab order between cell contents.\n     * @private\n     */\n    _reorderRows() {\n      if (this.__mouseDown) {\n        this.__pendingReorder = true;\n        return;\n      }\n\n      const body = this.$.items;\n      const items = body.querySelectorAll('tr');\n      if (!items.length) {\n        return;\n      }\n\n      const adjustedVirtualStart = this._virtualStart + this._vidxOffset;\n\n      // Which row to use as a target?\n      const targetRow = this._rowWithFocusedElement || Array.from(items).filter((row) => !row.hidden)[0];\n      if (!targetRow) {\n        // All rows are hidden, don't reorder\n        return;\n      }\n\n      // Where the target row should be?\n      const targetPhysicalIndex = targetRow.index - adjustedVirtualStart;\n\n      // Reodrer the DOM elements to keep the target row at the target physical index\n      const delta = Array.from(items).indexOf(targetRow) - targetPhysicalIndex;\n      if (delta > 0) {\n        for (let i = 0; i < delta; i++) {\n          body.appendChild(items[i]);\n        }\n      } else if (delta < 0) {\n        for (let i = items.length + delta; i < items.length; i++) {\n          body.insertBefore(items[i], items[0]);\n        }\n      }\n\n      // Due to a rendering bug, reordering the rows can make the sticky header disappear on Safari\n      // if the grid is used inside of a flex box. This is a workaround for the issue.\n      if (this._safari) {\n        const { transform } = this.$.header.style;\n        this.$.header.style.transform = '';\n        setTimeout(() => (this.$.header.style.transform = transform));\n      }\n    }\n\n    /** @protected */\n    _frozenCellsChanged() {\n      this._debouncerCacheElements = Debouncer.debounce(this._debouncerCacheElements, microTask, () => {\n        Array.from(this.shadowRoot.querySelectorAll('[part~=\"cell\"]')).forEach(function (cell) {\n          cell.style.transform = '';\n        });\n        this._frozenCells = Array.prototype.slice.call(this.$.table.querySelectorAll('[frozen]'));\n        this._updateScrollerMeasurements();\n        this._translateStationaryElements();\n      });\n      this._updateLastFrozen();\n    }\n\n    /** @protected */\n    _updateScrollerMeasurements() {\n      if (this._frozenCells.length > 0 && this.__isRTL) {\n        this.__scrollerMetrics = {\n          scrollWidth: this.$.table.scrollWidth,\n          clientWidth: this.$.table.clientWidth\n        };\n      }\n    }\n\n    /** @protected */\n    _updateLastFrozen() {\n      if (!this._columnTree) {\n        return;\n      }\n\n      const columnsRow = this._columnTree[this._columnTree.length - 1].slice(0);\n      columnsRow.sort((a, b) => {\n        return a._order - b._order;\n      });\n      const lastFrozen = columnsRow.reduce((prev, col, index) => {\n        col._lastFrozen = false;\n        return col.frozen && !col.hidden ? index : prev;\n      }, undefined);\n      if (lastFrozen !== undefined) {\n        columnsRow[lastFrozen]._lastFrozen = true;\n      }\n    }\n\n    /** @private */\n    _translateStationaryElements() {\n      const scrollLeft = Math.max(0, this._scrollLeft);\n      const scrollTop = Math.max(0, this._scrollTop);\n\n      let leftOffset = 0;\n      let topOffset = 0;\n      let footerOffset = 0;\n      if (!this._useSticky) {\n        leftOffset = scrollLeft;\n        topOffset = scrollTop;\n        footerOffset = this.$.table.clientHeight - this.$.footer.offsetHeight - this.$.footer.offsetTop;\n      }\n\n      this.$.header.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset);\n      this.$.footer.style.transform = this._getTranslate(-scrollLeft + leftOffset, topOffset + footerOffset);\n      this.$.items.style.transform = this._getTranslate(-scrollLeft + leftOffset, 0);\n\n      if (this._frozenCells.length > 0) {\n        const x = this.__isRTL\n          ? this.__getNormalizedScrollLeft(this.$.table) +\n            this.__scrollerMetrics.clientWidth -\n            this.__scrollerMetrics.scrollWidth\n          : this._scrollLeft;\n        const frozenCellTransform = this._getTranslate(x, 0);\n\n        for (let i = 0; i < this._frozenCells.length; i++) {\n          this._frozenCells[i].style.transform = frozenCellTransform;\n        }\n      }\n    }\n\n    /** @private */\n    _getTranslate(x, y) {\n      return `translate(${x}px, ${y}px)`;\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst SelectionMixin = (superClass) =>\n  class SelectionMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array that contains the selected items.\n         * @type {Array<GridItem>}\n         */\n        selectedItems: {\n          type: Object,\n          notify: true,\n          value: () => []\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_selectedItemsChanged(selectedItems.*)'];\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isSelected(item) {\n      return this.selectedItems && this._getItemIndexInArray(item, this.selectedItems) > -1;\n    }\n\n    /**\n     * Selects the given item.\n     *\n     * @method selectItem\n     * @param {!GridItem} item The item object\n     */\n    selectItem(item) {\n      if (!this._isSelected(item)) {\n        this.push('selectedItems', item);\n      }\n    }\n\n    /**\n     * Deselects the given item if it is already selected.\n     *\n     * @method deselect\n     * @param {!GridItem} item The item object\n     */\n    deselectItem(item) {\n      const index = this._getItemIndexInArray(item, this.selectedItems);\n      if (index > -1) {\n        this.splice('selectedItems', index, 1);\n      }\n    }\n\n    /**\n     * Toggles the selected state of the given item.\n     *\n     * @method toggle\n     * @param {!GridItem} item The item object\n     * @protected\n     */\n    _toggleItem(item) {\n      const index = this._getItemIndexInArray(item, this.selectedItems);\n      if (index === -1) {\n        this.selectItem(item);\n      } else {\n        this.deselectItem(item);\n      }\n    }\n\n    /** @private */\n    _selectedItemsChanged(e) {\n      if (this.$.items.children.length && (e.path === 'selectedItems' || e.path === 'selectedItems.splices')) {\n        Array.from(this.$.items.children).forEach((row) => {\n          this._updateItem(row, row._item);\n        });\n      }\n    }\n\n    /** @private */\n    _selectedInstanceChangedCallback(instance, value) {\n      if (value) {\n        this.selectItem(instance.item);\n      } else {\n        this.deselectItem(instance.item);\n      }\n    }\n\n    /**\n     * Fired when the `selectedItems` property changes.\n     *\n     * @event selected-items-changed\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst SortMixin = (superClass) =>\n  class SortMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n         * @attr {boolean} multi-sort\n         * @type {boolean}\n         */\n        multiSort: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * @type {!Array<!GridSorter>}\n         * @protected\n         */\n        _sorters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        },\n\n        /** @private */\n        _previousSorters: {\n          type: Array,\n          value: function () {\n            return [];\n          }\n        }\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('sorter-changed', this._onSorterChanged);\n    }\n\n    /** @private */\n    _onSorterChanged(e) {\n      const sorter = e.target;\n      e.stopPropagation();\n      this.__updateSorter(sorter);\n      this.__applySorters();\n    }\n\n    /** @private */\n    __removeSorters(sortersToRemove) {\n      if (sortersToRemove.length == 0) {\n        return;\n      }\n\n      this._sorters = this._sorters.filter((sorter) => sortersToRemove.indexOf(sorter) < 0);\n      if (this.multiSort) {\n        this.__updateSortOrders();\n      }\n      this.__applySorters();\n    }\n\n    /** @private */\n    __updateSortOrders() {\n      this._sorters.forEach((sorter, index) => (sorter._order = this._sorters.length > 1 ? index : null), this);\n    }\n\n    /** @private */\n    __updateSorter(sorter) {\n      if (!sorter.direction && this._sorters.indexOf(sorter) === -1) {\n        return;\n      }\n\n      sorter._order = null;\n\n      if (this.multiSort) {\n        this._removeArrayItem(this._sorters, sorter);\n        if (sorter.direction) {\n          this._sorters.unshift(sorter);\n        }\n        this.__updateSortOrders();\n      } else {\n        if (sorter.direction) {\n          const otherSorters = this._sorters.filter((s) => s != sorter);\n          this._sorters = [sorter];\n          otherSorters.forEach((sorter) => {\n            sorter._order = null;\n            sorter.direction = null;\n          });\n        }\n      }\n    }\n\n    /** @private */\n    __applySorters() {\n      if (\n        this.dataProvider &&\n        // No need to clear cache if sorters didn't change and grid is attached\n        this.isAttached &&\n        JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())\n      ) {\n        this.clearCache();\n      }\n\n      this._a11yUpdateSorters();\n\n      this._previousSorters = this._mapSorters();\n    }\n\n    /**\n     * @return {!Array<!GridSorter>}\n     * @protected\n     */\n    _mapSorters() {\n      return this._sorters.map((sorter) => {\n        return {\n          path: sorter.path,\n          direction: sorter.direction\n        };\n      });\n    }\n\n    /** @private */\n    _removeArrayItem(array, item) {\n      const index = array.indexOf(item);\n      if (index > -1) {\n        array.splice(index, 1);\n      }\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst StylingMixin = (superClass) =>\n  class StylingMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * A function that allows generating CSS class names for grid cells\n         * based on their row and column. The return value should be the generated\n         * class name as a string, or multiple class names separated by whitespace\n         * characters.\n         *\n         * Receives two arguments:\n         * - `column` The `<vaadin-grid-column>` element (`undefined` for details-cell).\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridCellClassNameGenerator | null | undefined}\n         */\n        cellClassNameGenerator: Function\n      };\n    }\n\n    static get observers() {\n      return ['__cellClassNameGeneratorChanged(cellClassNameGenerator)'];\n    }\n\n    __cellClassNameGeneratorChanged() {\n      this.generateCellClassNames();\n    }\n\n    /**\n     * Runs the `cellClassNameGenerator` for the visible cells.\n     * If the generator depends on varying conditions, you need to\n     * call this function manually in order to update the styles when\n     * the conditions change.\n     */\n    generateCellClassNames() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden)\n        .forEach((row) => this._generateCellClassNames(row, this.__getRowModel(row)));\n    }\n\n    /** @private */\n    _generateCellClassNames(row, model) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell.__generatedClasses) {\n          cell.__generatedClasses.forEach((className) => cell.classList.remove(className));\n        }\n        if (this.cellClassNameGenerator) {\n          const result = this.cellClassNameGenerator(cell._column, model);\n          cell.__generatedClasses = result && result.split(' ').filter((className) => className.length > 0);\n          if (cell.__generatedClasses) {\n            cell.__generatedClasses.forEach((className) => cell.classList.add(className));\n          }\n        }\n      });\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst DropMode = {\n  BETWEEN: 'between',\n  ON_TOP: 'on-top',\n  ON_TOP_OR_BETWEEN: 'on-top-or-between',\n  ON_GRID: 'on-grid'\n};\n\nconst DropLocation = {\n  ON_TOP: 'on-top',\n  ABOVE: 'above',\n  BELOW: 'below',\n  EMPTY: 'empty'\n};\n\n/**\n * @polymerMixin\n */\nconst DragAndDropMixin = (superClass) =>\n  class DragAndDropMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Defines the locations within the Grid row where an element can be dropped.\n         *\n         * Possible values are:\n         * - `between`: The drop event can happen between Grid rows.\n         * - `on-top`: The drop event can happen on top of Grid rows.\n         * - `on-top-or-between`: The drop event can happen either on top of or between Grid rows.\n         * - `on-grid`: The drop event will not happen on any specific row, it will show the drop target outline around the whole grid.\n         * @attr {between|on-top|on-top-or-between|on-grid} drop-mode\n         * @type {GridDropMode | null | undefined}\n         */\n        dropMode: String,\n\n        /**\n         * Marks the grid's rows to be available for dragging.\n         * @attr {boolean} rows-draggable\n         */\n        rowsDraggable: Boolean,\n\n        /**\n         * A function that filters dragging of specific grid rows. The return value should be false\n         * if dragging of the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dragFilter: Function,\n\n        /**\n         * A function that filters dropping on specific grid rows. The return value should be false\n         * if dropping on the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dropFilter: Function,\n\n        /** @private */\n        __dndAutoScrollThreshold: {\n          value: 50\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.$.table.addEventListener('dragstart', this._onDragStart.bind(this));\n      this.$.table.addEventListener('dragend', this._onDragEnd.bind(this));\n      this.$.table.addEventListener('dragover', this._onDragOver.bind(this));\n      this.$.table.addEventListener('dragleave', this._onDragLeave.bind(this));\n      this.$.table.addEventListener('drop', this._onDrop.bind(this));\n      this.$.table.addEventListener('dragenter', (e) => {\n        if (this.dropMode) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      });\n    }\n\n    /** @private */\n    _onDragStart(e) {\n      if (this.rowsDraggable) {\n        let row = e.target;\n        if (row.localName === 'vaadin-grid-cell-content') {\n          // The draggable node is the cell content element on browsers that support native shadow\n          row = row.assignedSlot.parentNode.parentNode;\n        }\n        if (row.parentNode !== this.$.items) {\n          return;\n        }\n\n        e.stopPropagation();\n        this._toggleAttribute('dragging-rows', true, this);\n\n        if (this._safari) {\n          // Safari doesn't get proper drag images from transformed\n          // elements so we need to switch to top temporarily\n          const transform = row.style.transform;\n          row.style.top = /translateY\\((.*)\\)/.exec(transform)[1];\n          row.style.transform = 'none';\n          requestAnimationFrame(() => {\n            row.style.top = '';\n            row.style.transform = transform;\n          });\n        }\n\n        const rowRect = row.getBoundingClientRect();\n\n        if (this._ios) {\n          e.dataTransfer.setDragImage(row);\n        } else {\n          e.dataTransfer.setDragImage(row, e.clientX - rowRect.left, e.clientY - rowRect.top);\n        }\n\n        let rows = [row];\n        if (this._isSelected(row._item)) {\n          rows = this.__getViewportRows()\n            .filter((row) => this._isSelected(row._item))\n            .filter((row) => !this.dragFilter || this.dragFilter(this.__getRowModel(row)));\n        }\n\n        // Set the default transfer data\n        e.dataTransfer.setData('text', this.__formatDefaultTransferData(rows));\n\n        row.setAttribute('dragstart', rows.length > 1 ? rows.length : '');\n        this.updateStyles({\n          '--_grid-drag-start-x': `${e.clientX - rowRect.left + 20}px`,\n          '--_grid-drag-start-y': `${e.clientY - rowRect.top + 10}px`\n        });\n\n        requestAnimationFrame(() => {\n          row.removeAttribute('dragstart');\n          this.updateStyles({ '--_grid-drag-start-x': '', '--_grid-drag-start-y': '' });\n        });\n\n        const event = new CustomEvent('grid-dragstart', {\n          detail: {\n            draggedItems: rows.map((row) => row._item),\n            setDragData: (type, data) => e.dataTransfer.setData(type, data),\n            setDraggedItemsCount: (count) => row.setAttribute('dragstart', count)\n          }\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    _onDragEnd(e) {\n      this._toggleAttribute('dragging-rows', false, this);\n      e.stopPropagation();\n      const event = new CustomEvent('grid-dragend');\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n\n    /** @private */\n    _onDragLeave(e) {\n      e.stopPropagation();\n      this._clearDragStyles();\n    }\n\n    /** @private */\n    _onDragOver(e) {\n      if (this.dropMode) {\n        this._dropLocation = undefined;\n        this._dragOverItem = undefined;\n\n        if (this.__dndAutoScroll(e.clientY)) {\n          this._clearDragStyles();\n          return;\n        }\n\n        let row = e.composedPath().filter((node) => node.localName === 'tr')[0];\n\n        if (!this._effectiveSize || this.dropMode === DropMode.ON_GRID) {\n          // The grid is empty or \"on-grid\" drop mode was used, always default to \"empty\"\n          this._dropLocation = DropLocation.EMPTY;\n        } else if (!row || row.parentNode !== this.$.items) {\n          // The dragover didn't occur on a body row but the grid has items\n          if (row) {\n            // The dragover occurred over a header/footer row\n            return;\n          } else if (this.dropMode === DropMode.BETWEEN || this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            // The drop mode allows setting the last row as the drag over item\n            row = Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .pop();\n            this._dropLocation = DropLocation.BELOW;\n          } else {\n            // Drop mode on-top used but the dragover didn't occur over one of the existing rows\n            return;\n          }\n        } else {\n          // The dragover occurred on a body row, determine the drop location from coordinates\n          const rowRect = row.getBoundingClientRect();\n\n          this._dropLocation = DropLocation.ON_TOP;\n\n          if (this.dropMode === DropMode.BETWEEN) {\n            const dropAbove = e.clientY - rowRect.top < rowRect.bottom - e.clientY;\n            this._dropLocation = dropAbove ? DropLocation.ABOVE : DropLocation.BELOW;\n          } else if (this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            if (e.clientY - rowRect.top < rowRect.height / 3) {\n              this._dropLocation = DropLocation.ABOVE;\n            } else if (e.clientY - rowRect.top > (rowRect.height / 3) * 2) {\n              this._dropLocation = DropLocation.BELOW;\n            }\n          }\n        }\n\n        if (row && row.hasAttribute('drop-disabled')) {\n          this._dropLocation = undefined;\n          return;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._dropLocation === DropLocation.EMPTY) {\n          this._toggleAttribute('dragover', true, this);\n        } else if (row) {\n          this._dragOverItem = row._item;\n          if (row.getAttribute('dragover') !== this._dropLocation) {\n            row.setAttribute('dragover', this._dropLocation);\n          }\n        } else {\n          this._clearDragStyles();\n        }\n      }\n    }\n\n    /** @private */\n    __dndAutoScroll(clientY) {\n      if (this.__dndAutoScrolling) {\n        return true;\n      }\n\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      const topDiff = headerBottom - clientY + this.__dndAutoScrollThreshold;\n      const bottomDiff = clientY - footerTop + this.__dndAutoScrollThreshold;\n      let scrollTopDelta = 0;\n\n      if (bottomDiff > 0) {\n        scrollTopDelta = bottomDiff * 2;\n      } else if (topDiff > 0) {\n        scrollTopDelta = -topDiff * 2;\n      }\n\n      if (scrollTopDelta) {\n        const scrollTop = this.$.table.scrollTop;\n        this.$.table.scrollTop += scrollTopDelta;\n        const scrollTopChanged = scrollTop !== this.$.table.scrollTop;\n        if (scrollTopChanged) {\n          this.__dndAutoScrolling = true;\n          // Disallow more auto-scrolls within 20ms\n          setTimeout(() => (this.__dndAutoScrolling = false), 20);\n          this._scrollHandler();\n          return true;\n        }\n      }\n    }\n\n    /** @private */\n    __getViewportRows() {\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      return Array.from(this.$.items.children).filter((row) => {\n        const rowRect = row.getBoundingClientRect();\n        return rowRect.bottom > headerBottom && rowRect.top < footerTop;\n      });\n    }\n\n    /** @protected */\n    _clearDragStyles() {\n      this.removeAttribute('dragover');\n      Array.from(this.$.items.children).forEach((row) => row.removeAttribute('dragover'));\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this.dropMode) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const dragData =\n          e.dataTransfer.types &&\n          Array.from(e.dataTransfer.types).map((type) => {\n            return {\n              type,\n              data: e.dataTransfer.getData(type)\n            };\n          });\n\n        this._clearDragStyles();\n\n        const event = new CustomEvent('grid-drop', {\n          bubbles: e.bubbles,\n          cancelable: e.cancelable,\n          detail: {\n            dropTargetItem: this._dragOverItem,\n            dropLocation: this._dropLocation,\n            dragData\n          }\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    __formatDefaultTransferData(rows) {\n      return rows\n        .map((row) => {\n          return Array.from(row.children)\n            .filter((cell) => !cell.hidden && cell.getAttribute('part').indexOf('details-cell') === -1)\n            .sort((a, b) => {\n              return a._column._order > b._column._order ? 1 : -1;\n            })\n            .map((cell) => cell._content.textContent.trim())\n            .filter((content) => content)\n            .join('\\t');\n        })\n        .join('\\n');\n    }\n\n    /** @private */\n    _dragDropAccessChanged() {\n      this.filterDragAndDrop();\n    }\n\n    /**\n     * Runs the `dragFilter` and `dropFilter` hooks for the visible cells.\n     * If the filter depends on varying conditions, you may need to\n     * call this function manually in order to update the draggability when\n     * the conditions change.\n     */\n    filterDragAndDrop() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden)\n        .forEach((row) => {\n          this._filterDragAndDrop(row, this.__getRowModel(row));\n        });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItemModel} model\n     * @protected\n     */\n    _filterDragAndDrop(row, model) {\n      const dragDisabled = !this.rowsDraggable || (this.dragFilter && !this.dragFilter(model));\n      const dropDisabled = !this.dropMode || (this.dropFilter && !this.dropFilter(model));\n\n      const draggableElements = Array.from(row.children).map((cell) => cell._content);\n\n      draggableElements.forEach((e) => {\n        if (dragDisabled) {\n          e.removeAttribute('draggable');\n        } else {\n          e.setAttribute('draggable', true);\n        }\n      });\n\n      this._toggleAttribute('drag-disabled', dragDisabled, row);\n      this._toggleAttribute('drop-disabled', dropDisabled, row);\n    }\n\n    /**\n     * Fired when starting to drag grid rows.\n     *\n     * @event grid-dragstart\n     * @param {Object} originalEvent The native dragstart event\n     * @param {Object} detail\n     * @param {Object} detail.draggedItems the items in the visible viewport that are dragged\n     * @param {Function} detail.setDraggedItemsCount Overrides the default number shown in the drag image on multi row drag.\n     * Parameter is of type number.\n     * @param {Function} detail.setDragData Sets dataTransfer data for the drag operation.\n     * Note that \"text\" is the only data type supported by all the browsers the grid currently supports (including IE11).\n     * The function takes two parameters:\n     * - type:string The type of the data\n     * - data:string The data\n     */\n\n    /**\n     * Fired when the dragging of the rows ends.\n     *\n     * @event grid-dragend\n     * @param {Object} originalEvent The native dragend event\n     */\n\n    /**\n     * Fired when a drop occurs on top of the grid.\n     *\n     * @event grid-drop\n     * @param {Object} originalEvent The native drop event\n     * @param {Object} detail\n     * @param {Object} detail.dropTargetItem The item of the grid row on which the drop occurred.\n     * @param {string} detail.dropLocation The position at which the drop event took place relative to a row.\n     * Depending on the dropMode value, the drop location can be one of the following\n     * - `on-top`: when the drop occurred on top of the row\n     * - `above`: when the drop occurred above the row\n     * - `below`: when the drop occurred below the row\n     * - `empty`: when the drop occurred over the grid, not relative to any specific row\n     * @param {string} detail.dragData An array of items with the payload as a string representation as the\n     * `data` property and the type of the data as `type` property.\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst KeyboardNavigationMixin = (superClass) =>\n  class KeyboardNavigationMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _headerFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _itemsFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /** @private */\n        _footerFocusable: {\n          type: Object,\n          observer: '_focusableChanged'\n        },\n\n        /** @private */\n        _navigatingIsHidden: Boolean,\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedItemIndex: {\n          type: Number,\n          value: 0\n        },\n\n        /** @private */\n        _focusedColumnOrder: Number\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this._ios || this._android) {\n        // Disable keyboard navigation on mobile devices\n        return;\n      }\n\n      this.addEventListener('keydown', this._onKeyDown);\n      this.addEventListener('keyup', this._onKeyUp);\n\n      this.addEventListener('focusin', this._onFocusIn);\n      this.addEventListener('focusout', this._onFocusOut);\n\n      // When focus goes from cell to another cell, focusin/focusout events do\n      // not escape the grid’s shadowRoot, thus listening inside the shadowRoot.\n      this.$.table.addEventListener('focusin', this._onCellFocusIn.bind(this));\n      this.$.table.addEventListener('focusout', this._onCellFocusOut.bind(this));\n\n      this.addEventListener('mousedown', () => {\n        this._toggleAttribute('navigating', false, this);\n        this._isMousedown = true;\n      });\n      this.addEventListener('mouseup', () => (this._isMousedown = false));\n    }\n\n    /** @private */\n    _focusableChanged(focusable, oldFocusable) {\n      if (oldFocusable) {\n        oldFocusable.setAttribute('tabindex', '-1');\n      }\n      if (focusable) {\n        focusable.setAttribute('tabindex', '0');\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onKeyDown(e) {\n      const key = e.key;\n\n      let keyGroup;\n      switch (key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'PageUp':\n        case 'PageDown':\n        case 'Home':\n        case 'End':\n          keyGroup = 'Navigation';\n          break;\n        case 'Enter':\n        case 'Escape':\n        case 'F2':\n          keyGroup = 'Interaction';\n          break;\n        case 'Tab':\n          keyGroup = 'Tab';\n          break;\n        case ' ':\n          keyGroup = 'Space';\n          break;\n      }\n\n      this._detectInteracting(e);\n      if (this.hasAttribute('interacting') && keyGroup !== 'Interaction') {\n        // When in the interacting mode, only the “Interaction” keys are handled.\n        keyGroup = undefined;\n      }\n\n      if (keyGroup) {\n        this[`_on${keyGroup}KeyDown`](e, key);\n      }\n    }\n\n    /** @private */\n    _ensureScrolledToIndex(index) {\n      const targetRowInDom = Array.from(this.$.items.children).filter((child) => child.index === index)[0];\n      if (!targetRowInDom) {\n        this._scrollToIndex(index);\n      }\n    }\n\n    /** @private */\n    _onNavigationKeyDown(e, key) {\n      this._scrollHandler();\n\n      e.preventDefault();\n\n      function indexOfChildElement(el) {\n        return Array.prototype.indexOf.call(el.parentNode.children, el);\n      }\n\n      const visibleItemsCount = this._lastVisibleIndex - this._firstVisibleIndex - 1;\n\n      let dx = 0,\n        dy = 0;\n      switch (key) {\n        case 'ArrowRight':\n          dx = this.__isRTL ? -1 : 1;\n          break;\n        case 'ArrowLeft':\n          dx = this.__isRTL ? 1 : -1;\n          break;\n        case 'Home':\n          dx = -Infinity;\n          e.ctrlKey && (dy = -Infinity);\n          break;\n        case 'End':\n          dx = Infinity;\n          e.ctrlKey && (dy = Infinity);\n          break;\n        case 'ArrowDown':\n          dy = 1;\n          break;\n        case 'ArrowUp':\n          dy = -1;\n          break;\n        case 'PageDown':\n          dy = visibleItemsCount;\n          break;\n        case 'PageUp':\n          dy = -visibleItemsCount;\n          break;\n      }\n\n      const activeCell = e.composedPath()[0];\n      const columnIndex = indexOfChildElement(activeCell);\n      const isRowDetails = this._elementMatches(activeCell, '[part~=\"details-cell\"]');\n\n      const activeRow = activeCell.parentNode;\n\n      const activeRowGroup = activeRow.parentNode;\n      const maxRowIndex = (activeRowGroup === this.$.items ? this._effectiveSize : activeRowGroup.children.length) - 1;\n\n      // Body rows have index property, otherwise DOM child index of the row is used.\n      const rowIndex =\n        activeRowGroup === this.$.items\n          ? this._focusedItemIndex !== undefined\n            ? this._focusedItemIndex\n            : activeRow.index\n          : indexOfChildElement(activeRow);\n\n      // Index of the destination row\n      let dstRowIndex = Math.max(0, Math.min(rowIndex + dy, maxRowIndex));\n\n      // Row details navigation logic\n      let dstIsRowDetails = false;\n      if (activeRowGroup === this.$.items) {\n        const item = activeRow._item;\n        const dstItem = this._cache.getItemForIndex(dstRowIndex);\n        // Should we navigate to row details?\n        if (isRowDetails) {\n          dstIsRowDetails = dy === 0;\n        } else {\n          dstIsRowDetails =\n            (dy === 1 && this._isDetailsOpened(item)) ||\n            (dy === -1 && dstRowIndex !== rowIndex && this._isDetailsOpened(dstItem));\n        }\n        // Should we navigate between details and regular cells of the same row?\n        if (dstIsRowDetails !== isRowDetails && ((dy === 1 && dstIsRowDetails) || (dy === -1 && !dstIsRowDetails))) {\n          dstRowIndex = rowIndex;\n        }\n      }\n\n      // Header and footer could have hidden rows, e. g., if none of the columns\n      // or groups on the given column tree level define template. Skip them\n      // in vertical keyboard navigation.\n      if (activeRowGroup !== this.$.items) {\n        if (dstRowIndex > rowIndex) {\n          while (dstRowIndex < maxRowIndex && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex++;\n          }\n        } else if (dstRowIndex < rowIndex) {\n          while (dstRowIndex > 0 && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex--;\n          }\n        }\n      }\n\n      // _focusedColumnOrder is memoized — this is to ensure predictable\n      // navigation when entering and leaving detail and column group cells.\n      if (this._focusedColumnOrder === undefined) {\n        if (isRowDetails) {\n          this._focusedColumnOrder = 0;\n        } else {\n          this._focusedColumnOrder = this._getColumns(activeRowGroup, rowIndex).filter((c) => !c.hidden)[\n            columnIndex\n          ]._order;\n        }\n      }\n\n      // Find orderedColumnIndex — the index of order closest matching the\n      // original _focusedColumnOrder in the sorted array of orders\n      // of the visible columns on the destination row.\n      const dstColumns = this._getColumns(activeRowGroup, dstRowIndex).filter((c) => !c.hidden);\n      const dstSortedColumnOrders = dstColumns.map((c) => c._order).sort((b, a) => b - a);\n      const maxOrderedColumnIndex = dstSortedColumnOrders.length - 1;\n      const orderedColumnIndex = dstSortedColumnOrders.indexOf(\n        dstSortedColumnOrders\n          .slice(0)\n          .sort((b, a) => Math.abs(b - this._focusedColumnOrder) - Math.abs(a - this._focusedColumnOrder))[0]\n      );\n\n      // Index of the destination column order\n      const dstOrderedColumnIndex =\n        dy === 0 && isRowDetails\n          ? orderedColumnIndex\n          : Math.max(0, Math.min(orderedColumnIndex + dx, maxOrderedColumnIndex));\n\n      if (dstOrderedColumnIndex !== orderedColumnIndex) {\n        // Horizontal movement invalidates stored _focusedColumnOrder\n        this._focusedColumnOrder = undefined;\n      }\n\n      // Ensure correct vertical scroll position, destination row is visible\n      if (activeRowGroup === this.$.items) {\n        this._ensureScrolledToIndex(dstRowIndex);\n      }\n\n      // This has to be set after scrolling, otherwise it can be removed by\n      // `_preventScrollerRotatingCellFocus(row, index)` during scrolling.\n      this._toggleAttribute('navigating', true, this);\n\n      const columnIndexByOrder = dstColumns.reduce((acc, col, i) => ((acc[col._order] = i), acc), {});\n      const dstColumnIndex = columnIndexByOrder[dstSortedColumnOrders[dstOrderedColumnIndex]];\n\n      // For body rows, use index property to find destination row, otherwise use DOM child index\n      const dstRow =\n        activeRowGroup === this.$.items\n          ? Array.from(activeRowGroup.children).filter((el) => el.index === dstRowIndex)[0]\n          : activeRowGroup.children[dstRowIndex];\n      if (!dstRow) {\n        return;\n      }\n\n      // Here we go!\n      const dstCell = dstIsRowDetails\n        ? Array.from(dstRow.children).filter((el) => this._elementMatches(el, '[part~=\"details-cell\"]'))[0]\n        : dstRow.children[dstColumnIndex];\n      this._scrollHorizontallyToCell(dstCell);\n      if (activeRowGroup === this.$.items) {\n        // When scrolling with repeated keydown, sometimes FocusEvent listeners\n        // are too late to update _focusedItemIndex. Ensure next keydown\n        // listener invocation gets updated _focusedItemIndex value.\n        this._focusedItemIndex = dstRowIndex;\n      }\n\n      if (activeRowGroup === this.$.items) {\n        const dstRect = dstCell.getBoundingClientRect();\n        const footerTop = this.$.footer.getBoundingClientRect().top;\n        const headerBottom = this.$.header.getBoundingClientRect().bottom;\n        if (dstRect.bottom > footerTop) {\n          this.$.table.scrollTop += dstRect.bottom - footerTop;\n          this._scrollHandler();\n        } else if (dstRect.top < headerBottom) {\n          this.$.table.scrollTop -= headerBottom - dstRect.top;\n          this._scrollHandler();\n        }\n      }\n\n      dstCell.focus();\n    }\n\n    /** @private */\n    _parseEventPath(path) {\n      const tableIndex = path.indexOf(this.$.table);\n      return {\n        rowGroup: path[tableIndex - 1],\n        row: path[tableIndex - 2],\n        cell: path[tableIndex - 3]\n      };\n    }\n\n    /** @private */\n    _onInteractionKeyDown(e, key) {\n      const localTarget = e.composedPath()[0];\n      const localTargetIsTextInput =\n        localTarget.localName === 'input' &&\n        !/^(button|checkbox|color|file|image|radio|range|reset|submit)$/i.test(localTarget.type);\n\n      let wantInteracting;\n      switch (key) {\n        case 'Enter':\n          wantInteracting = this.hasAttribute('interacting') ? !localTargetIsTextInput : true;\n          break;\n        case 'Escape':\n          wantInteracting = false;\n          break;\n        case 'F2':\n          wantInteracting = !this.hasAttribute('interacting');\n          break;\n      }\n\n      const { cell } = this._parseEventPath(e.composedPath());\n\n      if (this.hasAttribute('interacting') !== wantInteracting) {\n        if (wantInteracting) {\n          const focusTarget = cell._content.querySelector('[focus-target]') || cell._content.firstElementChild;\n          if (focusTarget) {\n            e.preventDefault();\n            focusTarget.focus();\n            this._toggleAttribute('interacting', true, this);\n            this._toggleAttribute('navigating', false, this);\n          }\n        } else {\n          e.preventDefault();\n          this._focusedColumnOrder = undefined;\n          cell.focus();\n          this._toggleAttribute('interacting', false, this);\n          this._toggleAttribute('navigating', true, this);\n        }\n      }\n    }\n\n    /** @private */\n    _predictFocusStepTarget(srcElement, step) {\n      const tabOrder = [\n        this.$.table,\n        this._headerFocusable,\n        this._itemsFocusable,\n        this._footerFocusable,\n        this.$.focusexit\n      ];\n\n      let index = tabOrder.indexOf(srcElement);\n\n      index += step;\n      while (index >= 0 && index <= tabOrder.length - 1 && (!tabOrder[index] || tabOrder[index].parentNode.hidden)) {\n        index += step;\n      }\n\n      return tabOrder[index];\n    }\n\n    /** @private */\n    _onTabKeyDown(e) {\n      const focusTarget = this._predictFocusStepTarget(e.composedPath()[0], e.shiftKey ? -1 : 1);\n\n      if (focusTarget === this.$.table) {\n        // The focus is about to exit the grid to the top.\n        this.$.table.focus();\n      } else if (focusTarget === this.$.focusexit) {\n        // The focus is about to exit the grid to the bottom.\n        this.$.focusexit.focus();\n      } else if (focusTarget === this._itemsFocusable) {\n        let itemsFocusTarget = focusTarget;\n        const targetRow = this._itemsFocusable.parentNode;\n        this._ensureScrolledToIndex(this._focusedItemIndex);\n        if (targetRow.index !== this._focusedItemIndex) {\n          // The target row, which is about to be focused next, has been\n          // assigned with a new index since last focus, probably because of\n          // scrolling. Focus the row for the stored focused item index instead.\n          const columnIndex = Array.from(targetRow.children).indexOf(this._itemsFocusable);\n          const focusedItemRow = Array.from(this.$.items.children).filter(\n            (row) => row.index === this._focusedItemIndex\n          )[0];\n          if (focusedItemRow) {\n            itemsFocusTarget = focusedItemRow.children[columnIndex];\n          }\n        }\n        e.preventDefault();\n        itemsFocusTarget.focus();\n      } else {\n        e.preventDefault();\n        focusTarget.focus();\n      }\n\n      this._toggleAttribute('navigating', true, this);\n    }\n\n    /** @private */\n    _onSpaceKeyDown(e) {\n      e.preventDefault();\n\n      const cell = e.composedPath()[0];\n      if (!cell._content || !cell._content.firstElementChild) {\n        this.dispatchEvent(\n          new CustomEvent('cell-activate', {\n            detail: {\n              model: this.__getRowModel(cell.parentElement)\n            }\n          })\n        );\n      }\n    }\n\n    /** @private */\n    _onKeyUp(e) {\n      if (!/^( |SpaceBar)$/.test(e.key)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      const cell = e.composedPath()[0];\n      if (cell._content && cell._content.firstElementChild) {\n        const wasNavigating = this.hasAttribute('navigating');\n        cell._content.firstElementChild.click();\n        this._toggleAttribute('navigating', wasNavigating, this);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusIn(e) {\n      if (!this._isMousedown) {\n        this._toggleAttribute('navigating', true, this);\n      }\n\n      const rootTarget = e.composedPath()[0];\n\n      if (rootTarget === this.$.table || rootTarget === this.$.focusexit) {\n        // The focus enters the top (bottom) of the grid, meaning that user has\n        // tabbed (shift-tabbed) into the grid. Move the focus to\n        // the first (the last) focusable.\n        this._predictFocusStepTarget(rootTarget, rootTarget === this.$.table ? 1 : -1).focus();\n        this._toggleAttribute('interacting', false, this);\n      } else {\n        this._detectInteracting(e);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusOut(e) {\n      this._toggleAttribute('navigating', false, this);\n      this._detectInteracting(e);\n    }\n\n    /** @private */\n    _onCellFocusIn(e) {\n      this._detectInteracting(e);\n\n      if (e.composedPath().indexOf(this.$.table) === 3) {\n        const cell = e.composedPath()[0];\n        this._activeRowGroup = cell.parentNode.parentNode;\n        if (this._activeRowGroup === this.$.header) {\n          this._headerFocusable = cell;\n        } else if (this._activeRowGroup === this.$.items) {\n          this._itemsFocusable = cell;\n        } else if (this._activeRowGroup === this.$.footer) {\n          this._footerFocusable = cell;\n        }\n        // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n        cell._content.dispatchEvent(new CustomEvent('cell-focusin', { bubbles: false }));\n      }\n\n      this._detectFocusedItemIndex(e);\n    }\n\n    /** @private */\n    _onCellFocusOut(e) {\n      if (e.composedPath().indexOf(this.$.table) === 3) {\n        const cell = e.composedPath()[0];\n        // Inform cell content of the focus (used in <vaadin-grid-sorter>)\n        cell._content.dispatchEvent(new CustomEvent('cell-focusout', { bubbles: false }));\n      }\n    }\n\n    /** @private */\n    _detectInteracting(e) {\n      this._toggleAttribute(\n        'interacting',\n        e.composedPath().some((el) => el.localName === 'vaadin-grid-cell-content'),\n        this\n      );\n    }\n\n    /** @private */\n    _detectFocusedItemIndex(e) {\n      const { rowGroup, row } = this._parseEventPath(e.composedPath());\n      if (rowGroup === this.$.items) {\n        this._focusedItemIndex = row.index;\n      }\n    }\n\n    /**\n     * @param {!HTMLTableRowElement} row\n     * @param {number} index\n     * @protected\n     */\n    _preventScrollerRotatingCellFocus(row, index) {\n      if (\n        row.index === this._focusedItemIndex &&\n        this.hasAttribute('navigating') &&\n        this._activeRowGroup === this.$.items\n      ) {\n        // Focused item has went, hide navigation mode\n        this._navigatingIsHidden = true;\n        this._toggleAttribute('navigating', false, this);\n      }\n      if (index === this._focusedItemIndex && this._navigatingIsHidden) {\n        // Focused item is back, restore navigation mode\n        this._navigatingIsHidden = false;\n        this._toggleAttribute('navigating', true, this);\n      }\n    }\n\n    /**\n     * @param {HTMLTableSectionElement=} rowGroup\n     * @param {number=} rowIndex\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getColumns(rowGroup, rowIndex) {\n      let columnTreeLevel = this._columnTree.length - 1;\n      if (rowGroup === this.$.header) {\n        columnTreeLevel = rowIndex;\n      } else if (rowGroup === this.$.footer) {\n        columnTreeLevel = this._columnTree.length - 1 - rowIndex;\n      }\n      return this._columnTree[columnTreeLevel];\n    }\n\n    /** @protected */\n    _resetKeyboardNavigation() {\n      if (this.$.header.firstElementChild) {\n        this._headerFocusable = Array.from(this.$.header.firstElementChild.children).filter((el) => !el.hidden)[0];\n      }\n\n      if (this.$.items.firstElementChild) {\n        const firstVisibleIndexRow = this._iterateItems((pidx, vidx) => {\n          if (this._firstVisibleIndex === vidx) {\n            return this.$.items.children[pidx];\n          }\n        });\n        if (firstVisibleIndexRow) {\n          this._itemsFocusable = Array.from(firstVisibleIndexRow.children).filter((el) => !el.hidden)[0];\n        }\n      }\n\n      if (this.$.footer.firstElementChild) {\n        this._footerFocusable = Array.from(this.$.footer.firstElementChild.children).filter((el) => !el.hidden)[0];\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} dstCell\n     * @protected\n     */\n    _scrollHorizontallyToCell(dstCell) {\n      if (dstCell.hasAttribute('frozen') || this._elementMatches(dstCell, '[part~=\"details-cell\"]')) {\n        // These cells are, by design, always visible, no need to scroll.\n        return;\n      }\n\n      const dstCellRect = dstCell.getBoundingClientRect();\n      const dstRow = dstCell.parentNode;\n      const dstCellIndex = Array.from(dstRow.children).indexOf(dstCell);\n      const tableRect = this.$.table.getBoundingClientRect();\n      let leftBoundary = tableRect.left,\n        rightBoundary = tableRect.right;\n      for (let i = dstCellIndex - 1; i >= 0; i--) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          leftBoundary = cell.getBoundingClientRect().right;\n          break;\n        }\n      }\n      for (let i = dstCellIndex + 1; i < dstRow.children.length; i++) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this._elementMatches(cell, '[part~=\"details-cell\"]')) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          rightBoundary = cell.getBoundingClientRect().left;\n          break;\n        }\n      }\n\n      if (dstCellRect.left < leftBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.left - leftBoundary);\n      }\n      if (dstCellRect.right > rightBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.right - rightBoundary);\n      }\n    }\n\n    /** @private */\n    _elementMatches(el, query) {\n      return el.matches ? el.matches(query) : Array.from(el.parentNode.querySelectorAll(query)).indexOf(el) !== -1;\n    }\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ColumnReorderingMixin = (superClass) =>\n  class ColumnReorderingMixin extends GestureEventListeners(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Set to true to allow column reordering.\n         * @attr {boolean} column-reordering-allowed\n         * @type {boolean}\n         */\n        columnReorderingAllowed: {\n          type: Boolean,\n          value: false\n        },\n\n        /** @private */\n        _orderBaseScope: {\n          type: Number,\n          value: 10000000\n        }\n      };\n    }\n\n    static get observers() {\n      return ['_updateOrders(_columnTree, _columnTree.*)'];\n    }\n\n    ready() {\n      super.ready();\n      addListener(this, 'track', this._onTrackEvent);\n      this._reorderGhost = this.shadowRoot.querySelector('[part=\"reorder-ghost\"]');\n\n      this.addEventListener('touchstart', this._onTouchStart.bind(this));\n      this.addEventListener('touchmove', this._onTouchMove.bind(this));\n      this.addEventListener('touchend', this._onTouchEnd.bind(this));\n      this.addEventListener('contextmenu', this._onContextMenu.bind(this));\n    }\n\n    /** @private */\n    _onContextMenu(e) {\n      if (this.hasAttribute('reordering')) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _onTouchStart(e) {\n      // Touch event, delay activation by 100ms\n      this._startTouchReorderTimeout = setTimeout(() => {\n        this._onTrackStart({\n          detail: {\n            x: e.touches[0].clientX,\n            y: e.touches[0].clientY\n          }\n        });\n      }, 100);\n    }\n\n    /** @private */\n    _onTouchMove(e) {\n      if (this._draggedColumn) {\n        e.preventDefault();\n      }\n      clearTimeout(this._startTouchReorderTimeout);\n    }\n\n    /** @private */\n    _onTouchEnd() {\n      clearTimeout(this._startTouchReorderTimeout);\n      this._onTrackEnd();\n    }\n\n    /** @private */\n    _onTrackEvent(e) {\n      if (e.detail.state === 'start') {\n        const path = e.composedPath();\n        const headerCell = path[path.indexOf(this.$.header) - 2];\n        if (!headerCell || !headerCell._content) {\n          // Not a header column\n          return;\n        }\n\n        if (headerCell._content.contains(this.getRootNode().activeElement)) {\n          // Something was focused inside the cell\n          return;\n        }\n\n        if (this.$.scroller.hasAttribute('column-resizing')) {\n          // Resizing is in progress\n          return;\n        }\n\n        if (!this._touchDevice) {\n          // Not a touch device\n          this._onTrackStart(e);\n        }\n      } else if (e.detail.state === 'track') {\n        this._onTrack(e);\n      } else if (e.detail.state === 'end') {\n        this._onTrackEnd(e);\n      }\n    }\n\n    /** @private */\n    _onTrackStart(e) {\n      if (!this.columnReorderingAllowed) {\n        return;\n      }\n\n      // Cancel reordering if there are draggable nodes on the event path\n      const path = e.composedPath && e.composedPath();\n      if (path && path.filter((node) => node.hasAttribute && node.hasAttribute('draggable'))[0]) {\n        return;\n      }\n\n      const headerCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!headerCell || headerCell.getAttribute('part').indexOf('header-cell') === -1) {\n        return;\n      }\n\n      this._toggleAttribute('reordering', true, this);\n      this._draggedColumn = headerCell._column;\n      while (this._draggedColumn.parentElement.childElementCount === 1) {\n        // This is the only column in the group, drag the whole group instead\n        this._draggedColumn = this._draggedColumn.parentElement;\n      }\n      this._setSiblingsReorderStatus(this._draggedColumn, 'allowed');\n      this._draggedColumn._reorderStatus = 'dragging';\n\n      this._updateGhost(headerCell);\n      this._reorderGhost.style.visibility = 'visible';\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._autoScroller();\n    }\n\n    /** @private */\n    _onTrack(e) {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      const targetCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!targetCell) {\n        return;\n      }\n\n      const targetColumn = this._getTargetColumn(targetCell, this._draggedColumn);\n      if (\n        this._isSwapAllowed(this._draggedColumn, targetColumn) &&\n        this._isSwappableByPosition(targetColumn, e.detail.x)\n      ) {\n        this._swapColumnOrders(this._draggedColumn, targetColumn);\n      }\n\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._lastDragClientX = e.detail.x;\n    }\n\n    /** @private */\n    _onTrackEnd() {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      this._toggleAttribute('reordering', false, this);\n      this._draggedColumn._reorderStatus = '';\n      this._setSiblingsReorderStatus(this._draggedColumn, '');\n      this._draggedColumn = null;\n      this._lastDragClientX = null;\n      this._reorderGhost.style.visibility = 'hidden';\n\n      this.dispatchEvent(\n        new CustomEvent('column-reorder', {\n          detail: {\n            columns: this._getColumnsInOrder()\n          }\n        })\n      );\n    }\n\n    /**\n     * @return {!Array<!GridColumnElement>}\n     * @protected\n     */\n    _getColumnsInOrder() {\n      return this._columnTree\n        .slice(0)\n        .pop()\n        .filter((c) => !c.hidden)\n        .sort((b, a) => b._order - a._order);\n    }\n\n    /**\n     * @param {number} x\n     * @param {number} y\n     * @return {HTMLElement | undefined}\n     * @protected\n     */\n    _cellFromPoint(x, y) {\n      x = x || 0;\n      y = y || 0;\n      if (!this._draggedColumn) {\n        this._toggleAttribute('no-content-pointer-events', true, this.$.scroller);\n      }\n      const cell = this.shadowRoot.elementFromPoint(x, y);\n      this._toggleAttribute('no-content-pointer-events', false, this.$.scroller);\n\n      // Make sure the element is actually a cell\n      if (cell && cell._column) {\n        return cell;\n      }\n    }\n\n    /**\n     * @param {number} eventClientX\n     * @param {number} eventClientY\n     * @protected\n     */\n    _updateGhostPosition(eventClientX, eventClientY) {\n      const ghostRect = this._reorderGhost.getBoundingClientRect();\n      // // This is where we want to position the ghost\n      const targetLeft = eventClientX - ghostRect.width / 2;\n      const targetTop = eventClientY - ghostRect.height / 2;\n      // Current position\n      const _left = parseInt(this._reorderGhost._left || 0);\n      const _top = parseInt(this._reorderGhost._top || 0);\n      // Reposition the ghost\n      this._reorderGhost._left = _left - (ghostRect.left - targetLeft);\n      this._reorderGhost._top = _top - (ghostRect.top - targetTop);\n      this._reorderGhost.style.transform = `translate(${this._reorderGhost._left}px, ${this._reorderGhost._top}px)`;\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @return {!HTMLElement}\n     * @protected\n     */\n    _updateGhost(cell) {\n      const ghost = this._reorderGhost;\n      ghost.textContent = cell._content.innerText;\n      const style = window.getComputedStyle(cell);\n      [\n        'boxSizing',\n        'display',\n        'width',\n        'height',\n        'background',\n        'alignItems',\n        'padding',\n        'border',\n        'flex-direction',\n        'overflow'\n      ].forEach((propertyName) => (ghost.style[propertyName] = style[propertyName]));\n      return ghost;\n    }\n\n    /** @private */\n    _updateOrders(columnTree, splices) {\n      if (columnTree === undefined || splices === undefined) {\n        return;\n      }\n\n      // Reset all column orders\n      columnTree[0].forEach((column) => (column._order = 0));\n      // Set order numbers to top-level columns\n      columnTree[0].forEach((column, index) => (column._order = (index + 1) * this._orderBaseScope));\n    }\n\n    /**\n     * @param {!GridColumnElement} column\n     * @param {string} status\n     * @protected\n     */\n    _setSiblingsReorderStatus(column, status) {\n      Array.from(column.parentNode.children)\n        .filter((child) => /column/.test(child.localName) && this._isSwapAllowed(child, column))\n        .forEach((sibling) => (sibling._reorderStatus = status));\n    }\n\n    /** @protected */\n    _autoScroller() {\n      if (this._lastDragClientX) {\n        const rightDiff = this._lastDragClientX - this.getBoundingClientRect().right + 50;\n        const leftDiff = this.getBoundingClientRect().left - this._lastDragClientX + 50;\n\n        if (rightDiff > 0) {\n          this.$.table.scrollLeft += rightDiff / 10;\n        } else if (leftDiff > 0) {\n          this.$.table.scrollLeft -= leftDiff / 10;\n        }\n        this._scrollHandler();\n      }\n\n      if (this._draggedColumn) {\n        this.async(this._autoScroller, 10);\n      }\n    }\n\n    /**\n     * @param {GridColumnElement | undefined} column1\n     * @param {GridColumnElement | undefined} column2\n     * @return {boolean | undefined}\n     * @protected\n     */\n    _isSwapAllowed(column1, column2) {\n      if (column1 && column2) {\n        const differentColumns = column1 !== column2;\n        const sameParent = column1.parentElement === column2.parentElement;\n        const sameFrozen = column1.frozen === column2.frozen;\n        return differentColumns && sameParent && sameFrozen;\n      }\n    }\n\n    /**\n     * @param {!GridColumnElement} targetColumn\n     * @param {number} clientX\n     * @return {boolean}\n     * @protected\n     */\n    _isSwappableByPosition(targetColumn, clientX) {\n      const targetCell = Array.from(this.$.header.querySelectorAll('tr:not([hidden]) [part~=\"cell\"]')).filter((cell) =>\n        targetColumn.contains(cell._column)\n      )[0];\n      const sourceCellRect = this.$.header\n        .querySelector('tr:not([hidden]) [reorder-status=dragging]')\n        .getBoundingClientRect();\n      const targetRect = targetCell.getBoundingClientRect();\n      if (targetRect.left > sourceCellRect.left) {\n        return clientX > targetRect.right - sourceCellRect.width;\n      } else {\n        return clientX < targetRect.left + sourceCellRect.width;\n      }\n    }\n\n    /**\n     * @param {!GridColumnElement} column1\n     * @param {!GridColumnElement} column2\n     * @protected\n     */\n    _swapColumnOrders(column1, column2) {\n      const _order = column1._order;\n      column1._order = column2._order;\n      column2._order = _order;\n      this._updateLastFrozen();\n      this._updateFirstAndLastColumn();\n    }\n\n    /**\n     * @param {HTMLElement | undefined} targetCell\n     * @param {GridColumnElement} draggedColumn\n     * @return {GridColumnElement | undefined}\n     * @protected\n     */\n    _getTargetColumn(targetCell, draggedColumn) {\n      if (targetCell && draggedColumn) {\n        let candidate = targetCell._column;\n        while (candidate.parentElement !== draggedColumn.parentElement && candidate !== this) {\n          candidate = candidate.parentElement;\n        }\n        if (candidate.parentElement === draggedColumn.parentElement) {\n          return candidate;\n        } else {\n          return targetCell._column;\n        }\n      }\n    }\n\n    /**\n     * Fired when the columns in the grid are reordered.\n     *\n     * @event column-reorder\n     * @param {Object} detail\n     * @param {Object} detail.columns the columns in the new order\n     */\n  };\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nconst ColumnBaseMixin = (superClass) =>\n  class ColumnBaseMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When set to true, the column is user-resizable.\n         * @default false\n         */\n        resizable: {\n          type: Boolean,\n          value: function () {\n            if (this.localName === 'vaadin-grid-column-group') {\n              return;\n            }\n\n            const parent = this.parentNode;\n            if (parent && parent.localName === 'vaadin-grid-column-group') {\n              return parent.resizable || false;\n            } else {\n              return false;\n            }\n          }\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _headerTemplate: {\n          type: Object\n        },\n\n        /**\n         * @type {HTMLTemplateElement}\n         * @protected\n         */\n        _footerTemplate: {\n          type: Object\n        },\n\n        /**\n         * When true, the column is frozen. When a column inside of a column group is frozen,\n         * all of the sibling columns inside the group will get frozen also.\n         * @type {boolean}\n         */\n        frozen: {\n          type: Boolean,\n          value: false\n        },\n\n        /**\n         * When set to true, the cells for this column are hidden.\n         */\n        hidden: {\n          type: Boolean\n        },\n\n        /**\n         * Text content to display in the header cell of the column.\n         */\n        header: {\n          type: String\n        },\n\n        /**\n         * Aligns the columns cell content horizontally.\n         * Supported values: \"start\", \"center\" and \"end\".\n         * @attr {start|center|end} text-align\n         * @type {GridColumnTextAlign | null | undefined}\n         */\n        textAlign: {\n          type: String\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _lastFrozen: {\n          type: Boolean,\n          value: false\n        },\n\n        /** @protected */\n        _order: Number,\n\n        /** @private */\n        _reorderStatus: Boolean,\n\n        /**\n         * @type {Array<!HTMLElement>}\n         * @protected\n         */\n        _emptyCells: Array,\n\n        /** @private */\n        _headerCell: Object,\n\n        /** @private */\n        _footerCell: Object,\n\n        /** @protected */\n        _grid: Object,\n\n        /**\n         * Custom function for rendering the header content.\n         * Receives two arguments:\n         *\n         * - `root` The header cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        headerRenderer: Function,\n\n        /**\n         * Custom function for rendering the footer content.\n         * Receives two arguments:\n         *\n         * - `root` The footer cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        footerRenderer: Function\n      };\n    }\n\n    static get observers() {\n      return [\n        '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n        '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n        '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n        '_pathOrHeaderChanged(path, header, _headerCell, _footerCell, _cells.*, renderer, headerRenderer, _bodyTemplate, _headerTemplate)',\n        '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n        '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n        '_lastFrozenChanged(_lastFrozen)',\n        '_setBodyTemplateOrRenderer(_bodyTemplate, renderer, _cells, _cells.*)',\n        '_setHeaderTemplateOrRenderer(_headerTemplate, headerRenderer, _headerCell)',\n        '_setFooterTemplateOrRenderer(_footerTemplate, footerRenderer, _footerCell)',\n        '_resizableChanged(resizable, _headerCell)',\n        '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n        '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)'\n      ];\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      this._bodyTemplate && (this._bodyTemplate.templatizer._grid = this._grid);\n      this._headerTemplate && (this._headerTemplate.templatizer._grid = this._grid);\n      this._footerTemplate && (this._footerTemplate.templatizer._grid = this._grid);\n\n      this._templateObserver.flush();\n      if (!this._bodyTemplate) {\n        // The observer might not have triggered if the tag is empty. Run manually.\n        this._templateObserver.callback();\n      }\n\n      requestAnimationFrame(() => {\n        this._allCells.forEach((cell) => {\n          if (!cell._content.parentNode) {\n            this._grid && this._grid.appendChild(cell._content);\n          }\n        });\n      });\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      requestAnimationFrame(() => {\n        if (!this._findHostGrid()) {\n          this._allCells.forEach((cell) => {\n            if (cell._content.parentNode) {\n              cell._content.parentNode.removeChild(cell._content);\n            }\n          });\n        }\n      });\n\n      this._gridValue = undefined;\n    }\n\n    /**\n     * @return {!GridElement | undefined}\n     * @protected\n     */\n    _findHostGrid() {\n      let el = this;\n      // Custom elements extending grid must have a specific localName\n      while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n        el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n      }\n      return el || undefined;\n    }\n\n    /**\n     * @return {!GridElement | undefined}\n     * @protected\n     */\n    get _grid() {\n      if (!this._gridValue) {\n        this._gridValue = this._findHostGrid();\n      }\n      return this._gridValue;\n    }\n\n    /**\n     * @return {!Array<!HTMLElement>}\n     * @protected\n     */\n    get _allCells() {\n      return []\n        .concat(this._cells || [])\n        .concat(this._emptyCells || [])\n        .concat(this._headerCell)\n        .concat(this._footerCell)\n        .filter((cell) => cell);\n    }\n\n    constructor() {\n      super();\n\n      this._templateObserver = new FlattenedNodesObserver(this, () => {\n        this._headerTemplate = this._prepareHeaderTemplate();\n        this._footerTemplate = this._prepareFooterTemplate();\n        this._bodyTemplate = this._prepareBodyTemplate();\n      });\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareHeaderTemplate() {\n      return this._prepareTemplatizer(this._findTemplate(true) || null, {});\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareFooterTemplate() {\n      return this._prepareTemplatizer(this._findTemplate(false, true) || null, {});\n    }\n\n    /**\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareBodyTemplate() {\n      return this._prepareTemplatizer(this._findTemplate() || null);\n    }\n\n    /**\n     * @param {HTMLTemplateElement} template\n     * @param {object} instanceProps\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _prepareTemplatizer(template, instanceProps) {\n      if (template && !template.templatizer) {\n        const templatizer = new GridTemplatizer();\n        templatizer._grid = this._grid;\n        templatizer.dataHost = this.dataHost;\n        templatizer._instanceProps = instanceProps || templatizer._instanceProps;\n        templatizer.template = template;\n        template.templatizer = templatizer;\n      }\n\n      return template;\n    }\n\n    /** @protected */\n    _renderHeaderAndFooter() {\n      if (this.headerRenderer && this._headerCell) {\n        this.__runRenderer(this.headerRenderer, this._headerCell);\n      }\n      if (this.footerRenderer && this._footerCell) {\n        this.__runRenderer(this.footerRenderer, this._footerCell);\n      }\n    }\n\n    /** @private */\n    __runRenderer(renderer, cell, model) {\n      const args = [cell._content, this];\n      if (model && model.item) {\n        args.push(model);\n      }\n      renderer.apply(this, args);\n    }\n\n    /** @private */\n    __setColumnTemplateOrRenderer(template, renderer, cells) {\n      // no renderer or template needed in a hidden column\n      if (this.hidden) {\n        return;\n      }\n\n      if (template && renderer) {\n        throw new Error('You should only use either a renderer or a template');\n      }\n\n      cells.forEach((cell) => {\n        const model = this._grid.__getRowModel(cell.parentElement);\n\n        if (renderer) {\n          cell._renderer = renderer;\n\n          if (model.item || renderer === this.headerRenderer || renderer === this.footerRenderer) {\n            this.__runRenderer(renderer, cell, model);\n          }\n        } else if (cell._template !== template) {\n          cell._template = template;\n\n          cell._content.innerHTML = '';\n          template.templatizer._grid = template.templatizer._grid || this._grid;\n          const inst = template.templatizer.createInstance();\n          cell._content.appendChild(inst.root);\n          cell._instance = inst;\n          if (model.item) {\n            cell._instance.setProperties(model);\n          }\n        }\n      });\n    }\n\n    /** @private */\n    _setBodyTemplateOrRenderer(template, renderer, cells) {\n      if ((template || renderer) && cells) {\n        this.__setColumnTemplateOrRenderer(template, renderer, cells);\n      }\n    }\n\n    /** @private */\n    _setHeaderTemplateOrRenderer(headerTemplate, headerRenderer, headerCell) {\n      if ((headerTemplate || headerRenderer) && headerCell) {\n        this.__setColumnTemplateOrRenderer(headerTemplate, headerRenderer, [headerCell]);\n      }\n    }\n\n    /** @private */\n    _setFooterTemplateOrRenderer(footerTemplate, footerRenderer, footerCell) {\n      if ((footerTemplate || footerRenderer) && footerCell) {\n        this.__setColumnTemplateOrRenderer(footerTemplate, footerRenderer, [footerCell]);\n        this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n      }\n    }\n\n    /**\n     * @param {boolean} header\n     * @param {boolean} footer\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _selectFirstTemplate(header = false, footer = false) {\n      return FlattenedNodesObserver.getFlattenedNodes(this).filter(\n        (node) =>\n          node.localName === 'template' &&\n          node.classList.contains('header') === header &&\n          node.classList.contains('footer') === footer\n      )[0];\n    }\n\n    /**\n     * @param {boolean} header\n     * @param {boolean} footer\n     * @return {HTMLTemplateElement}\n     * @protected\n     */\n    _findTemplate(header, footer) {\n      const template = this._selectFirstTemplate(header, footer);\n      if (template) {\n        if (this.dataHost) {\n          // set dataHost to the context where template has been defined\n          template._rootDataHost = this.dataHost._rootDataHost || this.dataHost;\n        }\n      }\n      return template;\n    }\n\n    /** @private */\n    _flexGrowChanged(flexGrow) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('flexGrow');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.flexGrow = flexGrow));\n    }\n\n    /** @private */\n    _orderChanged(order) {\n      this._allCells.forEach((cell) => (cell.style.order = order));\n    }\n\n    /** @private */\n    _widthChanged(width) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('width');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.width = width));\n\n      // Force a reflow to workaround browser issues causing double scrollbars to grid\n      // https://github.com/vaadin/vaadin-grid/issues/1586\n      if (this._grid && this._grid.__forceReflow) {\n        this._grid.__forceReflow();\n      }\n    }\n\n    /** @private */\n    _frozenChanged(frozen) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('frozen', frozen);\n      }\n\n      this._allCells.forEach((cell) => this._toggleAttribute('frozen', frozen, cell));\n\n      this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n    }\n\n    /** @private */\n    _lastFrozenChanged(lastFrozen) {\n      this._allCells.forEach((cell) => this._toggleAttribute('last-frozen', lastFrozen, cell));\n\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._lastFrozen = lastFrozen;\n      }\n    }\n\n    /**\n     * @param {string | undefined} path\n     * @param {string | undefined} header\n     * @param {!HTMLTableCellElement | undefined} headerCell\n     * @param {!HTMLTableCellElement | undefined} footerCell\n     * @param {!object | undefined} cells\n     * @param {GridBodyRenderer | undefined} renderer\n     * @param {GridHeaderFooterRenderer | undefined} headerRenderer\n     * @param {HTMLTemplateElement | undefined} bodyTemplate\n     * @param {HTMLTemplateElement | undefined} headerTemplate\n     * @protected\n     */\n    _pathOrHeaderChanged(\n      path,\n      header,\n      headerCell,\n      footerCell,\n      cells,\n      renderer,\n      headerRenderer,\n      bodyTemplate,\n      headerTemplate\n    ) {\n      const hasHeaderText = header !== undefined;\n      if (!headerRenderer && !headerTemplate && hasHeaderText && headerCell) {\n        this.__setTextContent(headerCell._content, header);\n      }\n\n      if (path && cells.value) {\n        if (!renderer && !bodyTemplate) {\n          const pathRenderer = (root, owner, { item }) => this.__setTextContent(root, this.get(path, item));\n          this.__setColumnTemplateOrRenderer(undefined, pathRenderer, cells.value);\n        }\n\n        if (!headerRenderer && !headerTemplate && !hasHeaderText && headerCell && header !== null) {\n          this.__setTextContent(headerCell._content, this._generateHeader(path));\n        }\n      }\n\n      if (headerCell) {\n        this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n      }\n    }\n\n    /** @private */\n    __setTextContent(node, textContent) {\n      node.textContent !== textContent && (node.textContent = textContent);\n    }\n\n    /**\n     * @param {string} path\n     * @return {string}\n     * @protected\n     */\n    _generateHeader(path) {\n      return path\n        .substr(path.lastIndexOf('.') + 1)\n        .replace(/([A-Z])/g, '-$1')\n        .toLowerCase()\n        .replace(/-/g, ' ')\n        .replace(/^./, (match) => match.toUpperCase());\n    }\n\n    /**\n     * @param {string} name\n     * @param {boolean} bool\n     * @param {!Element} node\n     * @protected\n     */\n    _toggleAttribute(name, bool, node) {\n      if (node.hasAttribute(name) === !bool) {\n        if (bool) {\n          node.setAttribute(name, '');\n        } else {\n          node.removeAttribute(name);\n        }\n      }\n    }\n\n    /** @private */\n    _reorderStatusChanged(reorderStatus) {\n      this._allCells.forEach((cell) => cell.setAttribute('reorder-status', reorderStatus));\n    }\n\n    /** @private */\n    _resizableChanged(resizable, headerCell) {\n      if (resizable === undefined || headerCell === undefined) {\n        return;\n      }\n\n      if (headerCell) {\n        [headerCell].concat(this._emptyCells).forEach((cell) => {\n          if (cell) {\n            const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n            if (existingHandle) {\n              cell.removeChild(existingHandle);\n            }\n\n            if (resizable) {\n              const handle = document.createElement('div');\n              handle.setAttribute('part', 'resize-handle');\n              cell.appendChild(handle);\n            }\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _textAlignChanged(textAlign) {\n      if (textAlign === undefined) {\n        return;\n      }\n      if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n        console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n        return;\n      }\n\n      let textAlignFallback;\n      if (getComputedStyle(this._grid).direction === 'ltr') {\n        if (textAlign === 'start') {\n          textAlignFallback = 'left';\n        } else if (textAlign === 'end') {\n          textAlignFallback = 'right';\n        }\n      } else {\n        if (textAlign === 'start') {\n          textAlignFallback = 'right';\n        } else if (textAlign === 'end') {\n          textAlignFallback = 'left';\n        }\n      }\n\n      this._allCells.forEach((cell) => {\n        cell._content.style.textAlign = textAlign;\n        if (getComputedStyle(cell._content).textAlign !== textAlign) {\n          cell._content.style.textAlign = textAlignFallback;\n        }\n      });\n    }\n\n    /** @private */\n    _hiddenChanged(hidden) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('hidden', hidden);\n      }\n\n      if (!!hidden !== !!this._previousHidden && this._grid) {\n        if (hidden === true) {\n          this._allCells.forEach((cell) => {\n            if (cell._content.parentNode) {\n              cell._content.parentNode.removeChild(cell._content);\n            }\n          });\n        }\n        this._grid._debouncerHiddenChanged = Debouncer.debounce(\n          this._grid._debouncerHiddenChanged,\n          animationFrame,\n          () => {\n            if (this._grid && this._grid._renderColumnTree) {\n              this._grid._renderColumnTree(this._grid._columnTree);\n            }\n          }\n        );\n\n        this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n        this._grid.notifyResize && this._grid.notifyResize();\n        this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n      }\n      this._previousHidden = hidden;\n    }\n  };\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See `<vaadin-grid>` documentation and demos for instructions and examples on how\n * to configure the `<vaadin-grid-column>`.\n * ```\n *\n * @extends HTMLElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumnElement extends ColumnBaseMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px'\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       * @attr {number} flex-grow\n       * @type {number}\n       */\n      flexGrow: {\n        type: Number,\n        value: 1\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *\n       * @type {GridBodyRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       * @attr {boolean} auto-width\n       * @type {boolean}\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false\n      },\n\n      /**\n       * @type {HTMLTemplateElement}\n       * @protected\n       */\n      _bodyTemplate: {\n        type: Object\n      },\n\n      /**\n       * @type {Array<!HTMLElement>}\n       * @protected\n       */\n      _cells: Array\n    };\n  }\n}\n\ncustomElements.define(GridColumnElement.is, GridColumnElement);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([height-by-rows]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([height-by-rows]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    #table {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      position: relative;\n      outline: none;\n      /* Workaround for a Desktop Safari bug: new stacking context here prevents the scrollbar from getting hidden */\n      z-index: 0;\n    }\n\n    #header,\n    #footer {\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      left: 0;\n      overflow: visible;\n      width: 100%;\n      z-index: 1;\n    }\n\n    #header {\n      top: 0;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      bottom: 0;\n    }\n\n    #items {\n      flex-grow: 1;\n      flex-shrink: 0;\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      width: 100%;\n      left: 0;\n      overflow: visible;\n    }\n\n    [part~='row'] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~='row'][loading] [part~='body-cell'] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~='row'] {\n      position: absolute;\n    }\n\n    #items [part~='row']:empty {\n      height: 1em;\n    }\n\n    [part~='cell']:not([part~='details-cell']) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~='details-cell'] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      will-change: transform;\n    }\n\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~='cell'] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~='resize-handle'],\n    #scroller[no-content-pointer-events] [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~='reorder-ghost'] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Resizing styles */\n    [part~='resize-handle'] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~='resize-handle']::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~='resize-handle']::before,\n    [last-frozen] [part~='resize-handle']::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    #sizer {\n      display: flex;\n      position: absolute;\n      visibility: hidden;\n    }\n\n    #sizer [part~='details-cell'] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'][hidden] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n      border: none !important;\n    }\n\n    #sizer [part~='cell']::before {\n      content: '-';\n    }\n\n    #sizer [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) #items,\n    :host([dir='rtl']) #header,\n    :host([dir='rtl']) #footer {\n      left: auto;\n    }\n\n    :host([dir='rtl']) [part~='reorder-ghost'] {\n      left: auto;\n      right: 0;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle'] {\n      left: 0;\n      right: auto;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle']::before {\n      transform: translateX(50%);\n    }\n\n    :host([dir='rtl']) [last-column] [part~='resize-handle']::before,\n    :host([dir='rtl']) [last-frozen] [part~='resize-handle']::before {\n      left: 0;\n      right: auto;\n    }\n  `,\n  { moduleId: 'vaadin-grid-styles' }\n);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst TOUCH_DEVICE = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the\n * the grid can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Quick Start\n *\n * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.\n *\n * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`\n * shorthand properties for the columns to define what gets rendered in the cells of the column.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column path=\"name.first\" header=\"First name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"name.last\" header=\"Last name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"email\"></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,\n * `renderer` and `footerRenderer`.\n *\n * Each of those renderer functions provides `root`, `column`, `model` arguments when applicable.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `column`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * Renderers are called on initialization of new column cells and each time the\n * related row model is updated. DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n * ```js\n * const grid = document.querySelector('vaadin-grid');\n * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},\n *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];\n *\n * const columns = grid.querySelectorAll('vaadin-grid-column');\n *\n * columns[0].headerRenderer = function(root) {\n *   root.textContent = 'Name';\n * };\n * columns[0].renderer = function(root, column, model) {\n *   root.textContent = model.item.name;\n * };\n *\n * columns[1].headerRenderer = function(root) {\n *   root.textContent = 'Surname';\n * };\n * columns[1].renderer = function(root, column, model) {\n *   root.textContent = model.item.surname;\n * };\n *\n * columns[2].headerRenderer = function(root) {\n *   root.textContent = 'Role';\n * };\n * columns[2].renderer = function(root, column, model) {\n *   root.textContent = model.item.role;\n * };\n * ```\n *\n * Alternatively, the content can be provided with Polymer's Templates:\n *\n * #### Example:\n * ```html\n * <vaadin-grid items='[{\"name\": \"John\", \"surname\": \"Lennon\", \"role\": \"singer\"},\n * {\"name\": \"Ringo\", \"surname\": \"Starr\", \"role\": \"drums\"}]'>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Name</template>\n *     <template>[[item.name]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Surname</template>\n *     <template>[[item.surname]]</template>\n *   </vaadin-grid-column>\n *   <vaadin-grid-column>\n *     <template class=\"header\">Role</template>\n *     <template>[[item.role]]</template>\n *   </vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * The following helper elements can be used for further customization:\n * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)\n * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)\n * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)\n * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)\n * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)\n *\n * __Note that the helper elements must be explicitly imported.__\n * If you want to import everything at once you can use the `all-imports.html` bundle.\n *\n * A column template can be decorated with one the following class names to specify its purpose\n * - `header`: Marks a header template\n * - `footer`: Marks a footer template\n * - `row-details`: Marks a row details template\n *\n * The following built-in template variables can be bound to inside the column templates:\n * - `[[index]]`: Number representing the row index\n * - `[[item]]` and it's sub-properties: Data object (provided by a data provider / items array)\n * - `{{selected}}`: True if the item is selected (can be two-way bound)\n * - `{{detailsOpened}}`: True if the item has row details opened (can be two-way bound)\n * - `{{expanded}}`: True if the item has tree sublevel expanded (can be two-way bound)\n * - `[[level]]`: Number of the tree sublevel of the item, first level-items have 0\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-grid>` data through the\n * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.\n * The `<vaadin-grid>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Assigning Data” page in the demos.\n *\n * __Note that expanding the tree grid's item will trigger a call to the `dataProvider`.__\n *\n * __Also, note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * grid.dataProvider = function(params, callback) {\n *   const url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   const xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     const response = JSON.parse(xhr.responseText);\n *     callback(\n *       response.employees, // requested page of items\n *       response.totalSize  // total number of items\n *     );\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * __Alternatively, you can use the `size` property to set the total number of items:__\n *\n * ```javascript\n * grid.size = 200; // The total number of items\n * grid.dataProvider = function(params, callback) {\n *   const url = 'https://api.example/data' +\n *       '?page=' + params.page +        // the requested page index\n *       '&per_page=' + params.pageSize; // number of items on the page\n *   const xhr = new XMLHttpRequest();\n *   xhr.onload = function() {\n *     const response = JSON.parse(xhr.responseText);\n *     callback(response.employees);\n *   };\n *   xhr.open('GET', url, true);\n *   xhr.send();\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `row` | Row in the internal table\n * `cell` | Cell in the internal table\n * `header-cell` | Header cell in the internal table\n * `body-cell` | Body cell in the internal table\n * `footer-cell` | Footer cell in the internal table\n * `details-cell` | Row details cell in the internal table\n * `resize-handle` | Handle for resizing the columns\n * `reorder-ghost` | Ghost element of the header cell being dragged\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `loading` | Set when the grid is loading data from data provider | :host\n * `interacting` | Keyboard navigation in interaction mode | :host\n * `navigating` | Keyboard navigation in navigation mode | :host\n * `overflow` | Set when rows are overflowing the grid viewport. Possible values: `top`, `bottom`, `left`, `right` | :host\n * `reordering` | Set when the grid's columns are being reordered | :host\n * `dragover` | Set when the grid (not a specific row) is dragged over | :host\n * `dragging-rows` : Set when grid rows are dragged  | :host\n * `reorder-status` | Reflects the status of a cell while columns are being reordered | cell\n * `frozen` | Frozen cell | cell\n * `last-frozen` | Last frozen cell | cell\n * * `first-column` | First visible cell on a row | cell\n * `last-column` | Last visible cell on a row | cell\n * `selected` | Selected row | row\n * `expanded` | Expanded row | row\n * `details-opened` | Row with details open | row\n * `loading` | Row that is waiting for data from data provider | row\n * `odd` | Odd row | row\n * `first` | The first body row | row\n * `dragstart` | Set for one frame when drag of a row is starting. The value is a number when multiple rows are dragged | row\n * `dragover` | Set when the row is dragged over | row\n * `drag-disabled` | Set to a row that isn't available for dragging | row\n * `drop-disabled` | Set to a row that can't be dropped on top of | row\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @fires {CustomEvent} active-item-changed - Fired when the `activeItem` property changes.\n * @fires {CustomEvent} cell-activate - Fired when the cell is activated with click or keyboard.\n * @fires {CustomEvent} column-reorder - Fired when the columns in the grid are reordered.\n * @fires {CustomEvent} column-resize - Fired when the grid column resize is finished.\n * @fires {CustomEvent} expanded-items-changed - Fired when the `expandedItems` property changes.\n * @fires {CustomEvent} grid-dragstart - Fired when starting to drag grid rows.\n * @fires {CustomEvent} grid-dragend - Fired when the dragging of the rows ends.\n * @fires {CustomEvent} grid-drop - Fired when a drop occurs on top of the grid.\n * @fires {CustomEvent} loading-changed - Fired when the `loading` property changes.\n * @fires {CustomEvent} selected-items-changed - Fired when the `selectedItems` property changes.\n *\n * @extends ScrollerElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n */\nclass GridElement extends ElementMixin(\n  ThemableMixin(\n    DataProviderMixin(\n      ArrayDataProviderMixin(\n        DynamicColumnsMixin(\n          ActiveItemMixin(\n            ScrollMixin(\n              SelectionMixin(\n                SortMixin(\n                  RowDetailsMixin(\n                    KeyboardNavigationMixin(\n                      A11yMixin(\n                        FilterMixin(\n                          ColumnReorderingMixin(\n                            ColumnResizingMixin(EventContextMixin(DragAndDropMixin(StylingMixin(ScrollerElement))))\n                          )\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n) {\n  static get template() {\n    return html`\n      <div\n        id=\"scroller\"\n        safari$=\"[[_safari]]\"\n        ios$=\"[[_ios]]\"\n        loading$=\"[[loading]]\"\n        column-reordering-allowed$=\"[[columnReorderingAllowed]]\"\n      >\n        <table id=\"table\" role=\"grid\" aria-multiselectable=\"true\" tabindex=\"0\">\n          <caption id=\"sizer\" part=\"row\"></caption>\n          <thead id=\"header\" role=\"rowgroup\"></thead>\n          <tbody id=\"items\" role=\"rowgroup\"></tbody>\n          <tfoot id=\"footer\" role=\"rowgroup\"></tfoot>\n        </table>\n\n        <div part=\"reorder-ghost\"></div>\n      </div>\n\n      <div id=\"focusexit\" tabindex=\"0\"></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid';\n  }\n\n  static get version() {\n    return '6.0.2';\n  }\n\n  static get observers() {\n    return ['_columnTreeChanged(_columnTree, _columnTree.*)'];\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _safari: {\n        type: Boolean,\n        value: /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _ios: {\n        type: Boolean,\n        value:\n          (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) ||\n          (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)\n      },\n\n      /** @private */\n      _firefox: {\n        type: Boolean,\n        value: navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n      },\n\n      /** @private */\n      _android: {\n        type: Boolean,\n        value: /android/i.test(navigator.userAgent)\n      },\n\n      /** @private */\n      _touchDevice: {\n        type: Boolean,\n        value: TOUCH_DEVICE\n      },\n\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       * @attr {boolean} height-by-rows\n       * @type {boolean}\n       */\n      heightByRows: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_heightByRowsChanged'\n      },\n\n      /** @private */\n      _recalculateColumnWidthOnceLoadingFinished: {\n        type: Boolean,\n        value: true\n      }\n    };\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__isRTL = newValue === 'rtl';\n      this._updateScrollerMeasurements();\n    }\n  }\n\n  /** @private */\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter((row) => row.clientHeight).length;\n  }\n\n  /** @protected */\n  __itemsReceived() {\n    if (\n      this._recalculateColumnWidthOnceLoadingFinished &&\n      !this._cache.isLoading() &&\n      this.__hasRowsWithClientHeight()\n    ) {\n      this._recalculateColumnWidthOnceLoadingFinished = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} cols the columns to auto size based on their content width\n   * @private\n   */\n  _recalculateColumnWidths(cols) {\n    // Note: The `cols.forEach()` loops below could be implemented as a single loop but this has been\n    // split for performance reasons to batch these similar actions [write/read] together to avoid\n    // unnecessary layout trashing.\n\n    // [write] Set automatic width for all cells (breaks column alignment)\n    cols.forEach((col) => {\n      col.width = 'auto';\n      col._origFlexGrow = col.flexGrow;\n      col.flexGrow = 0;\n    });\n    // [read] Measure max cell width in each column\n    cols.forEach((col) => {\n      col._currentWidth = 0;\n      // Note: _allCells only contains cells which are currently rendered in DOM\n      col._allCells.forEach((c) => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        const cellWidth = c.offsetWidth + 1;\n        col._currentWidth = Math.max(col._currentWidth, cellWidth);\n      });\n    });\n    // [write] Set column widths to fit widest measured content\n    cols.forEach((col) => {\n      col.width = `${col._currentWidth}px`;\n      col.flexGrow = col._origFlexGrow;\n      col._currentWidth = undefined;\n      col._origFlexGrow = undefined;\n    });\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n    if (this._cache.isLoading()) {\n      this._recalculateColumnWidthOnceLoadingFinished = true;\n    } else {\n      const cols = this._getColumns().filter((col) => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n    }\n  }\n\n  /** @private */\n  _createScrollerRows(count) {\n    const rows = [];\n    for (let i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach(\n        (c) => c.isConnected && c.notifyPath && c.notifyPath('_cells.*', c._cells)\n      );\n    }\n\n    beforeNextRender(this, () => {\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n    });\n    return rows;\n  }\n\n  /** @private */\n  _getRowTarget() {\n    return this.$.items;\n  }\n\n  /** @private */\n  _createCell(tagName) {\n    const contentId = (this._contentIndex = this._contentIndex + 1 || 0);\n    const slotName = 'vaadin-grid-cell-content-' + contentId;\n\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('tabindex', '-1');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n\n    cell.appendChild(slot);\n\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (window.chrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = () => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n          // If focus is in the cell content — respect it, do not change.\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n\n    return cell;\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {!Array<!GridColumnElement>} columns\n   * @param {?string} section\n   * @param {boolean} isColumnRow\n   * @param {boolean} noNotify\n   * @protected\n   */\n  _updateRow(row, columns, section, isColumnRow, noNotify) {\n    section = section || 'body';\n\n    const contentsFragment = document.createDocumentFragment();\n\n    Array.from(row.children).forEach((cell) => (cell._vacant = true));\n    row.innerHTML = '';\n    if (row.id !== 'sizer') {\n      row.hidden = true;\n    }\n    columns\n      .filter((column) => !column.hidden)\n      .forEach((column, index, cols) => {\n        let cell;\n\n        if (section === 'body') {\n          // Body\n          column._cells = column._cells || [];\n          cell = column._cells.filter((cell) => cell._vacant)[0];\n          if (!cell) {\n            cell = this._createCell('td');\n            column._cells.push(cell);\n          }\n          cell.setAttribute('part', 'cell body-cell');\n          row.appendChild(cell);\n\n          if (index === cols.length - 1 && (this._rowDetailsTemplate || this.rowDetailsRenderer)) {\n            // Add details cell as last cell to body rows\n            this._detailsCells = this._detailsCells || [];\n            const detailsCell = this._detailsCells.filter((cell) => cell._vacant)[0] || this._createCell('td');\n            if (this._detailsCells.indexOf(detailsCell) === -1) {\n              this._detailsCells.push(detailsCell);\n            }\n            if (!detailsCell._content.parentElement) {\n              contentsFragment.appendChild(detailsCell._content);\n            }\n            this._configureDetailsCell(detailsCell);\n            row.appendChild(detailsCell);\n            this._a11ySetRowDetailsCell(row, detailsCell);\n            detailsCell._vacant = false;\n          }\n\n          if (column.notifyPath && !noNotify) {\n            column.notifyPath('_cells.*', column._cells);\n          }\n        } else {\n          // Header & footer\n          const tagName = section === 'header' ? 'th' : 'td';\n          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n            cell = column[`_${section}Cell`] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            column[`_${section}Cell`] = cell;\n          } else {\n            column._emptyCells = column._emptyCells || [];\n            cell = column._emptyCells.filter((cell) => cell._vacant)[0] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            if (column._emptyCells.indexOf(cell) === -1) {\n              column._emptyCells.push(cell);\n            }\n          }\n          cell.setAttribute('part', `cell ${section}-cell`);\n          this.__updateHeaderFooterRowVisibility(row);\n        }\n\n        if (!cell._content.parentElement) {\n          contentsFragment.appendChild(cell._content);\n        }\n        cell._vacant = false;\n        cell._column = column;\n      });\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n\n    const visibleRowCells = Array.from(row.children).filter((cell) => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer || column._headerTemplate) {\n          // The cell is the header cell of a column that has a header renderer\n          // or a header template -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else {\n        if (column.footerRenderer || column._footerTemplate) {\n          // The cell is the footer cell of a column that has a footer renderer\n          // or a footer template -> row should be visible\n          return true;\n        }\n      }\n    });\n\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n      this.notifyResize();\n    }\n  }\n\n  /** @private */\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n\n    if (!this._columnTree) {\n      return;\n    }\n\n    this._toggleAttribute('first', index === 0, row);\n    this._toggleAttribute('odd', index % 2, row);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  /** @private */\n  _columnTreeChanged(columnTree) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {!Array<!GridColumnElement>} columnTree\n   * @protected\n   */\n  _renderColumnTree(columnTree) {\n    Array.from(this.$.items.children).forEach((row) =>\n      this._updateRow(row, columnTree[columnTree.length - 1], null, false, true)\n    );\n\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      this.$.header.appendChild(headerRow);\n\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n\n    Array.from(this.$.header.children).forEach((headerRow, index) =>\n      this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1)\n    );\n\n    Array.from(this.$.footer.children).forEach((footerRow, index) =>\n      this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0)\n    );\n\n    // Sizer rows\n    this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n    this.__updateFooterPositioning();\n  }\n\n  __updateFooterPositioning() {\n    if (this._firefox) {\n      // Sticky (or translated) footer in a flexbox host doesn't get included in\n      // the scroll height calculation on FF. This is a workaround for the issue.\n      this.$.items.style.paddingBottom = 0;\n      if (!this.heightByRows) {\n        this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n      }\n    }\n\n    if (this._ios) {\n      const isOldIOS = !window.CSS.supports('position', 'sticky');\n      if (isOldIOS) {\n        // Due to a rendering bug, the sticky header may disappear on an older iOS (10-12) Safari\n        // if the grid is used inside of a flex box. This is a workaround for the issue.\n        this.$.table.style.height = '';\n        this.$.table.style.minHeight = '100%';\n        this.$.table.style.maxHeight = '100%';\n        setTimeout(() => (this.$.table.style.height = `${this.$.scroller.offsetHeight}px`));\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {GridItem} item\n   * @protected\n   */\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n\n    this._toggleAttribute('selected', model.selected, row);\n    this._a11yUpdateRowSelected(row, model.selected);\n    this._a11yUpdateRowLevel(row, model.level);\n    this._toggleAttribute('expanded', model.expanded, row);\n    this._toggleAttribute('details-opened', this._isDetailsOpened(item), row);\n    if (this._rowDetailsTemplate || this.rowDetailsRenderer) {\n      this._toggleDetailsCell(row, item);\n    }\n    this._generateCellClassNames(row, model);\n    this._filterDragAndDrop(row, model);\n\n    Array.from(row.children).forEach((cell) => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      } else if (cell._instance) {\n        cell._instance.__detailsOpened__ = model.detailsOpened;\n        cell._instance.__selected__ = model.selected;\n        cell._instance.__level__ = model.level;\n        cell._instance.__expanded__ = model.expanded;\n        cell._instance.setProperties(model);\n      }\n    });\n\n    this._debouncerUpdateHeights = Debouncer.debounce(this._debouncerUpdateHeights, timeOut.after(1), () => {\n      this._updateMetrics();\n      this._positionItems();\n      this._updateScrollerSize();\n    });\n  }\n\n  /** @private */\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this._accessIronListAPI(super._resizeHandler, true);\n    this._updateScrollerMeasurements();\n    this.__updateFooterPositioning();\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      this._render();\n      e.stopPropagation();\n      this.notifyResize();\n      this.__itemsReceived();\n\n      requestAnimationFrame(() => {\n        this.__scrollToPendingIndex();\n        // This needs to be set programmatically in order to avoid an iOS 10 bug (disappearing grid)\n        this.$.table.style.webkitOverflowScrolling = 'touch';\n      });\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {boolean} bool\n   * @param {!Element} node\n   * @protected\n   */\n  _toggleAttribute(name, bool, node) {\n    if (node.hasAttribute(name) === !bool) {\n      if (bool) {\n        node.setAttribute(name, '');\n      } else {\n        node.removeAttribute(name);\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @return {!GridItemModel}\n   * @protected\n   */\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened: !!(this._rowDetailsTemplate || this.rowDetailsRenderer) && this._isDetailsOpened(row._item)\n    };\n  }\n\n  /**\n   * Manually invoke existing renderers for all the columns\n   * (header, footer and body cells) and opened row details.\n   */\n  render() {\n    if (this._columnTree) {\n      // header and footer renderers\n      this._columnTree.forEach((level) => {\n        level.forEach((column) => column._renderHeaderAndFooter());\n      });\n\n      // body and row details renderers\n      this._update();\n    }\n  }\n\n  /**\n   * Updates the computed metrics and positioning of internal grid parts\n   * (row/details cell positioning etc). Needs to be invoked whenever the sizing of grid\n   * content changes asynchronously to ensure consistent appearance (e.g. when a\n   * contained image whose bounds aren't known beforehand finishes loading).\n   */\n  notifyResize() {\n    super.notifyResize();\n  }\n\n  /** @private */\n  _heightByRowsChanged(value, oldValue) {\n    if (value || oldValue) {\n      this.notifyResize();\n    }\n  }\n\n  /** @protected */\n  __forceReflow() {\n    this._debouncerForceReflow = Debouncer.debounce(this._debouncerForceReflow, animationFrame, () => {\n      this.$.scroller.style.overflow = 'hidden';\n      setTimeout(() => (this.$.scroller.style.overflow = ''));\n    });\n  }\n}\n\ncustomElements.define(GridElement.is, GridElement);\n\nfunction CreateDomModules(options) {\r\n  // Asset Tree Grid\r\n  const DomModule = document.createElement(\"dom-module\");\r\n  DomModule.setAttribute(\"theme-for\", \"vaadin-grid\");\r\n  DomModule.setAttribute(\"id\", `bh-ui-toolkit__vaadin-grid`);\r\n  const innerHtmlStr = `<template><style>\r\n\r\n  :host([gridtype=\"tree\"]) {\r\n    --_lumo-grid-border-width: 0px;\r\n    background-color: transparent;\r\n  }\r\n  \r\n  :host([gridtype=\"tree\"]:not([theme~='no-border'])) {\r\n    box-shadow: none!important;\r\n    border: none!important;\r\n  }\r\n\r\n\r\n  :host([gridtype=\"tree\"]:not([theme~='no-border'])) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\r\n    box-shadow: none;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\r\n    background-image: none;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]) #header {\r\n    display: none;\r\n  }\r\n  \r\n  :host([gridtype=\"tree\"]) [part~=\"body-cell\"] {\r\n    color: var(--color-text-common-secondary);\r\n    font-family: var(--font-family-body-small);\r\n    letter-spacing: var(--font-letter-spacing-body-small);\r\n    line-height: var(--font-line-height-body-small);\r\n    position: relative;  \r\n    box-shadow: none;\r\n    min-width: 180px;\r\n    min-height: unset;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]) [part='toggle'] {\r\n      margin: none!important;\r\n  }\r\n\r\n \r\n\r\n  :host([gridtype=\"tree\"][noverticalborder='true']) [part~=\"body-cell\"] {\r\n    border-right: none;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]) [part~=\"cell\"] {\r\n    background-color: transparent;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\r\n    font-weight: var(--font-weight-body-small);\r\n    font-size: var(--font-size-body-small);\r\n    letter-spacing: var(--font-letter-spacing-body-small);\r\n    line-height: var(--font-line-height-body-small);\r\n    position: relative;\r\n    padding-top:0 !important;\r\n    padding-bottom:0 !important;\r\n    cursor: pointer;\r\n    transition: all;\r\n    transition-timing-function: var(--motion-easing-fast);\r\n    transition-duration: var(--motion-duration-fast);\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]) [part~='cell']:focus {\r\n    outline: none !important;\r\n  }\r\n  :host([gridtype=\"tree\"][navigating]) [part~='cell']:focus::before {\r\n    box-shadow: none !important;\r\n  }\r\n \r\n\r\n  :host([gridtype=\"tree\"]) [part~=\"body-cell\"]:hover ::slotted(vaadin-grid-cell-content) {\r\n    color: var(--color-text-common-primary);\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\r\n    background-image: none;\r\n  }\r\n\r\n   :host([gridtype=\"tree\"]:not([theme~='no-border'])) [part~='row'][selected]  [part~=\"cell\"] ::slotted(vaadin-grid-cell-content){\r\n      color: var(--color-text-link-primary-default);\r\n      text-decoration: underline;\r\n      position: relative;\r\n      padding-top:0 !important;\r\n      padding-bottom:0 !important;\r\n      background: none;\r\n      box-shadow: none;\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    :host([gridtype=\"tree\"]:hover) (:not([theme~='no-border'])) [part~='row'] [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      // color: var(--color-text-common-primary);\r\n    }\r\n  }\r\n\r\n  :host([gridtype=\"tree\"][spacing=\"medium\"]) {\r\n    height: unset;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"][spacing=\"medium\"][shouldoverflow=\"true\"]) {\r\n    height:  var(--tabularlist-default-height) ;\r\n  }\r\n\r\n  :host([gridtype=\"tree\"][spacing=\"medium\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n    height: 26px;\r\n    padding: var(--spacing-padding-small) var(--spacing-padding-small);\r\n  }\r\n\r\n  :host([gridtype=\"tree\"]:not([theme~='no-row-borders'])) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\r\n    transform: translateY(5px);\r\n  }\r\n\r\n    :host([gridtype=\"tabularlist\"]) {\r\n      border: none;\r\n      background-color:var(--table-background-color);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][linkitem=\"true\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      cursor: pointer;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][reordering]) [part~=\"cell\"][reorder-status=\"dragging\"] {\r\n      background-color: var(--color-fill-menu-selected-supplemental);\r\n      background: var(--color-fill-menu-selected-supplemental);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\r\n      box-shadow: none;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~=\"reorder-ghost\"] {\r\n      background: var(--color-fill-menu-selected-supplemental);\r\n      background-color: var(--color-fill-menu-selected-supplemental);\r\n      font-family: var(--font-family-label-small);\r\n      letter-spacing: var(--font-letter-spacing-label-small);\r\n      line-height: var(--font-line-height-label-small);\r\n      font-weight: var(--font-weight-label-small);\r\n      font-size: var(--font-size-label-small);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~=\"header-cell\"] {\r\n      background-color: var(--color-fill-common-tertiary);\r\n      color: var(--color-text-common-primary);\r\n      font-family: var(--font-family-label-small);\r\n      letter-spacing: var(--font-letter-spacing-label-small);\r\n      line-height: var(--font-line-height-label-small);\r\n      min-height: 42px !important;\r\n      min-width: var(--tabularlist-header-cell-min-width);\r\n      height: 42px;\r\n      align-items: center;\r\n      position: relative;\r\n      cursor: pointer;      \r\n    }\r\n    :host([gridtype=\"tabularlist\"][noverticalborder='false']) [part~=\"header-cell\"]{\r\n      border-right: 1px solid var(--color-border-common-primary);    \r\n      }\r\n    :host([gridtype=\"tabularlist\"][selection='true']) [part~=\"header-cell\"]:first-child {\r\n      min-width: 64px;\r\n      width: 64px !important;\r\n      padding: 0 8px;\r\n      height: 42px;\r\n      min-height: 42px !important;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][selection='true'][searchmode=\"column\"]) [part~=\"header-cell\"]:first-child {\r\n      height: 87px;\r\n      min-height: 87px !important;\r\n    }\r\n    \r\n    :host([gridtype=\"tabularlist\"][selection='true']) [part~=\"header-cell\"]:first-child ::slotted(vaadin-grid-cell-content) {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][selection='true'][searchmode=\"column\"]) [part~=\"header-cell\"]:first-child ::slotted(vaadin-grid-cell-content) {\r\n      padding-bottom: 44px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][selection='true'][searchmode=\"column\"]) [part~=\"header-cell\"]:first-child:before {\r\n      position: absolute;\r\n      content: ' ';\r\n      width: 64px;\r\n      height: 44px;\r\n      border-top: 1px solid var(--color-border-common-primary);\r\n      background-color: var(--color-fill-common-secondary);\r\n      top: 41px;\r\n      left: 0;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][selection='true']) [part~='cell'][part~=\"header-cell\"]:first-child ::slotted(vaadin-grid-cell-content) {\r\n      text-overflow: clip;\r\n      margin-right: 0;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][searchmode=\"column\"]) [part~=\"header-cell\"] {\r\n      min-height: 87px !important;\r\n      height: 87px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][searchmode=\"column\"]) [part~=\"header-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      margin-right: 0;\r\n      padding: 0;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][searchmode=\"column\"]) [part~=\"header-cell\"]:after {\r\n      top: 13px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][searchmode=\"column\"]) [part='resize-handle'] {\r\n      height: 42px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][noverticalborder='true']) [part~=\"header-cell\"] {\r\n      border-right: none;\r\n    }\r\n\r\n    \r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~=\"header-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      font-weight: var(--font-weight-label-small);\r\n      font-size: var(--font-size-label-small);\r\n      padding: 0 var(--tabulatlist-header-cell-padding);\r\n      position: relative;\r\n      cursor: pointer;\r\n      margin-right: var(--tabulatlist-header-cell-margin);\r\n    }\r\n    \r\n    :host([gridtype=\"tabularlist\"][rowselection=\"true\"]) [role~=\"row\"]:hover [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      background-color: var(--color-fill-menu-highlighted);\r\n      cursor: pointer;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\r\n      background-image: linear-gradient(var(--color-fill-menu-selected-supplemental), var(--color-fill-menu-selected-supplemental));\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][rowselection=\"true\"]) [role~=\"row\"][selected]:hover [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      background-color: var(--color-fill-menu-selected-supplemental);\r\n      background-image: linear-gradient(var(--color-fill-menu-selected-supplemental), var(--color-fill-menu-selected-supplemental));\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~=\"body-cell\"] {\r\n      color: var(--color-text-common-secondary);\r\n      font-family: var(--font-family-body-medium);\r\n      letter-spacing: var(--letter-spacing-body-medium);\r\n      line-height: var(--font-line-height-body-medium);\r\n      position: relative;\r\n      border-top: 1px solid var(--color-border-common-primary);      \r\n      min-width: var(--tabularlist-header-cell-min-width);\r\n      background-color: var(--color-fill-common-secondary);      \r\n    }\r\n    :host([gridtype=\"tabularlist\"][noverticalborder='false']) [part~='body-cell'] {\r\n      border-right: 1px solid var(--color-border-common-primary);\r\n      border-bottom: 1px solid var(--color-border-common-primary);\r\n  }\r\n    :host([gridtype=\"tabularlist\"][selection='true']) [part~=\"body-cell\"]:first-child {\r\n      min-width: 64px;\r\n      width: 64px !important;\r\n      padding: 0 8px;\r\n    } \r\n\r\n    :host([gridtype=\"tabularlist\"][selection='true']) [part~='cell'][part~=\"body-cell\"]:first-child ::slotted(vaadin-grid-cell-content) {\r\n      text-overflow: clip;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][noverticalborder='true']) [part~=\"body-cell\"] {\r\n      border-right: none;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][reordering]) [part~='cell'][reorder-status='allowed'] {\r\n      background-color: var(--color-fill-common-secondary);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      font-weight: var(--font-weight-body-medium);\r\n      font-size: var(--font-size-body-medium);\r\n      position: relative;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"large\"]){\r\n      height: unset;\r\n      // max-height: 651px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"large\"][shouldoverflow=\"true\"]) {\r\n      height: 651px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"large\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      height:60px;\r\n      padding: var(--spacing-padding-medium) var(--spacing-padding-small);\r\n    }\r\n    :host([gridtype=\"tabularlist\"][spacing=\"auto\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      padding: var(--spacing-padding-medium) var(--spacing-padding-small);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"auto\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      height: auto;\r\n     \r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"medium\"]) {\r\n      height: unset;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"medium\"][shouldoverflow=\"true\"]) {\r\n      height:  var(--tabularlist-default-height) ;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"medium\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      height: 44px;\r\n      padding: var(--spacing-padding-small) var(--spacing-padding-small);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"small\"]) {\r\n      height: unset;\r\n      // max-height: 411px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"small\"][shouldoverflow=\"true\"]) {\r\n      height: 411px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][spacing=\"small\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n      height: 36px;\r\n      padding: var(--spacing-padding-xsmall) var(--spacing-padding-small);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part='resize-handle'] {\r\n      width: 2px;\r\n      background-color: var(--color-fill-control-selected);\r\n      right: 0px;\r\n      -webkit-transition: background-color var(--motion-duration-fast) var(--motion-easing-fast);\r\n      transition: background-color var(--motion-duration-fast) var(--motion-easing-fast);\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"]) [part='resize-handle']::before {\r\n      width: 25px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][navigating]) [part~='header-cell']:focus::before {\r\n      height: 41px;\r\n    }\r\n\r\n    :host([gridtype=\"tabularlist\"][navigating]) [part~='cell']:focus::before {\r\n      box-shadow: inset 0 0 0 2px var(--color-border-common-focused);\r\n    }\r\n\r\n  </style>\r\n  </template>`;\r\n  DomModule.innerHTML = innerHtmlStr;\r\n  const DomModuleCheckbox = document.createElement(\"dom-module\");\r\n  DomModuleCheckbox.setAttribute(\"theme-for\", \"vaadin-checkbox\");\r\n  DomModuleCheckbox.setAttribute(\"id\", `bh-ui-toolkit__vaadin-checkbox`);\r\n  const innerHtmlStrCheckbox = `<template><style>\r\n    :host {\r\n      width: var(--checkbox-width);\r\n      height: var(--checkbox-height);\r\n      margin: 0 var(--spacing-margin-xxsmall);\r\n      cursor: pointer !important;\r\n      border: none;\r\n      transition: all;\r\n      transition-timing-function: var(--motion-easing-fast);\r\n      transition-duration: var(--motion-duration-fast);\r\n    }\r\n\r\n    :host [part~=\"checkbox\"] {\r\n      background-color: var(--color-fill-control-unselected);\r\n      width: var(--checkbox-width);\r\n      height: var(--checkbox-height);\r\n      border-style: solid;\r\n      border-width: var(--effect-border-width-thick);\r\n      border-color: var(--color-border-control-unselected);\r\n      box-sizing: border-box;\r\n      border-radius: var(--effect-border-radius-light);\r\n      margin: 0;\r\n      transition: all;\r\n      transition-timing-function: var(--motion-easing-fast);\r\n      transition-duration: var(--motion-duration-fast);\r\n    }\r\n\r\n    :host(:active) [part~=\"checkbox\"] {\r\n      transform: unset;\r\n    }\r\n\r\n    :host(:hover) label {\r\n      cursor: pointer !important;\r\n    }\r\n\r\n    :host(:focus) [part~=\"checkbox\"] {\r\n      box-shadow: var(--effect-drop-shadow-focus-primary);\r\n    }\r\n\r\n    :host [part~=\"checkbox\"] input {\r\n      border: none;\r\n    }\r\n\r\n    :host [part~=\"checkbox\"]::before {\r\n      background-color: var(--color-fill-control-unselected);\r\n      width: var(--checkbox-width);\r\n      height: var(--checkbox-height);\r\n      border-style: solid;\r\n      border-width: var(--effect-border-width-thick);\r\n      border-color: var(--color-border-control-unselected);\r\n      box-sizing: border-box;\r\n      transition: all;\r\n      transition-timing-function: var(--motion-easing-fast);\r\n      transition-duration: var(--motion-duration-fast);\r\n      transform: scale(1);\r\n    }\r\n\r\n    :host(:hover) [part~=\"checkbox\"]::before {\r\n      background-color: var(--color-fill-control-unselected) !important;\r\n    }\r\n\r\n    :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\r\n      background-color: var(--color-fill-control-unselected);\r\n    }\r\n\r\n    :host([checked]) [part='checkbox'] {\r\n      background-color: var(--color-fill-control-selected);\r\n      border-color: var(--color-border-control-selected);\r\n    }\r\n\r\n    :host([checked]:not([indeterminate])) [part='checkbox']:after {\r\n      border-width: 2px 0 0 2px;\r\n      transform: rotate(-135deg);\r\n      width: 6px;\r\n      height: 12px;\r\n      top: 12px;\r\n      left: 5px;\r\n    }\r\n\r\n    :host([indeterminate]) [part='checkbox']::after {\r\n      width: 12px;\r\n      height: 2px;\r\n      left: 1px;\r\n    }\r\n  </style>\r\n  </template>`;\r\n  DomModuleCheckbox.innerHTML = innerHtmlStrCheckbox;\r\n  return [DomModule, DomModuleCheckbox];\r\n}\n\nexport { CreateDomModules as C, GridColumnElement as G, isFocusable as i };\n","import { r as registerInstance, c as createEvent, h, H as Host } from './index-c0304f12.js';\nimport { r as registerStyles, c as css, T as ThemableMixin, l as DirMixin, P as PolymerElement, h as html } from './iron-resizable-behavior-b5089143.js';\nimport { i as isFocusable, G as GridColumnElement, C as CreateDomModules$1 } from './vaadin-grid.styles-556b22c5.js';\nimport './iron-scroll-target-behavior-5bd912f7.js';\n\nregisterStyles(\n  'vaadin-grid-tree-toggle',\n  css`\n    :host {\n      --vaadin-grid-tree-toggle-level-offset: 2em;\n      align-items: center;\n      vertical-align: middle;\n      margin-left: calc(var(--lumo-space-s) * -1);\n      -webkit-tap-highlight-color: transparent;\n    }\n\n    :host(:not([leaf])) {\n      cursor: default;\n    }\n\n    [part='toggle'] {\n      display: inline-block;\n      font-size: 1.5em;\n      line-height: 1;\n      width: 1em;\n      height: 1em;\n      text-align: center;\n      color: var(--lumo-contrast-50pct);\n      /* Increase touch target area */\n      padding: calc(1em / 3);\n      margin: calc(1em / -3);\n    }\n\n    :host(:not([dir='rtl'])) [part='toggle'] {\n      margin-right: 0;\n    }\n\n    @media (hover: hover) {\n      :host(:hover) [part='toggle'] {\n        color: var(--lumo-contrast-80pct);\n      }\n    }\n\n    [part='toggle']::before {\n      font-family: 'lumo-icons';\n      display: inline-block;\n      height: 100%;\n    }\n\n    :host(:not([expanded])) [part='toggle']::before {\n      content: var(--lumo-icons-angle-right);\n    }\n\n    :host([expanded]) [part='toggle']::before {\n      content: var(--lumo-icons-angle-right);\n      transform: rotate(90deg);\n    }\n\n    /* Experimental support for hierarchy connectors, using an unsupported selector */\n    :host([theme~='connectors']) #level-spacer {\n      position: relative;\n      z-index: -1;\n      font-size: 1em;\n      height: 1.5em;\n    }\n\n    :host([theme~='connectors']) #level-spacer::before {\n      display: block;\n      content: '';\n      margin-top: calc(var(--lumo-space-m) * -1);\n      height: calc(var(--lumo-space-m) + 3em);\n      background-image: linear-gradient(\n        to right,\n        transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px),\n        var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px)\n      );\n      background-size: var(--vaadin-grid-tree-toggle-level-offset) var(--vaadin-grid-tree-toggle-level-offset);\n      background-position: calc(var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px) 0;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) {\n      margin-left: 0;\n      margin-right: calc(var(--lumo-space-s) * -1);\n    }\n\n    :host([dir='rtl']) [part='toggle'] {\n      margin-left: 0;\n    }\n\n    :host([dir='rtl'][expanded]) [part='toggle']::before {\n      transform: rotate(-90deg);\n    }\n\n    :host([dir='rtl'][theme~='connectors']) #level-spacer::before {\n      background-image: linear-gradient(\n        to left,\n        transparent calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px),\n        var(--lumo-contrast-10pct) calc(var(--vaadin-grid-tree-toggle-level-offset) - 1px)\n      );\n      background-position: calc(100% - (var(--vaadin-grid-tree-toggle-level-offset) / 2 - 2px)) 0;\n    }\n\n    :host([dir='rtl']:not([expanded])) [part='toggle']::before,\n    :host([dir='rtl'][expanded]) [part='toggle']::before {\n      content: var(--lumo-icons-angle-left);\n    }\n  `,\n  { moduleId: 'lumo-grid-tree-toggle' }\n);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: \"vaadin-grid-tree-icons\";\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQkAA0AAAAABrwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAECAAAABoAAAAcgHwa6EdERUYAAAPsAAAAHAAAAB4AJwAOT1MvMgAAAZQAAAA/AAAAYA8TBIJjbWFwAAAB8AAAAFUAAAFeGJvXWmdhc3AAAAPkAAAACAAAAAgAAAAQZ2x5ZgAAAlwAAABLAAAAhIrPOhFoZWFkAAABMAAAACsAAAA2DsJI02hoZWEAAAFcAAAAHQAAACQHAgPHaG10eAAAAdQAAAAZAAAAHAxVAgBsb2NhAAACSAAAABIAAAASAIAAVG1heHAAAAF8AAAAGAAAACAACgAFbmFtZQAAAqgAAAECAAACTwflzbdwb3N0AAADrAAAADYAAABZQ7Ajh3icY2BkYGAA4twv3Vfi+W2+MnCzMIDANSOmbGSa2YEZRHEwMIEoAAoiB6sAeJxjYGRgYD7w/wADAwsDCDA7MDAyoAI2AFEEAtIAAAB4nGNgZGBg4GBgZgDRDAxMDGgAAAGbABB4nGNgZp7JOIGBlYGBaSbTGQYGhn4IzfiawZiRkwEVMAqgCTA4MDA+38d84P8BBgdmIAapQZJVYGAEAGc/C54AeJxjYYAAxlAIzQTELAwMBxgZGB0ACy0BYwAAAHicY2BgYGaAYBkGRgYQiADyGMF8FgYbIM3FwMHABISMDArP9/3/+/8/WJXC8z0Q9v8nEp5gHVwMMMAIMo+RDYiZoQJMQIKJARUA7WBhGN4AACFKDtoAAAAAAAAAAAgACAAQABgAJgA0AEIAAHichYvBEYBADAKBVHBjBT4swl9KS2k05o0XHd/yW1hAfBFwCv9sIlJu3nZaNS3PXAaXXHI8Lge7DlzF7C1RgXc7xkK6+gvcD2URmQB4nK2RQWoCMRiFX3RUqtCli65yADModOMBLLgQSqHddRFnQghIAnEUvEA3vUUP0LP0Fj1G+yb8R5iEhO9/ef/7FwFwj28o9EthiVp4hBlehcfUP4Ur8o/wBAv8CU+xVFvhOR7UB7tUdUdlVRJ6HnHWTnhM/V24In8JT5j/KzzFSi2E53hUz7jCcrcIiDDwyKSW1JEct2HdIPH1DFytbUM0PofWdNk5E5oUqb/Q6HHBiVGZpfOXkyUMEj5IyBuNmYZQjBobfsuassvnkKLe1OuBBj0VQ8cRni2xjLWsHaM0jrjx3peYA0/vrdmUYqe9iy7bzrX6eNP7Jh1SijX+AaUVbB8AAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSruZMzlHaB0q4A76kLlwAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKxJigiD6mhFTNowGACmcA/8AAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-grid-tree-toggle>` is a helper element for the `<vaadin-grid>`\n * that provides toggle and level display functionality for the item tree.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column>\n *   <template class=\"header\">Package name</template>\n *   <template>\n *     <vaadin-grid-tree-toggle\n *         leaf=\"[[!item.hasChildren]]\"\n *         expanded=\"{{expanded}}\"\n *         level=\"[[level]]\">\n *       [[item.name]]\n *     </vaadin-grid-tree-toggle>\n *   </template>\n * </vaadin-grid-column>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `toggle` | The tree toggle icon\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * ---|---|---\n * `expanded` | When present, the toggle is expanded | :host\n * `leaf` | When present, the toggle is not expandable, i. e., the current item is a leaf | :host\n *\n * The following custom CSS properties are available on\n * the `<vaadin-grid-tree-toggle>` element:\n *\n * Custom CSS property | Description | Default\n * ---|---|---\n * `--vaadin-grid-tree-toggle-level-offset` | Visual offset step for each tree sublevel | `1em`\n *\n * @fires {CustomEvent} expanded-changed - Fired when the `expanded` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n */\nclass GridTreeToggleElement extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          align-items: baseline;\n\n          /* CSS API for :host */\n          --vaadin-grid-tree-toggle-level-offset: 1em;\n          --_collapsed-icon: '\\\\e7be\\\\00a0';\n        }\n\n        :host([dir='rtl']) {\n          --_collapsed-icon: '\\\\e7bd\\\\00a0';\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host(:not([leaf])) {\n          cursor: pointer;\n        }\n\n        #level-spacer,\n        [part='toggle'] {\n          flex: none;\n        }\n\n        #level-spacer {\n          display: inline-block;\n          width: calc(var(---level, '0') * var(--vaadin-grid-tree-toggle-level-offset));\n        }\n\n        [part='toggle']::before {\n          font-family: 'vaadin-grid-tree-icons';\n          line-height: 1em; /* make icon font metrics not affect baseline */\n        }\n\n        :host(:not([expanded])) [part='toggle']::before {\n          content: var(--_collapsed-icon);\n        }\n\n        :host([expanded]) [part='toggle']::before {\n          content: '\\\\e7bc\\\\00a0'; /* icon glyph + single non-breaking space */\n        }\n\n        :host([leaf]) [part='toggle'] {\n          visibility: hidden;\n        }\n      </style>\n\n      <span id=\"level-spacer\"></span>\n      <span part=\"toggle\"></span>\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-toggle';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Current level of the tree represented with a horizontal offset\n       * of the toggle button.\n       * @type {number}\n       */\n      level: {\n        type: Number,\n        value: 0,\n        observer: '_levelChanged'\n      },\n\n      /**\n       * Hides the toggle icon and disables toggling a tree sublevel.\n       * @type {boolean}\n       */\n      leaf: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n\n      /**\n       * Sublevel toggle state.\n       * @type {boolean}\n       */\n      expanded: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      }\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('click', (e) => this._onClick(e));\n  }\n\n  /** @private */\n  _onClick(e) {\n    if (this.leaf) {\n      return;\n    }\n    if (isFocusable(e.target)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.expanded = !this.expanded;\n  }\n\n  /** @private */\n  _levelChanged(level) {\n    const value = Number(level).toString();\n    this.style.setProperty('---level', value);\n  }\n}\n\ncustomElements.define(GridTreeToggleElement.is, GridTreeToggleElement);\n\n/**\n * @license\n * Copyright (c) 2020 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * `<vaadin-grid-tree-column>` is a helper element for the `<vaadin-grid>`\n * that provides default template and functionality for toggling tree/hierarchical items.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-tree-column path=\"name.first\"></vaadin-grid-tree-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n */\nclass GridTreeColumnElement extends GridColumnElement {\n  static get template() {\n    return html`\n      <template id=\"template\">\n        <vaadin-grid-tree-toggle\n          leaf=\"[[__isLeafItem(item, itemHasChildrenPath)]]\"\n          expanded=\"{{expanded}}\"\n          level=\"[[level]]\"\n        >\n          [[__getToggleContent(path, item)]]\n        </vaadin-grid-tree-toggle>\n      </template>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-tree-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used as text content for the tree toggle.\n       */\n      path: String,\n\n      /**\n       * JS Path of the property in the item that indicates whether the item has child items.\n       * @attr {string} item-has-children-path\n       */\n      itemHasChildrenPath: {\n        type: String,\n        value: 'children'\n      }\n    };\n  }\n\n  /** @private */\n  _prepareBodyTemplate() {\n    const template = this._prepareTemplatizer(this.$.template);\n    // needed to override the dataHost correctly in case internal template is used.\n    template.templatizer.dataHost = this;\n    return template;\n  }\n\n  __isLeafItem(item, itemHasChildrenPath) {\n    return !(item && item[itemHasChildrenPath]);\n  }\n\n  __getToggleContent(path, item) {\n    return path && this.get(path, item);\n  }\n}\n\ncustomElements.define(GridTreeColumnElement.is, GridTreeColumnElement);\n\nfunction CreateDomModules(options) {\r\n  // Asset Tree Grid\r\n  // const DomModuleGrid = document.createElement(\"dom-module\");\r\n  // DomModuleGrid.setAttribute(\"theme-for\", \"vaadin-grid\");\r\n  // DomModuleGrid.setAttribute(\"id\", `bh-tree__grid-style`);\r\n  // const innerHtmlStr = `<template><style>\r\n  //   :host {\r\n  //     --_lumo-grid-border-width: 0px;\r\n  //     background-color: transparent;\r\n  //   }\r\n  //   :host(:not([theme~='no-border'])) {\r\n  //     box-shadow: none!important;\r\n  //     border: none!important;\r\n  //   }\r\n  //   :host(:not([theme~='no-border'])) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\r\n  //     box-shadow: none;\r\n  //   }\r\n  //   :host(:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\r\n  //     background-image: none;\r\n  //   }\r\n  //   #header {\r\n  //     display: none;\r\n  //   }\r\n  //   [part~=\"body-cell\"] {\r\n  //     color: var(--color-text-common-secondary);\r\n  //     font-family: var(--font-family-body-small);\r\n  //     letter-spacing: var(--letter-spacing-body-small);\r\n  //     line-height: var(--font-line-height-body-small);\r\n  //     position: relative;\r\n  //     box-shadow: none;\r\n  //     min-width: 180px;\r\n  //     min-height: unset;\r\n  //   }\r\n  //   [part='toggle'] {\r\n  //       margin: none!important;\r\n  //   }\r\n  //   :host(:not([expanded])) [part='toggle']::before {\r\n  //     content: var(--lumo-icons-arrow-down);\r\n  //   }\r\n  //   :host([noverticalborder='true']) [part~=\"body-cell\"] {\r\n  //     border-right: none;\r\n  //   }\r\n  //   [part~=\"cell\"] {\r\n  //     background-color: transparent;\r\n  //   }\r\n  //   [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\r\n  //     font-weight: var(--font-weight-body-small);\r\n  //     font-size: var(--font-size-body-small);\r\n  //     position: relative;\r\n  //     padding-top:0 !important;\r\n  //     padding-bottom:0 !important;\r\n  //     cursor: pointer;\r\n  //     transition: all;\r\n  //     transition-timing-function: var(--motion-easing-fast);\r\n  //     transition-duration: var(--motion-duration-fast);\r\n  //   }\r\n  //   [part~=\"body-cell\"]:hover ::slotted(vaadin-grid-cell-content) {\r\n  //     color: var(--color-text-common-primary);\r\n  //   }\r\n  //   :host(:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\r\n  //     background-image: none;\r\n  //   }\r\n  //    :host(:not([theme~='no-border'])) [part~='row'][selected]  [part~=\"cell\"] ::slotted(vaadin-grid-cell-content){\r\n  //       color: var(--color-base-teal-500);\r\n  //       text-decoration: underline;\r\n  //       position: relative;\r\n  //       padding-top:0 !important;\r\n  //       padding-bottom:0 !important;\r\n  //       background: none;\r\n  //       box-shadow: none;\r\n  //   }\r\n  //   @media (hover: hover) {\r\n  //     :host(:hover) (:not([theme~='no-border'])) [part~='row'] [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\r\n  //       color: var(--color-text-common-primary);\r\n  //     }\r\n  //   }\r\n  //   :host([spacing=\"medium\"]) {\r\n  //     height: unset;\r\n  //   }\r\n  //   :host([spacing=\"medium\"][shouldoverflow=\"true\"]) {\r\n  //     height: 491px;\r\n  //   }\r\n  //   :host([spacing=\"medium\"]) [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\r\n  //     height: 26px;\r\n  //     padding: var(--spacing-padding-small) var(--spacing-padding-small);\r\n  //   }\r\n  //   :host(:not([theme~='no-row-borders'])) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\r\n  //     transform: translateY(5px);\r\n  //   }\r\n  // </style>\r\n  // </template>`;\r\n  // DomModuleGrid.innerHTML = innerHtmlStr;\r\n  // Grid Tree Column and Toggle\r\n  const DomModuleTreeCol = document.createElement(\"dom-module\");\r\n  DomModuleTreeCol.setAttribute(\"theme-for\", \"vaadin-grid-tree-toggle\");\r\n  DomModuleTreeCol.setAttribute(\"id\", `bh-tree__grid-toggle-style`);\r\n  const innerHtmlStrCol = `<template><style>\r\n\r\n    #level-spacer {\r\n      height: 26px;\r\n      border-right: 1px solid var(--color-border-common-primary);\r\n      position: relative;\r\n      left: -14px;\r\n    }\r\n\r\n    :host([expanded]) [part='toggle']::before {\r\n      content: '\\\\e5cc';\r\n      font-family: var(--font-family-icon-small);\r\n      color: var(--color-fill-control-selected);\r\n    }\r\n\r\n    :host(:not([expanded])) [part='toggle']::before {\r\n      content: '\\\\e5cc';\r\n      font-family: var(--font-family-icon-small);\r\n      color: var(--color-text-common-secondary);\r\n    }\r\n\r\n    :host([leaf]) [part='toggle'] {\r\n      visibility: hidden;\r\n    }\r\n\r\n  </style>\r\n  </template>`;\r\n  DomModuleTreeCol.innerHTML = innerHtmlStrCol;\r\n  return [\r\n    //DomModuleGrid,\r\n    DomModuleTreeCol,\r\n  ];\r\n}\n\nconst bhTreeCss = \".bh-tree__container{position:relative}\";\n\nconst BhTree = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.bhEventSelected = createEvent(this, \"bhEventSelected\", 7);\r\n  }\r\n  watchPayload() {\r\n    this.parseData();\r\n  }\r\n  watchOption() {\r\n    this.parseData();\r\n  }\r\n  parseData() {\r\n    this._payload =\r\n      typeof this.payload === \"string\"\r\n        ? JSON.parse(this.payload)\r\n        : this.payload;\r\n    let flattenedArray = [];\r\n    this.flattenNestedData(flattenedArray, this._payload.data);\r\n    this._payload.data = flattenedArray;\r\n    this._payload.length = flattenedArray.length;\r\n    this._option =\r\n      typeof this.option === \"string\"\r\n        ? JSON.parse(this.option)\r\n        : this.option;\r\n  }\r\n  flattenNestedData(flatArray, payloadData) {\r\n    //recursive function to flatten nested JSON structure\r\n    const flattenObject = function (item, uid, parentuid = '', level = 1) {\r\n      let newItemToReturn = {};\r\n      if (typeof (item) === 'object' && !Array.isArray(item)) {\r\n        const children = item === null || item === void 0 ? void 0 : item.children;\r\n        if (children && Array.isArray(children)) {\r\n          children.forEach((child, index) => {\r\n            const curItemId = `${level + 1}-${index}`;\r\n            newItemToReturn = flattenObject(child, curItemId, uid, level + 1);\r\n          });\r\n        }\r\n        else {\r\n          newItemToReturn = item;\r\n        }\r\n      }\r\n      //destruct item object into name and children values if present\r\n      const name = item.name;\r\n      const key = item.key;\r\n      const link = item.link;\r\n      let hasChildren = false;\r\n      if ((item.children) !== undefined) {\r\n        hasChildren = true;\r\n      }\r\n      flatArray.push({ name, key, uid, parentuid, level, link, hasChildren });\r\n      return newItemToReturn;\r\n    };\r\n    //process payload data\r\n    let topLevelItemId = 0;\r\n    payloadData.forEach((datum) => {\r\n      topLevelItemId++;\r\n      const uid = topLevelItemId.toString();\r\n      flattenObject(datum, uid);\r\n    });\r\n    return payloadData;\r\n  }\r\n  componentWillLoad() {\r\n    this.parseData();\r\n    if (!document.getElementById(\"bh-tree__grid-toggle-style\")) {\r\n      CreateDomModules().forEach((m) => {\r\n        document.body.appendChild(m);\r\n      });\r\n    }\r\n    if (!document.getElementById('bh-ui-toolkit__vaadin-grid')) {\r\n      CreateDomModules$1().forEach(m => {\r\n        document.body.appendChild(m);\r\n      });\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    const that = this;\r\n    that.el__grid.dataProvider = (params, callback) => {\r\n      var _a, _b, _c, _d;\r\n      let items = [];\r\n      //if no parentItem, then this is a parent/top level node\r\n      if (params.parentItem === undefined) {\r\n        let topLevel = (_b = (_a = this._payload) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.filter((item) => item.level === 1);\r\n        topLevel === null || topLevel === void 0 ? void 0 : topLevel.forEach((item) => {\r\n          items.push(item);\r\n        });\r\n      }\r\n      //otherwise, the parentItem is present, and this is a child node, so create a hierarchical structure of nodes underneath parent nodes\r\n      else {\r\n        let childItems = (_d = (_c = this._payload) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.filter((item) => item.parentuid === params.parentItem.uid);\r\n        childItems === null || childItems === void 0 ? void 0 : childItems.forEach((childItem) => {\r\n          items.push(childItem);\r\n        });\r\n      }\r\n      callback(items, items.length);\r\n    };\r\n    this.el__grid.addEventListener('active-item-changed', (event) => {\r\n      event.preventDefault();\r\n      const item = event.detail.value;\r\n      const itemLink = item.link;\r\n      if (itemLink !== \"\") {\r\n        this.el__grid.selectedItems = item ? [item] : [];\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    var _a;\r\n    return (h(Host, { class: \"bh-tree\", id: this.id }, h(\"div\", { class: \"bh-tree__container\", ref: (el) => {\r\n        this.el__container = el;\r\n      } }, h(\"vaadin-grid\", { gridtype: \"tree\", id: `${this.id}__vaadin-grid`, \"aria-label\": \"Asset Tree\", theme: \"no-border\", ref: (el) => {\r\n        this.el__grid = el;\r\n      }, heightByRows: true, spacing: ((_a = this._option) === null || _a === void 0 ? void 0 : _a.spacing) || \"medium\", onClick: (event) => {\r\n        var _a;\r\n        const item = (_a = this.el__grid.getEventContext(event)) === null || _a === void 0 ? void 0 : _a.item;\r\n        this.bhEventSelected.emit(item);\r\n      } }, h(\"vaadin-grid-tree-column\", { path: \"name\", \"item-has-children-path\": \"hasChildren\", resizable: true })))));\r\n  }\r\n  static get watchers() { return {\r\n    \"payload\": [\"watchPayload\"],\r\n    \"option\": [\"watchOption\"]\r\n  }; }\r\n};\r\nBhTree.style = bhTreeCss;\n\nexport { BhTree as bh_tree };\n","import { o as dom } from './iron-resizable-behavior-b5089143.js';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nconst IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n\nexport { IronScrollTargetBehavior as I };\n"],"sourceRoot":""}